// +----------------------------------------------------+
// + THIS FILE IS AUTO-GENERATED BY `cimgui_generator`. +
// +      FROM: https://github.com/PGZXB/imgui.cj       +
// +------------------- DO NOT EDIT. -------------------+

package capi_impl

foreign func ImBitVector_Clear(self: CPointer<ImBitVector>): Unit

foreign func ImBitVector_ClearBit(self: CPointer<ImBitVector>, n: Int32): Unit

foreign func ImBitVector_Create(self: CPointer<ImBitVector>, sz: Int32): Unit

foreign func ImBitVector_SetBit(self: CPointer<ImBitVector>, n: Int32): Unit

foreign func ImBitVector_TestBit(self: CPointer<ImBitVector>, n: Int32): Bool

foreign func ImColor_HSV(pOut: CPointer<ImColor>, h: Float32, s: Float32, v: Float32, a: Float32): Unit

foreign func ImColor_ImColor_Nil(): CPointer<ImColor>

foreign func ImColor_ImColor_Float(r: Float32, g: Float32, b: Float32, a: Float32): CPointer<ImColor>

foreign func ImColor_ImColor_Vec4(col: ImVec4): CPointer<ImColor>

foreign func ImColor_ImColor_Int(r: Int32, g: Int32, b: Int32, a: Int32): CPointer<ImColor>

foreign func ImColor_ImColor_U32(rgba: ImU32): CPointer<ImColor>

foreign func ImColor_SetHSV(self: CPointer<ImColor>, h: Float32, s: Float32, v: Float32, a: Float32): Unit

foreign func ImColor_destroy(self: CPointer<ImColor>): Unit

foreign func ImDrawCmd_GetTexID(self: CPointer<ImDrawCmd>): ImTextureID

foreign func ImDrawCmd_ImDrawCmd(): CPointer<ImDrawCmd>

foreign func ImDrawCmd_destroy(self: CPointer<ImDrawCmd>): Unit

foreign func ImDrawDataBuilder_ImDrawDataBuilder(): CPointer<ImDrawDataBuilder>

foreign func ImDrawDataBuilder_destroy(self: CPointer<ImDrawDataBuilder>): Unit

foreign func ImDrawData_AddDrawList(self: CPointer<ImDrawData>, draw_list: CPointer<ImDrawList>): Unit

foreign func ImDrawData_Clear(self: CPointer<ImDrawData>): Unit

foreign func ImDrawData_DeIndexAllBuffers(self: CPointer<ImDrawData>): Unit

foreign func ImDrawData_ImDrawData(): CPointer<ImDrawData>

foreign func ImDrawData_ScaleClipRects(self: CPointer<ImDrawData>, fb_scale: ImVec2): Unit

foreign func ImDrawData_destroy(self: CPointer<ImDrawData>): Unit

foreign func ImDrawListSharedData_ImDrawListSharedData(): CPointer<ImDrawListSharedData>

foreign func ImDrawListSharedData_SetCircleTessellationMaxError(self: CPointer<ImDrawListSharedData>, max_error: Float32): Unit

foreign func ImDrawListSharedData_destroy(self: CPointer<ImDrawListSharedData>): Unit

foreign func ImDrawListSplitter_Clear(self: CPointer<ImDrawListSplitter>): Unit

foreign func ImDrawListSplitter_ClearFreeMemory(self: CPointer<ImDrawListSplitter>): Unit

foreign func ImDrawListSplitter_ImDrawListSplitter(): CPointer<ImDrawListSplitter>

foreign func ImDrawListSplitter_Merge(self: CPointer<ImDrawListSplitter>, draw_list: CPointer<ImDrawList>): Unit

foreign func ImDrawListSplitter_SetCurrentChannel(self: CPointer<ImDrawListSplitter>, draw_list: CPointer<ImDrawList>, channel_idx: Int32): Unit

foreign func ImDrawListSplitter_Split(self: CPointer<ImDrawListSplitter>, draw_list: CPointer<ImDrawList>, count: Int32): Unit

foreign func ImDrawListSplitter_destroy(self: CPointer<ImDrawListSplitter>): Unit

foreign func ImDrawList_AddBezierCubic(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, col: ImU32, thickness: Float32, num_segments: Int32): Unit

foreign func ImDrawList_AddBezierQuadratic(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, col: ImU32, thickness: Float32, num_segments: Int32): Unit

foreign func ImDrawList_AddCallback(self: CPointer<ImDrawList>, callback: ImDrawCallback, callback_data: CPointer<Unit>): Unit

foreign func ImDrawList_AddCircle(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, col: ImU32, num_segments: Int32, thickness: Float32): Unit

foreign func ImDrawList_AddCircleFilled(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, col: ImU32, num_segments: Int32): Unit

foreign func ImDrawList_AddConcavePolyFilled(self: CPointer<ImDrawList>, points: CPointer<ImVec2>, num_points: Int32, col: ImU32): Unit

foreign func ImDrawList_AddConvexPolyFilled(self: CPointer<ImDrawList>, points: CPointer<ImVec2>, num_points: Int32, col: ImU32): Unit

foreign func ImDrawList_AddDrawCmd(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList_AddEllipse(self: CPointer<ImDrawList>, center: ImVec2, radius: ImVec2, col: ImU32, rot: Float32, num_segments: Int32, thickness: Float32): Unit

foreign func ImDrawList_AddEllipseFilled(self: CPointer<ImDrawList>, center: ImVec2, radius: ImVec2, col: ImU32, rot: Float32, num_segments: Int32): Unit

foreign func ImDrawList_AddImage(self: CPointer<ImDrawList>, user_texture_id: ImTextureID, p_min: ImVec2, p_max: ImVec2, uv_min: ImVec2, uv_max: ImVec2, col: ImU32): Unit

foreign func ImDrawList_AddImageQuad(self: CPointer<ImDrawList>, user_texture_id: ImTextureID, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, uv1: ImVec2, uv2: ImVec2, uv3: ImVec2, uv4: ImVec2, col: ImU32): Unit

foreign func ImDrawList_AddImageRounded(self: CPointer<ImDrawList>, user_texture_id: ImTextureID, p_min: ImVec2, p_max: ImVec2, uv_min: ImVec2, uv_max: ImVec2, col: ImU32, rounding: Float32, flags: ImDrawFlags): Unit

foreign func ImDrawList_AddLine(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, col: ImU32, thickness: Float32): Unit

foreign func ImDrawList_AddNgon(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, col: ImU32, num_segments: Int32, thickness: Float32): Unit

foreign func ImDrawList_AddNgonFilled(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, col: ImU32, num_segments: Int32): Unit

foreign func ImDrawList_AddPolyline(self: CPointer<ImDrawList>, points: CPointer<ImVec2>, num_points: Int32, col: ImU32, flags: ImDrawFlags, thickness: Float32): Unit

foreign func ImDrawList_AddQuad(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, col: ImU32, thickness: Float32): Unit

foreign func ImDrawList_AddQuadFilled(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, col: ImU32): Unit

foreign func ImDrawList_AddRect(self: CPointer<ImDrawList>, p_min: ImVec2, p_max: ImVec2, col: ImU32, rounding: Float32, flags: ImDrawFlags, thickness: Float32): Unit

foreign func ImDrawList_AddRectFilled(self: CPointer<ImDrawList>, p_min: ImVec2, p_max: ImVec2, col: ImU32, rounding: Float32, flags: ImDrawFlags): Unit

foreign func ImDrawList_AddRectFilledMultiColor(self: CPointer<ImDrawList>, p_min: ImVec2, p_max: ImVec2, col_upr_left: ImU32, col_upr_right: ImU32, col_bot_right: ImU32, col_bot_left: ImU32): Unit

foreign func ImDrawList_AddText_Vec2(self: CPointer<ImDrawList>, pos: ImVec2, col: ImU32, text_begin: CString, text_end: CString): Unit

foreign func ImDrawList_AddText_FontPtr(self: CPointer<ImDrawList>, font: CPointer<ImFont>, font_size: Float32, pos: ImVec2, col: ImU32, text_begin: CString, text_end: CString, wrap_width: Float32, cpu_fine_clip_rect: CPointer<ImVec4>): Unit

foreign func ImDrawList_AddTriangle(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, col: ImU32, thickness: Float32): Unit

foreign func ImDrawList_AddTriangleFilled(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, col: ImU32): Unit

foreign func ImDrawList_ChannelsMerge(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList_ChannelsSetCurrent(self: CPointer<ImDrawList>, n: Int32): Unit

foreign func ImDrawList_ChannelsSplit(self: CPointer<ImDrawList>, count: Int32): Unit

foreign func ImDrawList_CloneOutput(self: CPointer<ImDrawList>): CPointer<ImDrawList>

foreign func ImDrawList_GetClipRectMax(pOut: CPointer<ImVec2>, self: CPointer<ImDrawList>): Unit

foreign func ImDrawList_GetClipRectMin(pOut: CPointer<ImVec2>, self: CPointer<ImDrawList>): Unit

foreign func ImDrawList_ImDrawList(shared_data: CPointer<ImDrawListSharedData>): CPointer<ImDrawList>

foreign func ImDrawList_PathArcTo(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, a_min: Float32, a_max: Float32, num_segments: Int32): Unit

foreign func ImDrawList_PathArcToFast(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, a_min_of_12: Int32, a_max_of_12: Int32): Unit

foreign func ImDrawList_PathBezierCubicCurveTo(self: CPointer<ImDrawList>, p2: ImVec2, p3: ImVec2, p4: ImVec2, num_segments: Int32): Unit

foreign func ImDrawList_PathBezierQuadraticCurveTo(self: CPointer<ImDrawList>, p2: ImVec2, p3: ImVec2, num_segments: Int32): Unit

foreign func ImDrawList_PathClear(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList_PathEllipticalArcTo(self: CPointer<ImDrawList>, center: ImVec2, radius: ImVec2, rot: Float32, a_min: Float32, a_max: Float32, num_segments: Int32): Unit

foreign func ImDrawList_PathFillConcave(self: CPointer<ImDrawList>, col: ImU32): Unit

foreign func ImDrawList_PathFillConvex(self: CPointer<ImDrawList>, col: ImU32): Unit

foreign func ImDrawList_PathLineTo(self: CPointer<ImDrawList>, pos: ImVec2): Unit

foreign func ImDrawList_PathLineToMergeDuplicate(self: CPointer<ImDrawList>, pos: ImVec2): Unit

foreign func ImDrawList_PathRect(self: CPointer<ImDrawList>, rect_min: ImVec2, rect_max: ImVec2, rounding: Float32, flags: ImDrawFlags): Unit

foreign func ImDrawList_PathStroke(self: CPointer<ImDrawList>, col: ImU32, flags: ImDrawFlags, thickness: Float32): Unit

foreign func ImDrawList_PopClipRect(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList_PopTextureID(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList_PrimQuadUV(self: CPointer<ImDrawList>, a: ImVec2, b: ImVec2, c: ImVec2, d: ImVec2, uv_a: ImVec2, uv_b: ImVec2, uv_c: ImVec2, uv_d: ImVec2, col: ImU32): Unit

foreign func ImDrawList_PrimRect(self: CPointer<ImDrawList>, a: ImVec2, b: ImVec2, col: ImU32): Unit

foreign func ImDrawList_PrimRectUV(self: CPointer<ImDrawList>, a: ImVec2, b: ImVec2, uv_a: ImVec2, uv_b: ImVec2, col: ImU32): Unit

foreign func ImDrawList_PrimReserve(self: CPointer<ImDrawList>, idx_count: Int32, vtx_count: Int32): Unit

foreign func ImDrawList_PrimUnreserve(self: CPointer<ImDrawList>, idx_count: Int32, vtx_count: Int32): Unit

foreign func ImDrawList_PrimVtx(self: CPointer<ImDrawList>, pos: ImVec2, uv: ImVec2, col: ImU32): Unit

foreign func ImDrawList_PrimWriteIdx(self: CPointer<ImDrawList>, idx: ImDrawIdx): Unit

foreign func ImDrawList_PrimWriteVtx(self: CPointer<ImDrawList>, pos: ImVec2, uv: ImVec2, col: ImU32): Unit

foreign func ImDrawList_PushClipRect(self: CPointer<ImDrawList>, clip_rect_min: ImVec2, clip_rect_max: ImVec2, intersect_with_current_clip_rect: Bool): Unit

foreign func ImDrawList_PushClipRectFullScreen(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList_PushTextureID(self: CPointer<ImDrawList>, texture_id: ImTextureID): Unit

foreign func ImDrawList__CalcCircleAutoSegmentCount(self: CPointer<ImDrawList>, radius: Float32): Int32

foreign func ImDrawList__ClearFreeMemory(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList__OnChangedClipRect(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList__OnChangedTextureID(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList__OnChangedVtxOffset(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList__PathArcToFastEx(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, a_min_sample: Int32, a_max_sample: Int32, a_step: Int32): Unit

foreign func ImDrawList__PathArcToN(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, a_min: Float32, a_max: Float32, num_segments: Int32): Unit

foreign func ImDrawList__PopUnusedDrawCmd(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList__ResetForNewFrame(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList__TryMergeDrawCmds(self: CPointer<ImDrawList>): Unit

foreign func ImDrawList_destroy(self: CPointer<ImDrawList>): Unit

foreign func ImFontAtlasCustomRect_ImFontAtlasCustomRect(): CPointer<ImFontAtlasCustomRect>

foreign func ImFontAtlasCustomRect_IsPacked(self: CPointer<ImFontAtlasCustomRect>): Bool

foreign func ImFontAtlasCustomRect_destroy(self: CPointer<ImFontAtlasCustomRect>): Unit

foreign func ImFontAtlas_AddCustomRectFontGlyph(self: CPointer<ImFontAtlas>, font: CPointer<ImFont>, id: ImWchar, width: Int32, height: Int32, advance_x: Float32, offset: ImVec2): Int32

foreign func ImFontAtlas_AddCustomRectRegular(self: CPointer<ImFontAtlas>, width: Int32, height: Int32): Int32

foreign func ImFontAtlas_AddFont(self: CPointer<ImFontAtlas>, font_cfg: CPointer<ImFontConfig>): CPointer<ImFont>

foreign func ImFontAtlas_AddFontDefault(self: CPointer<ImFontAtlas>, font_cfg: CPointer<ImFontConfig>): CPointer<ImFont>

foreign func ImFontAtlas_AddFontFromFileTTF(self: CPointer<ImFontAtlas>, filename: CString, size_pixels: Float32, font_cfg: CPointer<ImFontConfig>, glyph_ranges: CPointer<ImWchar>): CPointer<ImFont>

foreign func ImFontAtlas_AddFontFromMemoryCompressedBase85TTF(self: CPointer<ImFontAtlas>, compressed_font_data_base85: CString, size_pixels: Float32, font_cfg: CPointer<ImFontConfig>, glyph_ranges: CPointer<ImWchar>): CPointer<ImFont>

foreign func ImFontAtlas_AddFontFromMemoryCompressedTTF(self: CPointer<ImFontAtlas>, compressed_font_data: CPointer<Unit>, compressed_font_data_size: Int32, size_pixels: Float32, font_cfg: CPointer<ImFontConfig>, glyph_ranges: CPointer<ImWchar>): CPointer<ImFont>

foreign func ImFontAtlas_AddFontFromMemoryTTF(self: CPointer<ImFontAtlas>, font_data: CPointer<Unit>, font_data_size: Int32, size_pixels: Float32, font_cfg: CPointer<ImFontConfig>, glyph_ranges: CPointer<ImWchar>): CPointer<ImFont>

foreign func ImFontAtlas_Build(self: CPointer<ImFontAtlas>): Bool

foreign func ImFontAtlas_CalcCustomRectUV(self: CPointer<ImFontAtlas>, rect: CPointer<ImFontAtlasCustomRect>, out_uv_min: CPointer<ImVec2>, out_uv_max: CPointer<ImVec2>): Unit

foreign func ImFontAtlas_Clear(self: CPointer<ImFontAtlas>): Unit

foreign func ImFontAtlas_ClearFonts(self: CPointer<ImFontAtlas>): Unit

foreign func ImFontAtlas_ClearInputData(self: CPointer<ImFontAtlas>): Unit

foreign func ImFontAtlas_ClearTexData(self: CPointer<ImFontAtlas>): Unit

foreign func ImFontAtlas_GetCustomRectByIndex(self: CPointer<ImFontAtlas>, index: Int32): CPointer<ImFontAtlasCustomRect>

foreign func ImFontAtlas_GetGlyphRangesChineseFull(self: CPointer<ImFontAtlas>): CPointer<ImWchar>

foreign func ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon(self: CPointer<ImFontAtlas>): CPointer<ImWchar>

foreign func ImFontAtlas_GetGlyphRangesCyrillic(self: CPointer<ImFontAtlas>): CPointer<ImWchar>

foreign func ImFontAtlas_GetGlyphRangesDefault(self: CPointer<ImFontAtlas>): CPointer<ImWchar>

foreign func ImFontAtlas_GetGlyphRangesGreek(self: CPointer<ImFontAtlas>): CPointer<ImWchar>

foreign func ImFontAtlas_GetGlyphRangesJapanese(self: CPointer<ImFontAtlas>): CPointer<ImWchar>

foreign func ImFontAtlas_GetGlyphRangesKorean(self: CPointer<ImFontAtlas>): CPointer<ImWchar>

foreign func ImFontAtlas_GetGlyphRangesThai(self: CPointer<ImFontAtlas>): CPointer<ImWchar>

foreign func ImFontAtlas_GetGlyphRangesVietnamese(self: CPointer<ImFontAtlas>): CPointer<ImWchar>

foreign func ImFontAtlas_GetMouseCursorTexData(self: CPointer<ImFontAtlas>, cursor: ImGuiMouseCursor, out_offset: CPointer<ImVec2>, out_size: CPointer<ImVec2>, out_uv_border: CPointer<ImVec2>, out_uv_fill: CPointer<ImVec2>): Bool

foreign func ImFontAtlas_GetTexDataAsAlpha8(self: CPointer<ImFontAtlas>, out_pixels: CPointer<CPointer<UInt8>>, out_width: CPointer<Int32>, out_height: CPointer<Int32>, out_bytes_per_pixel: CPointer<Int32>): Unit

foreign func ImFontAtlas_GetTexDataAsRGBA32(self: CPointer<ImFontAtlas>, out_pixels: CPointer<CPointer<UInt8>>, out_width: CPointer<Int32>, out_height: CPointer<Int32>, out_bytes_per_pixel: CPointer<Int32>): Unit

foreign func ImFontAtlas_ImFontAtlas(): CPointer<ImFontAtlas>

foreign func ImFontAtlas_IsBuilt(self: CPointer<ImFontAtlas>): Bool

foreign func ImFontAtlas_SetTexID(self: CPointer<ImFontAtlas>, id: ImTextureID): Unit

foreign func ImFontAtlas_destroy(self: CPointer<ImFontAtlas>): Unit

foreign func ImFontConfig_ImFontConfig(): CPointer<ImFontConfig>

foreign func ImFontConfig_destroy(self: CPointer<ImFontConfig>): Unit

foreign func ImFontGlyphRangesBuilder_AddChar(self: CPointer<ImFontGlyphRangesBuilder>, c: ImWchar): Unit

foreign func ImFontGlyphRangesBuilder_AddRanges(self: CPointer<ImFontGlyphRangesBuilder>, ranges: CPointer<ImWchar>): Unit

foreign func ImFontGlyphRangesBuilder_AddText(self: CPointer<ImFontGlyphRangesBuilder>, text: CString, text_end: CString): Unit

foreign func ImFontGlyphRangesBuilder_BuildRanges(self: CPointer<ImFontGlyphRangesBuilder>, out_ranges: CPointer<ImVector_ImWchar>): Unit

foreign func ImFontGlyphRangesBuilder_Clear(self: CPointer<ImFontGlyphRangesBuilder>): Unit

foreign func ImFontGlyphRangesBuilder_GetBit(self: CPointer<ImFontGlyphRangesBuilder>, n: UIntNative): Bool

foreign func ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder(): CPointer<ImFontGlyphRangesBuilder>

foreign func ImFontGlyphRangesBuilder_SetBit(self: CPointer<ImFontGlyphRangesBuilder>, n: UIntNative): Unit

foreign func ImFontGlyphRangesBuilder_destroy(self: CPointer<ImFontGlyphRangesBuilder>): Unit

foreign func ImFont_AddGlyph(self: CPointer<ImFont>, src_cfg: CPointer<ImFontConfig>, c: ImWchar, x0: Float32, y0: Float32, x1: Float32, y1: Float32, u0: Float32, v0: Float32, u1: Float32, v1: Float32, advance_x: Float32): Unit

foreign func ImFont_AddRemapChar(self: CPointer<ImFont>, dst: ImWchar, src: ImWchar, overwrite_dst: Bool): Unit

foreign func ImFont_BuildLookupTable(self: CPointer<ImFont>): Unit

foreign func ImFont_CalcTextSizeA(pOut: CPointer<ImVec2>, self: CPointer<ImFont>, size: Float32, max_width: Float32, wrap_width: Float32, text_begin: CString, text_end: CString, remaining: CPointer<CString>): Unit

foreign func ImFont_CalcWordWrapPositionA(self: CPointer<ImFont>, scale: Float32, text: CString, text_end: CString, wrap_width: Float32): CString

foreign func ImFont_ClearOutputData(self: CPointer<ImFont>): Unit

foreign func ImFont_FindGlyph(self: CPointer<ImFont>, c: ImWchar): CPointer<ImFontGlyph>

foreign func ImFont_FindGlyphNoFallback(self: CPointer<ImFont>, c: ImWchar): CPointer<ImFontGlyph>

foreign func ImFont_GetCharAdvance(self: CPointer<ImFont>, c: ImWchar): Float32

foreign func ImFont_GetDebugName(self: CPointer<ImFont>): CString

foreign func ImFont_GrowIndex(self: CPointer<ImFont>, new_size: Int32): Unit

foreign func ImFont_ImFont(): CPointer<ImFont>

foreign func ImFont_IsGlyphRangeUnused(self: CPointer<ImFont>, c_begin: Int32, c_last: Int32): Bool

foreign func ImFont_IsLoaded(self: CPointer<ImFont>): Bool

foreign func ImFont_RenderChar(self: CPointer<ImFont>, draw_list: CPointer<ImDrawList>, size: Float32, pos: ImVec2, col: ImU32, c: ImWchar): Unit

foreign func ImFont_RenderText(self: CPointer<ImFont>, draw_list: CPointer<ImDrawList>, size: Float32, pos: ImVec2, col: ImU32, clip_rect: ImVec4, text_begin: CString, text_end: CString, wrap_width: Float32, cpu_fine_clip: Bool): Unit

foreign func ImFont_SetGlyphVisible(self: CPointer<ImFont>, c: ImWchar, visible: Bool): Unit

foreign func ImFont_destroy(self: CPointer<ImFont>): Unit

foreign func ImGuiComboPreviewData_ImGuiComboPreviewData(): CPointer<ImGuiComboPreviewData>

foreign func ImGuiComboPreviewData_destroy(self: CPointer<ImGuiComboPreviewData>): Unit

foreign func ImGuiContextHook_ImGuiContextHook(): CPointer<ImGuiContextHook>

foreign func ImGuiContextHook_destroy(self: CPointer<ImGuiContextHook>): Unit

foreign func ImGuiContext_ImGuiContext(shared_font_atlas: CPointer<ImFontAtlas>): CPointer<ImGuiContext>

foreign func ImGuiContext_destroy(self: CPointer<ImGuiContext>): Unit

foreign func ImGuiDataVarInfo_GetVarPtr(self: CPointer<ImGuiDataVarInfo>, parent: CPointer<Unit>): CPointer<Unit>

foreign func ImGuiDebugAllocInfo_ImGuiDebugAllocInfo(): CPointer<ImGuiDebugAllocInfo>

foreign func ImGuiDebugAllocInfo_destroy(self: CPointer<ImGuiDebugAllocInfo>): Unit

foreign func ImGuiDockContext_ImGuiDockContext(): CPointer<ImGuiDockContext>

foreign func ImGuiDockContext_destroy(self: CPointer<ImGuiDockContext>): Unit

foreign func ImGuiDockNode_ImGuiDockNode(id: ImGuiID): CPointer<ImGuiDockNode>

foreign func ImGuiDockNode_IsCentralNode(self: CPointer<ImGuiDockNode>): Bool

foreign func ImGuiDockNode_IsDockSpace(self: CPointer<ImGuiDockNode>): Bool

foreign func ImGuiDockNode_IsEmpty(self: CPointer<ImGuiDockNode>): Bool

foreign func ImGuiDockNode_IsFloatingNode(self: CPointer<ImGuiDockNode>): Bool

foreign func ImGuiDockNode_IsHiddenTabBar(self: CPointer<ImGuiDockNode>): Bool

foreign func ImGuiDockNode_IsLeafNode(self: CPointer<ImGuiDockNode>): Bool

foreign func ImGuiDockNode_IsNoTabBar(self: CPointer<ImGuiDockNode>): Bool

foreign func ImGuiDockNode_IsRootNode(self: CPointer<ImGuiDockNode>): Bool

foreign func ImGuiDockNode_IsSplitNode(self: CPointer<ImGuiDockNode>): Bool

foreign func ImGuiDockNode_Rect(pOut: CPointer<ImRect>, self: CPointer<ImGuiDockNode>): Unit

foreign func ImGuiDockNode_SetLocalFlags(self: CPointer<ImGuiDockNode>, flags: ImGuiDockNodeFlags): Unit

foreign func ImGuiDockNode_UpdateMergedFlags(self: CPointer<ImGuiDockNode>): Unit

foreign func ImGuiDockNode_destroy(self: CPointer<ImGuiDockNode>): Unit

foreign func ImGuiIDStackTool_ImGuiIDStackTool(): CPointer<ImGuiIDStackTool>

foreign func ImGuiIDStackTool_destroy(self: CPointer<ImGuiIDStackTool>): Unit

foreign func ImGuiIO_AddFocusEvent(self: CPointer<ImGuiIO>, focused: Bool): Unit

foreign func ImGuiIO_AddInputCharacter(self: CPointer<ImGuiIO>, c: Int32): Unit

foreign func ImGuiIO_AddInputCharacterUTF16(self: CPointer<ImGuiIO>, c: ImWchar16): Unit

foreign func ImGuiIO_AddInputCharactersUTF8(self: CPointer<ImGuiIO>, str: CString): Unit

foreign func ImGuiIO_AddKeyAnalogEvent(self: CPointer<ImGuiIO>, key: ImGuiKey, down: Bool, v: Float32): Unit

foreign func ImGuiIO_AddKeyEvent(self: CPointer<ImGuiIO>, key: ImGuiKey, down: Bool): Unit

foreign func ImGuiIO_AddMouseButtonEvent(self: CPointer<ImGuiIO>, button: Int32, down: Bool): Unit

foreign func ImGuiIO_AddMousePosEvent(self: CPointer<ImGuiIO>, x: Float32, y: Float32): Unit

foreign func ImGuiIO_AddMouseSourceEvent(self: CPointer<ImGuiIO>, source: ImGuiMouseSource): Unit

foreign func ImGuiIO_AddMouseViewportEvent(self: CPointer<ImGuiIO>, id: ImGuiID): Unit

foreign func ImGuiIO_AddMouseWheelEvent(self: CPointer<ImGuiIO>, wheel_x: Float32, wheel_y: Float32): Unit

foreign func ImGuiIO_ClearEventsQueue(self: CPointer<ImGuiIO>): Unit

foreign func ImGuiIO_ClearInputKeys(self: CPointer<ImGuiIO>): Unit

foreign func ImGuiIO_ImGuiIO(): CPointer<ImGuiIO>

foreign func ImGuiIO_SetAppAcceptingEvents(self: CPointer<ImGuiIO>, accepting_events: Bool): Unit

foreign func ImGuiIO_SetKeyEventNativeData(self: CPointer<ImGuiIO>, key: ImGuiKey, native_keycode: Int32, native_scancode: Int32, native_legacy_index: Int32): Unit

foreign func ImGuiIO_destroy(self: CPointer<ImGuiIO>): Unit

foreign func ImGuiInputEvent_ImGuiInputEvent(): CPointer<ImGuiInputEvent>

foreign func ImGuiInputEvent_destroy(self: CPointer<ImGuiInputEvent>): Unit

foreign func ImGuiInputTextCallbackData_ClearSelection(self: CPointer<ImGuiInputTextCallbackData>): Unit

foreign func ImGuiInputTextCallbackData_DeleteChars(self: CPointer<ImGuiInputTextCallbackData>, pos: Int32, bytes_count: Int32): Unit

foreign func ImGuiInputTextCallbackData_HasSelection(self: CPointer<ImGuiInputTextCallbackData>): Bool

foreign func ImGuiInputTextCallbackData_ImGuiInputTextCallbackData(): CPointer<ImGuiInputTextCallbackData>

foreign func ImGuiInputTextCallbackData_InsertChars(self: CPointer<ImGuiInputTextCallbackData>, pos: Int32, text: CString, text_end: CString): Unit

foreign func ImGuiInputTextCallbackData_SelectAll(self: CPointer<ImGuiInputTextCallbackData>): Unit

foreign func ImGuiInputTextCallbackData_destroy(self: CPointer<ImGuiInputTextCallbackData>): Unit

foreign func ImGuiInputTextDeactivatedState_ClearFreeMemory(self: CPointer<ImGuiInputTextDeactivatedState>): Unit

foreign func ImGuiInputTextDeactivatedState_ImGuiInputTextDeactivatedState(): CPointer<ImGuiInputTextDeactivatedState>

foreign func ImGuiInputTextDeactivatedState_destroy(self: CPointer<ImGuiInputTextDeactivatedState>): Unit

foreign func ImGuiInputTextState_ClearFreeMemory(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiInputTextState_ClearSelection(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiInputTextState_ClearText(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiInputTextState_CursorAnimReset(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiInputTextState_CursorClamp(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiInputTextState_GetCursorPos(self: CPointer<ImGuiInputTextState>): Int32

foreign func ImGuiInputTextState_GetRedoAvailCount(self: CPointer<ImGuiInputTextState>): Int32

foreign func ImGuiInputTextState_GetSelectionEnd(self: CPointer<ImGuiInputTextState>): Int32

foreign func ImGuiInputTextState_GetSelectionStart(self: CPointer<ImGuiInputTextState>): Int32

foreign func ImGuiInputTextState_GetUndoAvailCount(self: CPointer<ImGuiInputTextState>): Int32

foreign func ImGuiInputTextState_HasSelection(self: CPointer<ImGuiInputTextState>): Bool

foreign func ImGuiInputTextState_ImGuiInputTextState(): CPointer<ImGuiInputTextState>

foreign func ImGuiInputTextState_OnKeyPressed(self: CPointer<ImGuiInputTextState>, key: Int32): Unit

foreign func ImGuiInputTextState_ReloadUserBufAndKeepSelection(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiInputTextState_ReloadUserBufAndMoveToEnd(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiInputTextState_ReloadUserBufAndSelectAll(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiInputTextState_SelectAll(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiInputTextState_destroy(self: CPointer<ImGuiInputTextState>): Unit

foreign func ImGuiKeyOwnerData_ImGuiKeyOwnerData(): CPointer<ImGuiKeyOwnerData>

foreign func ImGuiKeyOwnerData_destroy(self: CPointer<ImGuiKeyOwnerData>): Unit

foreign func ImGuiKeyRoutingData_ImGuiKeyRoutingData(): CPointer<ImGuiKeyRoutingData>

foreign func ImGuiKeyRoutingData_destroy(self: CPointer<ImGuiKeyRoutingData>): Unit

foreign func ImGuiKeyRoutingTable_Clear(self: CPointer<ImGuiKeyRoutingTable>): Unit

foreign func ImGuiKeyRoutingTable_ImGuiKeyRoutingTable(): CPointer<ImGuiKeyRoutingTable>

foreign func ImGuiKeyRoutingTable_destroy(self: CPointer<ImGuiKeyRoutingTable>): Unit

foreign func ImGuiLastItemData_ImGuiLastItemData(): CPointer<ImGuiLastItemData>

foreign func ImGuiLastItemData_destroy(self: CPointer<ImGuiLastItemData>): Unit

foreign func ImGuiListClipperData_ImGuiListClipperData(): CPointer<ImGuiListClipperData>

foreign func ImGuiListClipperData_Reset(self: CPointer<ImGuiListClipperData>, clipper: CPointer<ImGuiListClipper>): Unit

foreign func ImGuiListClipperData_destroy(self: CPointer<ImGuiListClipperData>): Unit

foreign func ImGuiListClipperRange_FromIndices(min: Int32, max: Int32): ImGuiListClipperRange

foreign func ImGuiListClipperRange_FromPositions(y1: Float32, y2: Float32, off_min: Int32, off_max: Int32): ImGuiListClipperRange

foreign func ImGuiListClipper_Begin(self: CPointer<ImGuiListClipper>, items_count: Int32, items_height: Float32): Unit

foreign func ImGuiListClipper_End(self: CPointer<ImGuiListClipper>): Unit

foreign func ImGuiListClipper_ImGuiListClipper(): CPointer<ImGuiListClipper>

foreign func ImGuiListClipper_IncludeItemByIndex(self: CPointer<ImGuiListClipper>, item_index: Int32): Unit

foreign func ImGuiListClipper_IncludeItemsByIndex(self: CPointer<ImGuiListClipper>, item_begin: Int32, item_end: Int32): Unit

foreign func ImGuiListClipper_Step(self: CPointer<ImGuiListClipper>): Bool

foreign func ImGuiListClipper_destroy(self: CPointer<ImGuiListClipper>): Unit

foreign func ImGuiMenuColumns_CalcNextTotalWidth(self: CPointer<ImGuiMenuColumns>, update_offsets: Bool): Unit

foreign func ImGuiMenuColumns_DeclColumns(self: CPointer<ImGuiMenuColumns>, w_icon: Float32, w_label: Float32, w_shortcut: Float32, w_mark: Float32): Float32

foreign func ImGuiMenuColumns_ImGuiMenuColumns(): CPointer<ImGuiMenuColumns>

foreign func ImGuiMenuColumns_Update(self: CPointer<ImGuiMenuColumns>, spacing: Float32, window_reappearing: Bool): Unit

foreign func ImGuiMenuColumns_destroy(self: CPointer<ImGuiMenuColumns>): Unit

foreign func ImGuiNavItemData_Clear(self: CPointer<ImGuiNavItemData>): Unit

foreign func ImGuiNavItemData_ImGuiNavItemData(): CPointer<ImGuiNavItemData>

foreign func ImGuiNavItemData_destroy(self: CPointer<ImGuiNavItemData>): Unit

foreign func ImGuiNextItemData_ClearFlags(self: CPointer<ImGuiNextItemData>): Unit

foreign func ImGuiNextItemData_ImGuiNextItemData(): CPointer<ImGuiNextItemData>

foreign func ImGuiNextItemData_destroy(self: CPointer<ImGuiNextItemData>): Unit

foreign func ImGuiNextWindowData_ClearFlags(self: CPointer<ImGuiNextWindowData>): Unit

foreign func ImGuiNextWindowData_ImGuiNextWindowData(): CPointer<ImGuiNextWindowData>

foreign func ImGuiNextWindowData_destroy(self: CPointer<ImGuiNextWindowData>): Unit

foreign func ImGuiOldColumnData_ImGuiOldColumnData(): CPointer<ImGuiOldColumnData>

foreign func ImGuiOldColumnData_destroy(self: CPointer<ImGuiOldColumnData>): Unit

foreign func ImGuiOldColumns_ImGuiOldColumns(): CPointer<ImGuiOldColumns>

foreign func ImGuiOldColumns_destroy(self: CPointer<ImGuiOldColumns>): Unit

foreign func ImGuiOnceUponAFrame_ImGuiOnceUponAFrame(): CPointer<ImGuiOnceUponAFrame>

foreign func ImGuiOnceUponAFrame_destroy(self: CPointer<ImGuiOnceUponAFrame>): Unit

foreign func ImGuiPayload_Clear(self: CPointer<ImGuiPayload>): Unit

foreign func ImGuiPayload_ImGuiPayload(): CPointer<ImGuiPayload>

foreign func ImGuiPayload_IsDataType(self: CPointer<ImGuiPayload>, `type`: CString): Bool

foreign func ImGuiPayload_IsDelivery(self: CPointer<ImGuiPayload>): Bool

foreign func ImGuiPayload_IsPreview(self: CPointer<ImGuiPayload>): Bool

foreign func ImGuiPayload_destroy(self: CPointer<ImGuiPayload>): Unit

foreign func ImGuiPlatformIO_ImGuiPlatformIO(): CPointer<ImGuiPlatformIO>

foreign func ImGuiPlatformIO_destroy(self: CPointer<ImGuiPlatformIO>): Unit

foreign func ImGuiPlatformImeData_ImGuiPlatformImeData(): CPointer<ImGuiPlatformImeData>

foreign func ImGuiPlatformImeData_destroy(self: CPointer<ImGuiPlatformImeData>): Unit

foreign func ImGuiPlatformMonitor_ImGuiPlatformMonitor(): CPointer<ImGuiPlatformMonitor>

foreign func ImGuiPlatformMonitor_destroy(self: CPointer<ImGuiPlatformMonitor>): Unit

foreign func ImGuiPopupData_ImGuiPopupData(): CPointer<ImGuiPopupData>

foreign func ImGuiPopupData_destroy(self: CPointer<ImGuiPopupData>): Unit

foreign func ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr(ptr: CPointer<Unit>): CPointer<ImGuiPtrOrIndex>

foreign func ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int(index: Int32): CPointer<ImGuiPtrOrIndex>

foreign func ImGuiPtrOrIndex_destroy(self: CPointer<ImGuiPtrOrIndex>): Unit

foreign func ImGuiSettingsHandler_ImGuiSettingsHandler(): CPointer<ImGuiSettingsHandler>

foreign func ImGuiSettingsHandler_destroy(self: CPointer<ImGuiSettingsHandler>): Unit

foreign func ImGuiStackLevelInfo_ImGuiStackLevelInfo(): CPointer<ImGuiStackLevelInfo>

foreign func ImGuiStackLevelInfo_destroy(self: CPointer<ImGuiStackLevelInfo>): Unit

foreign func ImGuiStackSizes_CompareWithContextState(self: CPointer<ImGuiStackSizes>, ctx: CPointer<ImGuiContext>): Unit

foreign func ImGuiStackSizes_ImGuiStackSizes(): CPointer<ImGuiStackSizes>

foreign func ImGuiStackSizes_SetToContextState(self: CPointer<ImGuiStackSizes>, ctx: CPointer<ImGuiContext>): Unit

foreign func ImGuiStackSizes_destroy(self: CPointer<ImGuiStackSizes>): Unit

foreign func ImGuiStoragePair_ImGuiStoragePair_Int(_key: ImGuiID, _val: Int32): CPointer<ImGuiStoragePair>

foreign func ImGuiStoragePair_ImGuiStoragePair_Float(_key: ImGuiID, _val: Float32): CPointer<ImGuiStoragePair>

foreign func ImGuiStoragePair_ImGuiStoragePair_Ptr(_key: ImGuiID, _val: CPointer<Unit>): CPointer<ImGuiStoragePair>

foreign func ImGuiStoragePair_destroy(self: CPointer<ImGuiStoragePair>): Unit

foreign func ImGuiStorage_BuildSortByKey(self: CPointer<ImGuiStorage>): Unit

foreign func ImGuiStorage_Clear(self: CPointer<ImGuiStorage>): Unit

foreign func ImGuiStorage_GetBool(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Bool): Bool

foreign func ImGuiStorage_GetBoolRef(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Bool): CPointer<Bool>

foreign func ImGuiStorage_GetFloat(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Float32): Float32

foreign func ImGuiStorage_GetFloatRef(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Float32): CPointer<Float32>

foreign func ImGuiStorage_GetInt(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Int32): Int32

foreign func ImGuiStorage_GetIntRef(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Int32): CPointer<Int32>

foreign func ImGuiStorage_GetVoidPtr(self: CPointer<ImGuiStorage>, key: ImGuiID): CPointer<Unit>

foreign func ImGuiStorage_GetVoidPtrRef(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: CPointer<Unit>): CPointer<CPointer<Unit>>

foreign func ImGuiStorage_SetAllInt(self: CPointer<ImGuiStorage>, val: Int32): Unit

foreign func ImGuiStorage_SetBool(self: CPointer<ImGuiStorage>, key: ImGuiID, val: Bool): Unit

foreign func ImGuiStorage_SetFloat(self: CPointer<ImGuiStorage>, key: ImGuiID, val: Float32): Unit

foreign func ImGuiStorage_SetInt(self: CPointer<ImGuiStorage>, key: ImGuiID, val: Int32): Unit

foreign func ImGuiStorage_SetVoidPtr(self: CPointer<ImGuiStorage>, key: ImGuiID, val: CPointer<Unit>): Unit

foreign func ImGuiStyleMod_ImGuiStyleMod_Int(idx: ImGuiStyleVar, v: Int32): CPointer<ImGuiStyleMod>

foreign func ImGuiStyleMod_ImGuiStyleMod_Float(idx: ImGuiStyleVar, v: Float32): CPointer<ImGuiStyleMod>

foreign func ImGuiStyleMod_ImGuiStyleMod_Vec2(idx: ImGuiStyleVar, v: ImVec2): CPointer<ImGuiStyleMod>

foreign func ImGuiStyleMod_destroy(self: CPointer<ImGuiStyleMod>): Unit

foreign func ImGuiStyle_ImGuiStyle(): CPointer<ImGuiStyle>

foreign func ImGuiStyle_ScaleAllSizes(self: CPointer<ImGuiStyle>, scale_factor: Float32): Unit

foreign func ImGuiStyle_destroy(self: CPointer<ImGuiStyle>): Unit

foreign func ImGuiTabBar_ImGuiTabBar(): CPointer<ImGuiTabBar>

foreign func ImGuiTabBar_destroy(self: CPointer<ImGuiTabBar>): Unit

foreign func ImGuiTabItem_ImGuiTabItem(): CPointer<ImGuiTabItem>

foreign func ImGuiTabItem_destroy(self: CPointer<ImGuiTabItem>): Unit

foreign func ImGuiTableColumnSettings_ImGuiTableColumnSettings(): CPointer<ImGuiTableColumnSettings>

foreign func ImGuiTableColumnSettings_destroy(self: CPointer<ImGuiTableColumnSettings>): Unit

foreign func ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs(): CPointer<ImGuiTableColumnSortSpecs>

foreign func ImGuiTableColumnSortSpecs_destroy(self: CPointer<ImGuiTableColumnSortSpecs>): Unit

foreign func ImGuiTableColumn_ImGuiTableColumn(): CPointer<ImGuiTableColumn>

foreign func ImGuiTableColumn_destroy(self: CPointer<ImGuiTableColumn>): Unit

foreign func ImGuiTableInstanceData_ImGuiTableInstanceData(): CPointer<ImGuiTableInstanceData>

foreign func ImGuiTableInstanceData_destroy(self: CPointer<ImGuiTableInstanceData>): Unit

foreign func ImGuiTableSettings_GetColumnSettings(self: CPointer<ImGuiTableSettings>): CPointer<ImGuiTableColumnSettings>

foreign func ImGuiTableSettings_ImGuiTableSettings(): CPointer<ImGuiTableSettings>

foreign func ImGuiTableSettings_destroy(self: CPointer<ImGuiTableSettings>): Unit

foreign func ImGuiTableSortSpecs_ImGuiTableSortSpecs(): CPointer<ImGuiTableSortSpecs>

foreign func ImGuiTableSortSpecs_destroy(self: CPointer<ImGuiTableSortSpecs>): Unit

foreign func ImGuiTableTempData_ImGuiTableTempData(): CPointer<ImGuiTableTempData>

foreign func ImGuiTableTempData_destroy(self: CPointer<ImGuiTableTempData>): Unit

foreign func ImGuiTable_ImGuiTable(): CPointer<ImGuiTable>

foreign func ImGuiTable_destroy(self: CPointer<ImGuiTable>): Unit

foreign func ImGuiTextBuffer_ImGuiTextBuffer(): CPointer<ImGuiTextBuffer>

foreign func ImGuiTextBuffer_append(self: CPointer<ImGuiTextBuffer>, str: CString, str_end: CString): Unit

foreign func ImGuiTextBuffer_appendf(self: CPointer<ImGuiTextBuffer>, fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func ImGuiTextBuffer_appendfv(self: CPointer<ImGuiTextBuffer>, fmt: CString, args: va_list): Unit

foreign func ImGuiTextBuffer_begin(self: CPointer<ImGuiTextBuffer>): CString

foreign func ImGuiTextBuffer_c_str(self: CPointer<ImGuiTextBuffer>): CString

foreign func ImGuiTextBuffer_clear(self: CPointer<ImGuiTextBuffer>): Unit

foreign func ImGuiTextBuffer_destroy(self: CPointer<ImGuiTextBuffer>): Unit

foreign func ImGuiTextBuffer_empty(self: CPointer<ImGuiTextBuffer>): Bool

foreign func ImGuiTextBuffer_end(self: CPointer<ImGuiTextBuffer>): CString

foreign func ImGuiTextBuffer_reserve(self: CPointer<ImGuiTextBuffer>, capacity: Int32): Unit

foreign func ImGuiTextBuffer_size(self: CPointer<ImGuiTextBuffer>): Int32

foreign func ImGuiTextFilter_Build(self: CPointer<ImGuiTextFilter>): Unit

foreign func ImGuiTextFilter_Clear(self: CPointer<ImGuiTextFilter>): Unit

foreign func ImGuiTextFilter_Draw(self: CPointer<ImGuiTextFilter>, label: CString, width: Float32): Bool

foreign func ImGuiTextFilter_ImGuiTextFilter(default_filter: CString): CPointer<ImGuiTextFilter>

foreign func ImGuiTextFilter_IsActive(self: CPointer<ImGuiTextFilter>): Bool

foreign func ImGuiTextFilter_PassFilter(self: CPointer<ImGuiTextFilter>, text: CString, text_end: CString): Bool

foreign func ImGuiTextFilter_destroy(self: CPointer<ImGuiTextFilter>): Unit

foreign func ImGuiTextIndex_append(self: CPointer<ImGuiTextIndex>, base: CString, old_size: Int32, new_size: Int32): Unit

foreign func ImGuiTextIndex_clear(self: CPointer<ImGuiTextIndex>): Unit

foreign func ImGuiTextIndex_get_line_begin(self: CPointer<ImGuiTextIndex>, base: CString, n: Int32): CString

foreign func ImGuiTextIndex_get_line_end(self: CPointer<ImGuiTextIndex>, base: CString, n: Int32): CString

foreign func ImGuiTextIndex_size(self: CPointer<ImGuiTextIndex>): Int32

foreign func ImGuiTextRange_ImGuiTextRange_Nil(): CPointer<ImGuiTextRange>

foreign func ImGuiTextRange_ImGuiTextRange_Str(_b: CString, _e: CString): CPointer<ImGuiTextRange>

foreign func ImGuiTextRange_destroy(self: CPointer<ImGuiTextRange>): Unit

foreign func ImGuiTextRange_empty(self: CPointer<ImGuiTextRange>): Bool

foreign func ImGuiTextRange_split(self: CPointer<ImGuiTextRange>, separator: UInt8, out: CPointer<ImVector_ImGuiTextRange>): Unit

foreign func ImGuiTypingSelectState_Clear(self: CPointer<ImGuiTypingSelectState>): Unit

foreign func ImGuiTypingSelectState_ImGuiTypingSelectState(): CPointer<ImGuiTypingSelectState>

foreign func ImGuiTypingSelectState_destroy(self: CPointer<ImGuiTypingSelectState>): Unit

foreign func ImGuiViewportP_CalcWorkRectPos(pOut: CPointer<ImVec2>, self: CPointer<ImGuiViewportP>, off_min: ImVec2): Unit

foreign func ImGuiViewportP_CalcWorkRectSize(pOut: CPointer<ImVec2>, self: CPointer<ImGuiViewportP>, off_min: ImVec2, off_max: ImVec2): Unit

foreign func ImGuiViewportP_ClearRequestFlags(self: CPointer<ImGuiViewportP>): Unit

foreign func ImGuiViewportP_GetBuildWorkRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiViewportP>): Unit

foreign func ImGuiViewportP_GetMainRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiViewportP>): Unit

foreign func ImGuiViewportP_GetWorkRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiViewportP>): Unit

foreign func ImGuiViewportP_ImGuiViewportP(): CPointer<ImGuiViewportP>

foreign func ImGuiViewportP_UpdateWorkRect(self: CPointer<ImGuiViewportP>): Unit

foreign func ImGuiViewportP_destroy(self: CPointer<ImGuiViewportP>): Unit

foreign func ImGuiViewport_GetCenter(pOut: CPointer<ImVec2>, self: CPointer<ImGuiViewport>): Unit

foreign func ImGuiViewport_GetWorkCenter(pOut: CPointer<ImVec2>, self: CPointer<ImGuiViewport>): Unit

foreign func ImGuiViewport_ImGuiViewport(): CPointer<ImGuiViewport>

foreign func ImGuiViewport_destroy(self: CPointer<ImGuiViewport>): Unit

foreign func ImGuiWindowClass_ImGuiWindowClass(): CPointer<ImGuiWindowClass>

foreign func ImGuiWindowClass_destroy(self: CPointer<ImGuiWindowClass>): Unit

foreign func ImGuiWindowSettings_GetName(self: CPointer<ImGuiWindowSettings>): CString

foreign func ImGuiWindowSettings_ImGuiWindowSettings(): CPointer<ImGuiWindowSettings>

foreign func ImGuiWindowSettings_destroy(self: CPointer<ImGuiWindowSettings>): Unit

foreign func ImGuiWindow_CalcFontSize(self: CPointer<ImGuiWindow>): Float32

foreign func ImGuiWindow_GetID_Str(self: CPointer<ImGuiWindow>, str: CString, str_end: CString): ImGuiID

foreign func ImGuiWindow_GetID_Ptr(self: CPointer<ImGuiWindow>, ptr: CPointer<Unit>): ImGuiID

foreign func ImGuiWindow_GetID_Int(self: CPointer<ImGuiWindow>, n: Int32): ImGuiID

foreign func ImGuiWindow_GetIDFromRectangle(self: CPointer<ImGuiWindow>, r_abs: ImRect): ImGuiID

foreign func ImGuiWindow_ImGuiWindow(context: CPointer<ImGuiContext>, name: CString): CPointer<ImGuiWindow>

foreign func ImGuiWindow_MenuBarRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiWindow>): Unit

foreign func ImGuiWindow_Rect(pOut: CPointer<ImRect>, self: CPointer<ImGuiWindow>): Unit

foreign func ImGuiWindow_TitleBarRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiWindow>): Unit

foreign func ImGuiWindow_destroy(self: CPointer<ImGuiWindow>): Unit

foreign func ImRect_Add_Vec2(self: CPointer<ImRect>, p: ImVec2): Unit

foreign func ImRect_Add_Rect(self: CPointer<ImRect>, r: ImRect): Unit

foreign func ImRect_ClipWith(self: CPointer<ImRect>, r: ImRect): Unit

foreign func ImRect_ClipWithFull(self: CPointer<ImRect>, r: ImRect): Unit

foreign func ImRect_Contains_Vec2(self: CPointer<ImRect>, p: ImVec2): Bool

foreign func ImRect_Contains_Rect(self: CPointer<ImRect>, r: ImRect): Bool

foreign func ImRect_ContainsWithPad(self: CPointer<ImRect>, p: ImVec2, pad: ImVec2): Bool

foreign func ImRect_Expand_Float(self: CPointer<ImRect>, amount: Float32): Unit

foreign func ImRect_Expand_Vec2(self: CPointer<ImRect>, amount: ImVec2): Unit

foreign func ImRect_Floor(self: CPointer<ImRect>): Unit

foreign func ImRect_GetArea(self: CPointer<ImRect>): Float32

foreign func ImRect_GetBL(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit

foreign func ImRect_GetBR(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit

foreign func ImRect_GetCenter(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit

foreign func ImRect_GetHeight(self: CPointer<ImRect>): Float32

foreign func ImRect_GetSize(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit

foreign func ImRect_GetTL(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit

foreign func ImRect_GetTR(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit

foreign func ImRect_GetWidth(self: CPointer<ImRect>): Float32

foreign func ImRect_ImRect_Nil(): CPointer<ImRect>

foreign func ImRect_ImRect_Vec2(min: ImVec2, max: ImVec2): CPointer<ImRect>

foreign func ImRect_ImRect_Vec4(v: ImVec4): CPointer<ImRect>

foreign func ImRect_ImRect_Float(x1: Float32, y1: Float32, x2: Float32, y2: Float32): CPointer<ImRect>

foreign func ImRect_IsInverted(self: CPointer<ImRect>): Bool

foreign func ImRect_Overlaps(self: CPointer<ImRect>, r: ImRect): Bool

foreign func ImRect_ToVec4(pOut: CPointer<ImVec4>, self: CPointer<ImRect>): Unit

foreign func ImRect_Translate(self: CPointer<ImRect>, d: ImVec2): Unit

foreign func ImRect_TranslateX(self: CPointer<ImRect>, dx: Float32): Unit

foreign func ImRect_TranslateY(self: CPointer<ImRect>, dy: Float32): Unit

foreign func ImRect_destroy(self: CPointer<ImRect>): Unit

foreign func ImVec1_ImVec1_Nil(): CPointer<ImVec1>

foreign func ImVec1_ImVec1_Float(_x: Float32): CPointer<ImVec1>

foreign func ImVec1_destroy(self: CPointer<ImVec1>): Unit

foreign func ImVec2_ImVec2_Nil(): CPointer<ImVec2>

foreign func ImVec2_ImVec2_Float(_x: Float32, _y: Float32): CPointer<ImVec2>

foreign func ImVec2_destroy(self: CPointer<ImVec2>): Unit

foreign func ImVec2ih_ImVec2ih_Nil(): CPointer<ImVec2ih>

foreign func ImVec2ih_ImVec2ih_short(_x: Int16, _y: Int16): CPointer<ImVec2ih>

foreign func ImVec2ih_ImVec2ih_Vec2(rhs: ImVec2): CPointer<ImVec2ih>

foreign func ImVec2ih_destroy(self: CPointer<ImVec2ih>): Unit

foreign func ImVec4_ImVec4_Nil(): CPointer<ImVec4>

foreign func ImVec4_ImVec4_Float(_x: Float32, _y: Float32, _z: Float32, _w: Float32): CPointer<ImVec4>

foreign func ImVec4_destroy(self: CPointer<ImVec4>): Unit

foreign func igAcceptDragDropPayload(`type`: CString, flags: ImGuiDragDropFlags): CPointer<ImGuiPayload>

foreign func igActivateItemByID(id: ImGuiID): Unit

foreign func igAddContextHook(context: CPointer<ImGuiContext>, hook: CPointer<ImGuiContextHook>): ImGuiID

foreign func igAddDrawListToDrawDataEx(draw_data: CPointer<ImDrawData>, out_list: CPointer<ImVector_ImDrawListPtr>, draw_list: CPointer<ImDrawList>): Unit

foreign func igAddSettingsHandler(handler: CPointer<ImGuiSettingsHandler>): Unit

foreign func igAlignTextToFramePadding(): Unit

foreign func igArrowButton(str_id: CString, dir: ImGuiDir): Bool

foreign func igArrowButtonEx(str_id: CString, dir: ImGuiDir, size_arg: ImVec2, flags: ImGuiButtonFlags): Bool

foreign func igBegin(name: CString, p_open: CPointer<Bool>, flags: ImGuiWindowFlags): Bool

foreign func igBeginChild_Str(str_id: CString, size: ImVec2, child_flags: ImGuiChildFlags, window_flags: ImGuiWindowFlags): Bool

foreign func igBeginChild_ID(id: ImGuiID, size: ImVec2, child_flags: ImGuiChildFlags, window_flags: ImGuiWindowFlags): Bool

foreign func igBeginChildEx(name: CString, id: ImGuiID, size_arg: ImVec2, child_flags: ImGuiChildFlags, window_flags: ImGuiWindowFlags): Bool

foreign func igBeginColumns(str_id: CString, count: Int32, flags: ImGuiOldColumnFlags): Unit

foreign func igBeginCombo(label: CString, preview_value: CString, flags: ImGuiComboFlags): Bool

foreign func igBeginComboPopup(popup_id: ImGuiID, bb: ImRect, flags: ImGuiComboFlags): Bool

foreign func igBeginComboPreview(): Bool

foreign func igBeginDisabled(disabled: Bool): Unit

foreign func igBeginDisabledOverrideReenable(): Unit

foreign func igBeginDockableDragDropSource(window: CPointer<ImGuiWindow>): Unit

foreign func igBeginDockableDragDropTarget(window: CPointer<ImGuiWindow>): Unit

foreign func igBeginDocked(window: CPointer<ImGuiWindow>, p_open: CPointer<Bool>): Unit

foreign func igBeginDragDropSource(flags: ImGuiDragDropFlags): Bool

foreign func igBeginDragDropTarget(): Bool

foreign func igBeginDragDropTargetCustom(bb: ImRect, id: ImGuiID): Bool

foreign func igBeginGroup(): Unit

foreign func igBeginItemTooltip(): Bool

foreign func igBeginListBox(label: CString, size: ImVec2): Bool

foreign func igBeginMainMenuBar(): Bool

foreign func igBeginMenu(label: CString, enabled: Bool): Bool

foreign func igBeginMenuBar(): Bool

foreign func igBeginMenuEx(label: CString, icon: CString, enabled: Bool): Bool

foreign func igBeginPopup(str_id: CString, flags: ImGuiWindowFlags): Bool

foreign func igBeginPopupContextItem(str_id: CString, popup_flags: ImGuiPopupFlags): Bool

foreign func igBeginPopupContextVoid(str_id: CString, popup_flags: ImGuiPopupFlags): Bool

foreign func igBeginPopupContextWindow(str_id: CString, popup_flags: ImGuiPopupFlags): Bool

foreign func igBeginPopupEx(id: ImGuiID, extra_flags: ImGuiWindowFlags): Bool

foreign func igBeginPopupModal(name: CString, p_open: CPointer<Bool>, flags: ImGuiWindowFlags): Bool

foreign func igBeginTabBar(str_id: CString, flags: ImGuiTabBarFlags): Bool

foreign func igBeginTabBarEx(tab_bar: CPointer<ImGuiTabBar>, bb: ImRect, flags: ImGuiTabBarFlags): Bool

foreign func igBeginTabItem(label: CString, p_open: CPointer<Bool>, flags: ImGuiTabItemFlags): Bool

foreign func igBeginTable(str_id: CString, column: Int32, flags: ImGuiTableFlags, outer_size: ImVec2, inner_width: Float32): Bool

foreign func igBeginTableEx(name: CString, id: ImGuiID, columns_count: Int32, flags: ImGuiTableFlags, outer_size: ImVec2, inner_width: Float32): Bool

foreign func igBeginTooltip(): Bool

foreign func igBeginTooltipEx(tooltip_flags: ImGuiTooltipFlags, extra_window_flags: ImGuiWindowFlags): Bool

foreign func igBeginTooltipHidden(): Bool

foreign func igBeginViewportSideBar(name: CString, viewport: CPointer<ImGuiViewport>, dir: ImGuiDir, size: Float32, window_flags: ImGuiWindowFlags): Bool

foreign func igBringWindowToDisplayBack(window: CPointer<ImGuiWindow>): Unit

foreign func igBringWindowToDisplayBehind(window: CPointer<ImGuiWindow>, above_window: CPointer<ImGuiWindow>): Unit

foreign func igBringWindowToDisplayFront(window: CPointer<ImGuiWindow>): Unit

foreign func igBringWindowToFocusFront(window: CPointer<ImGuiWindow>): Unit

foreign func igBullet(): Unit

foreign func igBulletText(fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igBulletTextV(fmt: CString, args: va_list): Unit

foreign func igButton(label: CString, size: ImVec2): Bool

foreign func igButtonBehavior(bb: ImRect, id: ImGuiID, out_hovered: CPointer<Bool>, out_held: CPointer<Bool>, flags: ImGuiButtonFlags): Bool

foreign func igButtonEx(label: CString, size_arg: ImVec2, flags: ImGuiButtonFlags): Bool

foreign func igCalcItemSize(pOut: CPointer<ImVec2>, size: ImVec2, default_w: Float32, default_h: Float32): Unit

foreign func igCalcItemWidth(): Float32

foreign func igCalcRoundingFlagsForRectInRect(r_in: ImRect, r_outer: ImRect, threshold: Float32): ImDrawFlags

foreign func igCalcTextSize(pOut: CPointer<ImVec2>, text: CString, text_end: CString, hide_text_after_double_hash: Bool, wrap_width: Float32): Unit

foreign func igCalcTypematicRepeatAmount(t0: Float32, t1: Float32, repeat_delay: Float32, repeat_rate: Float32): Int32

foreign func igCalcWindowNextAutoFitSize(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>): Unit

foreign func igCalcWrapWidthForPos(pos: ImVec2, wrap_pos_x: Float32): Float32

foreign func igCallContextHooks(context: CPointer<ImGuiContext>, `type`: ImGuiContextHookType): Unit

foreign func igCheckbox(label: CString, v: CPointer<Bool>): Bool

foreign func igCheckboxFlags_IntPtr(label: CString, flags: CPointer<Int32>, flags_value: Int32): Bool

foreign func igCheckboxFlags_UintPtr(label: CString, flags: CPointer<Int32>, flags_value: Int32): Bool

foreign func igCheckboxFlags_S64Ptr(label: CString, flags: CPointer<ImS64>, flags_value: ImS64): Bool

foreign func igCheckboxFlags_U64Ptr(label: CString, flags: CPointer<ImU64>, flags_value: ImU64): Bool

foreign func igClearActiveID(): Unit

foreign func igClearDragDrop(): Unit

foreign func igClearIniSettings(): Unit

foreign func igClearWindowSettings(name: CString): Unit

foreign func igCloseButton(id: ImGuiID, pos: ImVec2): Bool

foreign func igCloseCurrentPopup(): Unit

foreign func igClosePopupToLevel(remaining: Int32, restore_focus_to_window_under_popup: Bool): Unit

foreign func igClosePopupsExceptModals(): Unit

foreign func igClosePopupsOverWindow(ref_window: CPointer<ImGuiWindow>, restore_focus_to_window_under_popup: Bool): Unit

foreign func igCollapseButton(id: ImGuiID, pos: ImVec2, dock_node: CPointer<ImGuiDockNode>): Bool

foreign func igCollapsingHeader_TreeNodeFlags(label: CString, flags: ImGuiTreeNodeFlags): Bool

foreign func igCollapsingHeader_BoolPtr(label: CString, p_visible: CPointer<Bool>, flags: ImGuiTreeNodeFlags): Bool

foreign func igColorButton(desc_id: CString, col: ImVec4, flags: ImGuiColorEditFlags, size: ImVec2): Bool

foreign func igColorConvertFloat4ToU32(`in`: ImVec4): ImU32

foreign func igColorConvertHSVtoRGB(h: Float32, s: Float32, v: Float32, out_r: CPointer<Float32>, out_g: CPointer<Float32>, out_b: CPointer<Float32>): Unit

foreign func igColorConvertRGBtoHSV(r: Float32, g: Float32, b: Float32, out_h: CPointer<Float32>, out_s: CPointer<Float32>, out_v: CPointer<Float32>): Unit

foreign func igColorConvertU32ToFloat4(pOut: CPointer<ImVec4>, `in`: ImU32): Unit

foreign func igColorEdit3(label: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags): Bool

foreign func igColorEdit4(label: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags): Bool

foreign func igColorEditOptionsPopup(col: CPointer<Float32>, flags: ImGuiColorEditFlags): Unit

foreign func igColorPicker3(label: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags): Bool

foreign func igColorPicker4(label: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags, ref_col: CPointer<Float32>): Bool

foreign func igColorPickerOptionsPopup(ref_col: CPointer<Float32>, flags: ImGuiColorEditFlags): Unit

foreign func igColorTooltip(text: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags): Unit

foreign func igColumns(count: Int32, id: CString, border: Bool): Unit

foreign func igCombo_Str_arr(label: CString, current_item: CPointer<Int32>, items: CPointer<CString>, items_count: Int32, popup_max_height_in_items: Int32): Bool

foreign func igCombo_Str(label: CString, current_item: CPointer<Int32>, items_separated_by_zeros: CString, popup_max_height_in_items: Int32): Bool

foreign func igCombo_FnStrPtr(label: CString, current_item: CPointer<Int32>, getter: CFunc<(user_data: CPointer<Unit>, idx: Int32) -> CString>, user_data: CPointer<Unit>, items_count: Int32, popup_max_height_in_items: Int32): Bool

foreign func igConvertSingleModFlagToKey(key: ImGuiKey): ImGuiKey

foreign func igCreateContext(shared_font_atlas: CPointer<ImFontAtlas>): CPointer<ImGuiContext>

foreign func igCreateNewWindowSettings(name: CString): CPointer<ImGuiWindowSettings>

foreign func igDataTypeApplyFromText(buf: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, format: CString, p_data_when_empty: CPointer<Unit>): Bool

foreign func igDataTypeApplyOp(data_type: ImGuiDataType, op: Int32, output: CPointer<Unit>, arg_1: CPointer<Unit>, arg_2: CPointer<Unit>): Unit

foreign func igDataTypeClamp(data_type: ImGuiDataType, p_data: CPointer<Unit>, p_min: CPointer<Unit>, p_max: CPointer<Unit>): Bool

foreign func igDataTypeCompare(data_type: ImGuiDataType, arg_1: CPointer<Unit>, arg_2: CPointer<Unit>): Int32

foreign func igDataTypeFormatString(buf: CString, buf_size: Int32, data_type: ImGuiDataType, p_data: CPointer<Unit>, format: CString): Int32

foreign func igDataTypeGetInfo(data_type: ImGuiDataType): CPointer<ImGuiDataTypeInfo>

foreign func igDebugAllocHook(info: CPointer<ImGuiDebugAllocInfo>, frame_count: Int32, ptr: CPointer<Unit>, size: UIntNative): Unit

foreign func igDebugBreakButton(label: CString, description_of_location: CString): Bool

foreign func igDebugBreakButtonTooltip(keyboard_only: Bool, description_of_location: CString): Unit

foreign func igDebugBreakClearData(): Unit

foreign func igDebugCheckVersionAndDataLayout(version_str: CString, sz_io: UIntNative, sz_style: UIntNative, sz_vec2: UIntNative, sz_vec4: UIntNative, sz_drawvert: UIntNative, sz_drawidx: UIntNative): Bool

foreign func igDebugDrawCursorPos(col: ImU32): Unit

foreign func igDebugDrawItemRect(col: ImU32): Unit

foreign func igDebugDrawLineExtents(col: ImU32): Unit

foreign func igDebugFlashStyleColor(idx: ImGuiCol): Unit

foreign func igDebugHookIdInfo(id: ImGuiID, data_type: ImGuiDataType, data_id: CPointer<Unit>, data_id_end: CPointer<Unit>): Unit

foreign func igDebugLocateItem(target_id: ImGuiID): Unit

foreign func igDebugLocateItemOnHover(target_id: ImGuiID): Unit

foreign func igDebugLocateItemResolveWithLastItem(): Unit

foreign func igDebugLog(fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igDebugLogV(fmt: CString, args: va_list): Unit

foreign func igDebugNodeColumns(columns: CPointer<ImGuiOldColumns>): Unit

foreign func igDebugNodeDockNode(node: CPointer<ImGuiDockNode>, label: CString): Unit

foreign func igDebugNodeDrawCmdShowMeshAndBoundingBox(out_draw_list: CPointer<ImDrawList>, draw_list: CPointer<ImDrawList>, draw_cmd: CPointer<ImDrawCmd>, show_mesh: Bool, show_aabb: Bool): Unit

foreign func igDebugNodeDrawList(window: CPointer<ImGuiWindow>, viewport: CPointer<ImGuiViewportP>, draw_list: CPointer<ImDrawList>, label: CString): Unit

foreign func igDebugNodeFont(font: CPointer<ImFont>): Unit

foreign func igDebugNodeFontGlyph(font: CPointer<ImFont>, glyph: CPointer<ImFontGlyph>): Unit

foreign func igDebugNodeInputTextState(state: CPointer<ImGuiInputTextState>): Unit

foreign func igDebugNodeStorage(storage: CPointer<ImGuiStorage>, label: CString): Unit

foreign func igDebugNodeTabBar(tab_bar: CPointer<ImGuiTabBar>, label: CString): Unit

foreign func igDebugNodeTable(table: CPointer<ImGuiTable>): Unit

foreign func igDebugNodeTableSettings(settings: CPointer<ImGuiTableSettings>): Unit

foreign func igDebugNodeTypingSelectState(state: CPointer<ImGuiTypingSelectState>): Unit

foreign func igDebugNodeViewport(viewport: CPointer<ImGuiViewportP>): Unit

foreign func igDebugNodeWindow(window: CPointer<ImGuiWindow>, label: CString): Unit

foreign func igDebugNodeWindowSettings(settings: CPointer<ImGuiWindowSettings>): Unit

foreign func igDebugNodeWindowsList(windows: CPointer<ImVector_ImGuiWindowPtr>, label: CString): Unit

foreign func igDebugNodeWindowsListByBeginStackParent(windows: CPointer<CPointer<ImGuiWindow>>, windows_size: Int32, parent_in_begin_stack: CPointer<ImGuiWindow>): Unit

foreign func igDebugRenderKeyboardPreview(draw_list: CPointer<ImDrawList>): Unit

foreign func igDebugRenderViewportThumbnail(draw_list: CPointer<ImDrawList>, viewport: CPointer<ImGuiViewportP>, bb: ImRect): Unit

foreign func igDebugStartItemPicker(): Unit

foreign func igDebugTextEncoding(text: CString): Unit

foreign func igDebugTextUnformattedWithLocateItem(line_begin: CString, line_end: CString): Unit

foreign func igDestroyContext(ctx: CPointer<ImGuiContext>): Unit

foreign func igDestroyPlatformWindow(viewport: CPointer<ImGuiViewportP>): Unit

foreign func igDestroyPlatformWindows(): Unit

foreign func igDockBuilderAddNode(node_id: ImGuiID, flags: ImGuiDockNodeFlags): ImGuiID

foreign func igDockBuilderCopyDockSpace(src_dockspace_id: ImGuiID, dst_dockspace_id: ImGuiID, in_window_remap_pairs: CPointer<ImVector_const_charPtr>): Unit

foreign func igDockBuilderCopyNode(src_node_id: ImGuiID, dst_node_id: ImGuiID, out_node_remap_pairs: CPointer<ImVector_ImGuiID>): Unit

foreign func igDockBuilderCopyWindowSettings(src_name: CString, dst_name: CString): Unit

foreign func igDockBuilderDockWindow(window_name: CString, node_id: ImGuiID): Unit

foreign func igDockBuilderFinish(node_id: ImGuiID): Unit

foreign func igDockBuilderGetCentralNode(node_id: ImGuiID): CPointer<ImGuiDockNode>

foreign func igDockBuilderGetNode(node_id: ImGuiID): CPointer<ImGuiDockNode>

foreign func igDockBuilderRemoveNode(node_id: ImGuiID): Unit

foreign func igDockBuilderRemoveNodeChildNodes(node_id: ImGuiID): Unit

foreign func igDockBuilderRemoveNodeDockedWindows(node_id: ImGuiID, clear_settings_refs: Bool): Unit

foreign func igDockBuilderSetNodePos(node_id: ImGuiID, pos: ImVec2): Unit

foreign func igDockBuilderSetNodeSize(node_id: ImGuiID, size: ImVec2): Unit

foreign func igDockBuilderSplitNode(node_id: ImGuiID, split_dir: ImGuiDir, size_ratio_for_node_at_dir: Float32, out_id_at_dir: CPointer<ImGuiID>, out_id_at_opposite_dir: CPointer<ImGuiID>): ImGuiID

foreign func igDockContextCalcDropPosForDocking(target: CPointer<ImGuiWindow>, target_node: CPointer<ImGuiDockNode>, payload_window: CPointer<ImGuiWindow>, payload_node: CPointer<ImGuiDockNode>, split_dir: ImGuiDir, split_outer: Bool, out_pos: CPointer<ImVec2>): Bool

foreign func igDockContextClearNodes(ctx: CPointer<ImGuiContext>, root_id: ImGuiID, clear_settings_refs: Bool): Unit

foreign func igDockContextEndFrame(ctx: CPointer<ImGuiContext>): Unit

foreign func igDockContextFindNodeByID(ctx: CPointer<ImGuiContext>, id: ImGuiID): CPointer<ImGuiDockNode>

foreign func igDockContextGenNodeID(ctx: CPointer<ImGuiContext>): ImGuiID

foreign func igDockContextInitialize(ctx: CPointer<ImGuiContext>): Unit

foreign func igDockContextNewFrameUpdateDocking(ctx: CPointer<ImGuiContext>): Unit

foreign func igDockContextNewFrameUpdateUndocking(ctx: CPointer<ImGuiContext>): Unit

foreign func igDockContextProcessUndockNode(ctx: CPointer<ImGuiContext>, node: CPointer<ImGuiDockNode>): Unit

foreign func igDockContextProcessUndockWindow(ctx: CPointer<ImGuiContext>, window: CPointer<ImGuiWindow>, clear_persistent_docking_ref: Bool): Unit

foreign func igDockContextQueueDock(ctx: CPointer<ImGuiContext>, target: CPointer<ImGuiWindow>, target_node: CPointer<ImGuiDockNode>, payload: CPointer<ImGuiWindow>, split_dir: ImGuiDir, split_ratio: Float32, split_outer: Bool): Unit

foreign func igDockContextQueueUndockNode(ctx: CPointer<ImGuiContext>, node: CPointer<ImGuiDockNode>): Unit

foreign func igDockContextQueueUndockWindow(ctx: CPointer<ImGuiContext>, window: CPointer<ImGuiWindow>): Unit

foreign func igDockContextRebuildNodes(ctx: CPointer<ImGuiContext>): Unit

foreign func igDockContextShutdown(ctx: CPointer<ImGuiContext>): Unit

foreign func igDockNodeBeginAmendTabBar(node: CPointer<ImGuiDockNode>): Bool

foreign func igDockNodeEndAmendTabBar(): Unit

foreign func igDockNodeGetDepth(node: CPointer<ImGuiDockNode>): Int32

foreign func igDockNodeGetRootNode(node: CPointer<ImGuiDockNode>): CPointer<ImGuiDockNode>

foreign func igDockNodeGetWindowMenuButtonId(node: CPointer<ImGuiDockNode>): ImGuiID

foreign func igDockNodeIsInHierarchyOf(node: CPointer<ImGuiDockNode>, parent: CPointer<ImGuiDockNode>): Bool

foreign func igDockNodeWindowMenuHandler_Default(ctx: CPointer<ImGuiContext>, node: CPointer<ImGuiDockNode>, tab_bar: CPointer<ImGuiTabBar>): Unit

foreign func igDockSpace(dockspace_id: ImGuiID, size: ImVec2, flags: ImGuiDockNodeFlags, window_class: CPointer<ImGuiWindowClass>): ImGuiID

foreign func igDockSpaceOverViewport(dockspace_id: ImGuiID, viewport: CPointer<ImGuiViewport>, flags: ImGuiDockNodeFlags, window_class: CPointer<ImGuiWindowClass>): ImGuiID

foreign func igDragBehavior(id: ImGuiID, data_type: ImGuiDataType, p_v: CPointer<Unit>, v_speed: Float32, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragFloat(label: CString, v: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragFloat2(label: CString, v: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragFloat3(label: CString, v: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragFloat4(label: CString, v: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragFloatRange2(label: CString, v_current_min: CPointer<Float32>, v_current_max: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, format_max: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragInt(label: CString, v: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragInt2(label: CString, v: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragInt3(label: CString, v: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragInt4(label: CString, v: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragIntRange2(label: CString, v_current_min: CPointer<Int32>, v_current_max: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, format_max: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragScalar(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, v_speed: Float32, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDragScalarN(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, components: Int32, v_speed: Float32, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igDummy(size: ImVec2): Unit

foreign func igEnd(): Unit

foreign func igEndChild(): Unit

foreign func igEndColumns(): Unit

foreign func igEndCombo(): Unit

foreign func igEndComboPreview(): Unit

foreign func igEndDisabled(): Unit

foreign func igEndDisabledOverrideReenable(): Unit

foreign func igEndDragDropSource(): Unit

foreign func igEndDragDropTarget(): Unit

foreign func igEndFrame(): Unit

foreign func igEndGroup(): Unit

foreign func igEndListBox(): Unit

foreign func igEndMainMenuBar(): Unit

foreign func igEndMenu(): Unit

foreign func igEndMenuBar(): Unit

foreign func igEndPopup(): Unit

foreign func igEndTabBar(): Unit

foreign func igEndTabItem(): Unit

foreign func igEndTable(): Unit

foreign func igEndTooltip(): Unit

foreign func igErrorCheckEndFrameRecover(log_callback: ImGuiErrorLogCallback, user_data: CPointer<Unit>): Unit

foreign func igErrorCheckEndWindowRecover(log_callback: ImGuiErrorLogCallback, user_data: CPointer<Unit>): Unit

foreign func igErrorCheckUsingSetCursorPosToExtendParentBoundaries(): Unit

foreign func igFindBestWindowPosForPopup(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>): Unit

foreign func igFindBestWindowPosForPopupEx(pOut: CPointer<ImVec2>, ref_pos: ImVec2, size: ImVec2, last_dir: CPointer<ImGuiDir>, r_outer: ImRect, r_avoid: ImRect, policy: ImGuiPopupPositionPolicy): Unit

foreign func igFindBlockingModal(window: CPointer<ImGuiWindow>): CPointer<ImGuiWindow>

foreign func igFindBottomMostVisibleWindowWithinBeginStack(window: CPointer<ImGuiWindow>): CPointer<ImGuiWindow>

foreign func igFindHoveredViewportFromPlatformWindowStack(mouse_platform_pos: ImVec2): CPointer<ImGuiViewportP>

foreign func igFindHoveredWindowEx(pos: ImVec2, find_first_and_in_any_viewport: Bool, out_hovered_window: CPointer<CPointer<ImGuiWindow>>, out_hovered_window_under_moving_window: CPointer<CPointer<ImGuiWindow>>): Unit

foreign func igFindOrCreateColumns(window: CPointer<ImGuiWindow>, id: ImGuiID): CPointer<ImGuiOldColumns>

foreign func igFindRenderedTextEnd(text: CString, text_end: CString): CString

foreign func igFindSettingsHandler(type_name: CString): CPointer<ImGuiSettingsHandler>

foreign func igFindViewportByID(id: ImGuiID): CPointer<ImGuiViewport>

foreign func igFindViewportByPlatformHandle(platform_handle: CPointer<Unit>): CPointer<ImGuiViewport>

foreign func igFindWindowByID(id: ImGuiID): CPointer<ImGuiWindow>

foreign func igFindWindowByName(name: CString): CPointer<ImGuiWindow>

foreign func igFindWindowDisplayIndex(window: CPointer<ImGuiWindow>): Int32

foreign func igFindWindowSettingsByID(id: ImGuiID): CPointer<ImGuiWindowSettings>

foreign func igFindWindowSettingsByWindow(window: CPointer<ImGuiWindow>): CPointer<ImGuiWindowSettings>

foreign func igFixupKeyChord(key_chord: ImGuiKeyChord): ImGuiKeyChord

foreign func igFocusItem(): Unit

foreign func igFocusTopMostWindowUnderOne(under_this_window: CPointer<ImGuiWindow>, ignore_window: CPointer<ImGuiWindow>, filter_viewport: CPointer<ImGuiViewport>, flags: ImGuiFocusRequestFlags): Unit

foreign func igFocusWindow(window: CPointer<ImGuiWindow>, flags: ImGuiFocusRequestFlags): Unit

foreign func igGcAwakeTransientWindowBuffers(window: CPointer<ImGuiWindow>): Unit

foreign func igGcCompactTransientMiscBuffers(): Unit

foreign func igGcCompactTransientWindowBuffers(window: CPointer<ImGuiWindow>): Unit

foreign func igGetActiveID(): ImGuiID

foreign func igGetAllocatorFunctions(p_alloc_func: CPointer<ImGuiMemAllocFunc>, p_free_func: CPointer<ImGuiMemFreeFunc>, p_user_data: CPointer<CPointer<Unit>>): Unit

foreign func igGetBackgroundDrawList_Nil(): CPointer<ImDrawList>

foreign func igGetBackgroundDrawList_ViewportPtr(viewport: CPointer<ImGuiViewport>): CPointer<ImDrawList>

foreign func igGetClipboardText(): CString

foreign func igGetColorU32_Col(idx: ImGuiCol, alpha_mul: Float32): ImU32

foreign func igGetColorU32_Vec4(col: ImVec4): ImU32

foreign func igGetColorU32_U32(col: ImU32, alpha_mul: Float32): ImU32

foreign func igGetColumnIndex(): Int32

foreign func igGetColumnNormFromOffset(columns: CPointer<ImGuiOldColumns>, offset: Float32): Float32

foreign func igGetColumnOffset(column_index: Int32): Float32

foreign func igGetColumnOffsetFromNorm(columns: CPointer<ImGuiOldColumns>, offset_norm: Float32): Float32

foreign func igGetColumnWidth(column_index: Int32): Float32

foreign func igGetColumnsCount(): Int32

foreign func igGetColumnsID(str_id: CString, count: Int32): ImGuiID

foreign func igGetContentRegionAvail(pOut: CPointer<ImVec2>): Unit

foreign func igGetContentRegionMax(pOut: CPointer<ImVec2>): Unit

foreign func igGetContentRegionMaxAbs(pOut: CPointer<ImVec2>): Unit

foreign func igGetCurrentContext(): CPointer<ImGuiContext>

foreign func igGetCurrentFocusScope(): ImGuiID

foreign func igGetCurrentTabBar(): CPointer<ImGuiTabBar>

foreign func igGetCurrentTable(): CPointer<ImGuiTable>

foreign func igGetCurrentWindow(): CPointer<ImGuiWindow>

foreign func igGetCurrentWindowRead(): CPointer<ImGuiWindow>

foreign func igGetCursorPos(pOut: CPointer<ImVec2>): Unit

foreign func igGetCursorPosX(): Float32

foreign func igGetCursorPosY(): Float32

foreign func igGetCursorScreenPos(pOut: CPointer<ImVec2>): Unit

foreign func igGetCursorStartPos(pOut: CPointer<ImVec2>): Unit

foreign func igGetDefaultFont(): CPointer<ImFont>

foreign func igGetDragDropPayload(): CPointer<ImGuiPayload>

foreign func igGetDrawData(): CPointer<ImDrawData>

foreign func igGetDrawListSharedData(): CPointer<ImDrawListSharedData>

foreign func igGetFocusID(): ImGuiID

foreign func igGetFont(): CPointer<ImFont>

foreign func igGetFontSize(): Float32

foreign func igGetFontTexUvWhitePixel(pOut: CPointer<ImVec2>): Unit

foreign func igGetForegroundDrawList_Nil(): CPointer<ImDrawList>

foreign func igGetForegroundDrawList_ViewportPtr(viewport: CPointer<ImGuiViewport>): CPointer<ImDrawList>

foreign func igGetForegroundDrawList_WindowPtr(window: CPointer<ImGuiWindow>): CPointer<ImDrawList>

foreign func igGetFrameCount(): Int32

foreign func igGetFrameHeight(): Float32

foreign func igGetFrameHeightWithSpacing(): Float32

foreign func igGetHoveredID(): ImGuiID

foreign func igGetID_Str(str_id: CString): ImGuiID

foreign func igGetID_StrStr(str_id_begin: CString, str_id_end: CString): ImGuiID

foreign func igGetID_Ptr(ptr_id: CPointer<Unit>): ImGuiID

foreign func igGetIDWithSeed_Str(str_id_begin: CString, str_id_end: CString, seed: ImGuiID): ImGuiID

foreign func igGetIDWithSeed_Int(n: Int32, seed: ImGuiID): ImGuiID

foreign func igGetIO(): CPointer<ImGuiIO>

foreign func igGetInputTextState(id: ImGuiID): CPointer<ImGuiInputTextState>

foreign func igGetItemFlags(): ImGuiItemFlags

foreign func igGetItemID(): ImGuiID

foreign func igGetItemRectMax(pOut: CPointer<ImVec2>): Unit

foreign func igGetItemRectMin(pOut: CPointer<ImVec2>): Unit

foreign func igGetItemRectSize(pOut: CPointer<ImVec2>): Unit

foreign func igGetItemStatusFlags(): ImGuiItemStatusFlags

foreign func igGetKeyChordName(key_chord: ImGuiKeyChord): CString

foreign func igGetKeyData_ContextPtr(ctx: CPointer<ImGuiContext>, key: ImGuiKey): CPointer<ImGuiKeyData>

foreign func igGetKeyData_Key(key: ImGuiKey): CPointer<ImGuiKeyData>

foreign func igGetKeyMagnitude2d(pOut: CPointer<ImVec2>, key_left: ImGuiKey, key_right: ImGuiKey, key_up: ImGuiKey, key_down: ImGuiKey): Unit

foreign func igGetKeyName(key: ImGuiKey): CString

foreign func igGetKeyOwner(key: ImGuiKey): ImGuiID

foreign func igGetKeyOwnerData(ctx: CPointer<ImGuiContext>, key: ImGuiKey): CPointer<ImGuiKeyOwnerData>

foreign func igGetKeyPressedAmount(key: ImGuiKey, repeat_delay: Float32, rate: Float32): Int32

foreign func igGetMainViewport(): CPointer<ImGuiViewport>

foreign func igGetMouseClickedCount(button: ImGuiMouseButton): Int32

foreign func igGetMouseCursor(): ImGuiMouseCursor

foreign func igGetMouseDragDelta(pOut: CPointer<ImVec2>, button: ImGuiMouseButton, lock_threshold: Float32): Unit

foreign func igGetMousePos(pOut: CPointer<ImVec2>): Unit

foreign func igGetMousePosOnOpeningCurrentPopup(pOut: CPointer<ImVec2>): Unit

foreign func igGetNavTweakPressedAmount(axis: ImGuiAxis): Float32

foreign func igGetPlatformIO(): CPointer<ImGuiPlatformIO>

foreign func igGetPopupAllowedExtentRect(pOut: CPointer<ImRect>, window: CPointer<ImGuiWindow>): Unit

foreign func igGetScrollMaxX(): Float32

foreign func igGetScrollMaxY(): Float32

foreign func igGetScrollX(): Float32

foreign func igGetScrollY(): Float32

foreign func igGetShortcutRoutingData(key_chord: ImGuiKeyChord): CPointer<ImGuiKeyRoutingData>

foreign func igGetStateStorage(): CPointer<ImGuiStorage>

foreign func igGetStyle(): CPointer<ImGuiStyle>

foreign func igGetStyleColorName(idx: ImGuiCol): CString

foreign func igGetStyleColorVec4(idx: ImGuiCol): CPointer<ImVec4>

foreign func igGetStyleVarInfo(idx: ImGuiStyleVar): CPointer<ImGuiDataVarInfo>

foreign func igGetTextLineHeight(): Float32

foreign func igGetTextLineHeightWithSpacing(): Float32

foreign func igGetTime(): Float64

foreign func igGetTopMostAndVisiblePopupModal(): CPointer<ImGuiWindow>

foreign func igGetTopMostPopupModal(): CPointer<ImGuiWindow>

foreign func igGetTreeNodeToLabelSpacing(): Float32

foreign func igGetTypematicRepeatRate(flags: ImGuiInputFlags, repeat_delay: CPointer<Float32>, repeat_rate: CPointer<Float32>): Unit

foreign func igGetTypingSelectRequest(flags: ImGuiTypingSelectFlags): CPointer<ImGuiTypingSelectRequest>

foreign func igGetVersion(): CString

foreign func igGetViewportPlatformMonitor(viewport: CPointer<ImGuiViewport>): CPointer<ImGuiPlatformMonitor>

foreign func igGetWindowAlwaysWantOwnTabBar(window: CPointer<ImGuiWindow>): Bool

foreign func igGetWindowContentRegionMax(pOut: CPointer<ImVec2>): Unit

foreign func igGetWindowContentRegionMin(pOut: CPointer<ImVec2>): Unit

foreign func igGetWindowDockID(): ImGuiID

foreign func igGetWindowDockNode(): CPointer<ImGuiDockNode>

foreign func igGetWindowDpiScale(): Float32

foreign func igGetWindowDrawList(): CPointer<ImDrawList>

foreign func igGetWindowHeight(): Float32

foreign func igGetWindowPos(pOut: CPointer<ImVec2>): Unit

foreign func igGetWindowResizeBorderID(window: CPointer<ImGuiWindow>, dir: ImGuiDir): ImGuiID

foreign func igGetWindowResizeCornerID(window: CPointer<ImGuiWindow>, n: Int32): ImGuiID

foreign func igGetWindowScrollbarID(window: CPointer<ImGuiWindow>, axis: ImGuiAxis): ImGuiID

foreign func igGetWindowScrollbarRect(pOut: CPointer<ImRect>, window: CPointer<ImGuiWindow>, axis: ImGuiAxis): Unit

foreign func igGetWindowSize(pOut: CPointer<ImVec2>): Unit

foreign func igGetWindowViewport(): CPointer<ImGuiViewport>

foreign func igGetWindowWidth(): Float32

foreign func igImAbs_Int(x: Int32): Int32

foreign func igImAbs_Float(x: Float32): Float32

foreign func igImAbs_double(x: Float64): Float64

foreign func igImAlphaBlendColors(col_a: ImU32, col_b: ImU32): ImU32

foreign func igImBezierCubicCalc(pOut: CPointer<ImVec2>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, t: Float32): Unit

foreign func igImBezierCubicClosestPoint(pOut: CPointer<ImVec2>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, p: ImVec2, num_segments: Int32): Unit

foreign func igImBezierCubicClosestPointCasteljau(pOut: CPointer<ImVec2>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, p: ImVec2, tess_tol: Float32): Unit

foreign func igImBezierQuadraticCalc(pOut: CPointer<ImVec2>, p1: ImVec2, p2: ImVec2, p3: ImVec2, t: Float32): Unit

foreign func igImBitArrayClearAllBits(arr: CPointer<ImU32>, bitcount: Int32): Unit

foreign func igImBitArrayClearBit(arr: CPointer<ImU32>, n: Int32): Unit

foreign func igImBitArrayGetStorageSizeInBytes(bitcount: Int32): UIntNative

foreign func igImBitArraySetBit(arr: CPointer<ImU32>, n: Int32): Unit

foreign func igImBitArraySetBitRange(arr: CPointer<ImU32>, n: Int32, n2: Int32): Unit

foreign func igImBitArrayTestBit(arr: CPointer<ImU32>, n: Int32): Bool

foreign func igImCharIsBlankA(c: UInt8): Bool

foreign func igImCharIsBlankW(c: Int32): Bool

foreign func igImClamp(pOut: CPointer<ImVec2>, v: ImVec2, mn: ImVec2, mx: ImVec2): Unit

foreign func igImDot(a: ImVec2, b: ImVec2): Float32

foreign func igImExponentialMovingAverage(avg: Float32, sample: Float32, n: Int32): Float32

foreign func igImFileClose(file: ImFileHandle): Bool

foreign func igImFileGetSize(file: ImFileHandle): ImU64

foreign func igImFileLoadToMemory(filename: CString, mode: CString, out_file_size: CPointer<UIntNative>, padding_bytes: Int32): CPointer<Unit>

foreign func igImFileOpen(filename: CString, mode: CString): ImFileHandle

foreign func igImFileRead(data: CPointer<Unit>, size: ImU64, count: ImU64, file: ImFileHandle): ImU64

foreign func igImFileWrite(data: CPointer<Unit>, size: ImU64, count: ImU64, file: ImFileHandle): ImU64

foreign func igImFloor_Float(f: Float32): Float32

foreign func igImFloor_Vec2(pOut: CPointer<ImVec2>, v: ImVec2): Unit

foreign func igImFontAtlasBuildFinish(atlas: CPointer<ImFontAtlas>): Unit

foreign func igImFontAtlasBuildInit(atlas: CPointer<ImFontAtlas>): Unit

foreign func igImFontAtlasBuildMultiplyCalcLookupTable(out_table: CPointer<UInt8>, in_multiply_factor: Float32): Unit

foreign func igImFontAtlasBuildMultiplyRectAlpha8(table: CPointer<UInt8>, pixels: CPointer<UInt8>, x: Int32, y: Int32, w: Int32, h: Int32, stride: Int32): Unit

foreign func igImFontAtlasBuildPackCustomRects(atlas: CPointer<ImFontAtlas>, stbrp_context_opaque: CPointer<Unit>): Unit

foreign func igImFontAtlasBuildRender32bppRectFromString(atlas: CPointer<ImFontAtlas>, x: Int32, y: Int32, w: Int32, h: Int32, in_str: CString, in_marker_char: UInt8, in_marker_pixel_value: Int32): Unit

foreign func igImFontAtlasBuildRender8bppRectFromString(atlas: CPointer<ImFontAtlas>, x: Int32, y: Int32, w: Int32, h: Int32, in_str: CString, in_marker_char: UInt8, in_marker_pixel_value: UInt8): Unit

foreign func igImFontAtlasBuildSetupFont(atlas: CPointer<ImFontAtlas>, font: CPointer<ImFont>, font_config: CPointer<ImFontConfig>, ascent: Float32, descent: Float32): Unit

foreign func igImFontAtlasGetBuilderForStbTruetype(): CPointer<ImFontBuilderIO>

foreign func igImFontAtlasUpdateConfigDataPointers(atlas: CPointer<ImFontAtlas>): Unit

foreign func igImFormatString(buf: CString, buf_size: UIntNative, fmt: CString, ...): Int32

foreign func igImFormatStringToTempBuffer(out_buf: CPointer<CString>, out_buf_end: CPointer<CString>, fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igImFormatStringToTempBufferV(out_buf: CPointer<CString>, out_buf_end: CPointer<CString>, fmt: CString, args: va_list): Unit

// Cangjie does not support `va_list`
// foreign func igImFormatStringV(buf: CString, buf_size: UIntNative, fmt: CString, args: va_list): Int32

foreign func igImHashData(data: CPointer<Unit>, data_size: UIntNative, seed: ImGuiID): ImGuiID

foreign func igImHashStr(data: CString, data_size: UIntNative, seed: ImGuiID): ImGuiID

foreign func igImInvLength(lhs: ImVec2, fail_value: Float32): Float32

foreign func igImIsFloatAboveGuaranteedIntegerPrecision(f: Float32): Bool

foreign func igImIsPowerOfTwo_Int(v: Int32): Bool

foreign func igImIsPowerOfTwo_U64(v: ImU64): Bool

foreign func igImLengthSqr_Vec2(lhs: ImVec2): Float32

foreign func igImLengthSqr_Vec4(lhs: ImVec4): Float32

foreign func igImLerp_Vec2Float(pOut: CPointer<ImVec2>, a: ImVec2, b: ImVec2, t: Float32): Unit

foreign func igImLerp_Vec2Vec2(pOut: CPointer<ImVec2>, a: ImVec2, b: ImVec2, t: ImVec2): Unit

foreign func igImLerp_Vec4(pOut: CPointer<ImVec4>, a: ImVec4, b: ImVec4, t: Float32): Unit

foreign func igImLineClosestPoint(pOut: CPointer<ImVec2>, a: ImVec2, b: ImVec2, p: ImVec2): Unit

foreign func igImLinearSweep(current: Float32, target: Float32, speed: Float32): Float32

foreign func igImLog_Float(x: Float32): Float32

foreign func igImLog_double(x: Float64): Float64

foreign func igImMax(pOut: CPointer<ImVec2>, lhs: ImVec2, rhs: ImVec2): Unit

foreign func igImMin(pOut: CPointer<ImVec2>, lhs: ImVec2, rhs: ImVec2): Unit

foreign func igImModPositive(a: Int32, b: Int32): Int32

foreign func igImMul(pOut: CPointer<ImVec2>, lhs: ImVec2, rhs: ImVec2): Unit

foreign func igImParseFormatFindEnd(format: CString): CString

foreign func igImParseFormatFindStart(format: CString): CString

foreign func igImParseFormatPrecision(format: CString, default_value: Int32): Int32

foreign func igImParseFormatSanitizeForPrinting(fmt_in: CString, fmt_out: CString, fmt_out_size: UIntNative): Unit

foreign func igImParseFormatSanitizeForScanning(fmt_in: CString, fmt_out: CString, fmt_out_size: UIntNative): CString

foreign func igImParseFormatTrimDecorations(format: CString, buf: CString, buf_size: UIntNative): CString

foreign func igImPow_Float(x: Float32, y: Float32): Float32

foreign func igImPow_double(x: Float64, y: Float64): Float64

foreign func igImQsort(base: CPointer<Unit>, count: UIntNative, size_of_element: UIntNative, compare_func: CFunc<(arg1: CPointer<Unit>, arg2: CPointer<Unit>) -> Int32>): Unit

foreign func igImRotate(pOut: CPointer<ImVec2>, v: ImVec2, cos_a: Float32, sin_a: Float32): Unit

foreign func igImRsqrt_Float(x: Float32): Float32

foreign func igImRsqrt_double(x: Float64): Float64

foreign func igImSaturate(f: Float32): Float32

foreign func igImSign_Float(x: Float32): Float32

foreign func igImSign_double(x: Float64): Float64

foreign func igImStrSkipBlank(str: CString): CString

foreign func igImStrTrimBlanks(str: CString): Unit

foreign func igImStrbolW(buf_mid_line: CPointer<ImWchar>, buf_begin: CPointer<ImWchar>): CPointer<ImWchar>

foreign func igImStrchrRange(str_begin: CString, str_end: CString, c: UInt8): CString

foreign func igImStrdup(str: CString): CString

foreign func igImStrdupcpy(dst: CString, p_dst_size: CPointer<UIntNative>, str: CString): CString

foreign func igImStreolRange(str: CString, str_end: CString): CString

foreign func igImStricmp(str1: CString, str2: CString): Int32

foreign func igImStristr(haystack: CString, haystack_end: CString, needle: CString, needle_end: CString): CString

foreign func igImStrlenW(str: CPointer<ImWchar>): Int32

foreign func igImStrncpy(dst: CString, src: CString, count: UIntNative): Unit

foreign func igImStrnicmp(str1: CString, str2: CString, count: UIntNative): Int32

foreign func igImTextCharFromUtf8(out_char: CPointer<Int32>, in_text: CString, in_text_end: CString): Int32

foreign func igImTextCharToUtf8(out_buf: CPointer<UInt8>, c: Int32): CString

foreign func igImTextCountCharsFromUtf8(in_text: CString, in_text_end: CString): Int32

foreign func igImTextCountLines(in_text: CString, in_text_end: CString): Int32

foreign func igImTextCountUtf8BytesFromChar(in_text: CString, in_text_end: CString): Int32

foreign func igImTextCountUtf8BytesFromStr(in_text: CPointer<ImWchar>, in_text_end: CPointer<ImWchar>): Int32

foreign func igImTextFindPreviousUtf8Codepoint(in_text_start: CString, in_text_curr: CString): CString

foreign func igImTextStrFromUtf8(out_buf: CPointer<ImWchar>, out_buf_size: Int32, in_text: CString, in_text_end: CString, in_remaining: CPointer<CString>): Int32

foreign func igImTextStrToUtf8(out_buf: CString, out_buf_size: Int32, in_text: CPointer<ImWchar>, in_text_end: CPointer<ImWchar>): Int32

foreign func igImToUpper(c: UInt8): UInt8

foreign func igImTriangleArea(a: ImVec2, b: ImVec2, c: ImVec2): Float32

foreign func igImTriangleBarycentricCoords(a: ImVec2, b: ImVec2, c: ImVec2, p: ImVec2, out_u: CPointer<Float32>, out_v: CPointer<Float32>, out_w: CPointer<Float32>): Unit

foreign func igImTriangleClosestPoint(pOut: CPointer<ImVec2>, a: ImVec2, b: ImVec2, c: ImVec2, p: ImVec2): Unit

foreign func igImTriangleContainsPoint(a: ImVec2, b: ImVec2, c: ImVec2, p: ImVec2): Bool

foreign func igImTriangleIsClockwise(a: ImVec2, b: ImVec2, c: ImVec2): Bool

foreign func igImTrunc_Float(f: Float32): Float32

foreign func igImTrunc_Vec2(pOut: CPointer<ImVec2>, v: ImVec2): Unit

foreign func igImUpperPowerOfTwo(v: Int32): Int32

foreign func igImage(user_texture_id: ImTextureID, image_size: ImVec2, uv0: ImVec2, uv1: ImVec2, tint_col: ImVec4, border_col: ImVec4): Unit

foreign func igImageButton(str_id: CString, user_texture_id: ImTextureID, image_size: ImVec2, uv0: ImVec2, uv1: ImVec2, bg_col: ImVec4, tint_col: ImVec4): Bool

foreign func igImageButtonEx(id: ImGuiID, texture_id: ImTextureID, image_size: ImVec2, uv0: ImVec2, uv1: ImVec2, bg_col: ImVec4, tint_col: ImVec4, flags: ImGuiButtonFlags): Bool

foreign func igIndent(indent_w: Float32): Unit

foreign func igInitialize(): Unit

foreign func igInputDouble(label: CString, v: CPointer<Float64>, step: Float64, step_fast: Float64, format: CString, flags: ImGuiInputTextFlags): Bool

foreign func igInputFloat(label: CString, v: CPointer<Float32>, step: Float32, step_fast: Float32, format: CString, flags: ImGuiInputTextFlags): Bool

foreign func igInputFloat2(label: CString, v: CPointer<Float32>, format: CString, flags: ImGuiInputTextFlags): Bool

foreign func igInputFloat3(label: CString, v: CPointer<Float32>, format: CString, flags: ImGuiInputTextFlags): Bool

foreign func igInputFloat4(label: CString, v: CPointer<Float32>, format: CString, flags: ImGuiInputTextFlags): Bool

foreign func igInputInt(label: CString, v: CPointer<Int32>, step: Int32, step_fast: Int32, flags: ImGuiInputTextFlags): Bool

foreign func igInputInt2(label: CString, v: CPointer<Int32>, flags: ImGuiInputTextFlags): Bool

foreign func igInputInt3(label: CString, v: CPointer<Int32>, flags: ImGuiInputTextFlags): Bool

foreign func igInputInt4(label: CString, v: CPointer<Int32>, flags: ImGuiInputTextFlags): Bool

foreign func igInputScalar(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, p_step: CPointer<Unit>, p_step_fast: CPointer<Unit>, format: CString, flags: ImGuiInputTextFlags): Bool

foreign func igInputScalarN(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, components: Int32, p_step: CPointer<Unit>, p_step_fast: CPointer<Unit>, format: CString, flags: ImGuiInputTextFlags): Bool

foreign func igInputText(label: CString, buf: CString, buf_size: UIntNative, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: CPointer<Unit>): Bool

foreign func igInputTextDeactivateHook(id: ImGuiID): Unit

foreign func igInputTextEx(label: CString, hint: CString, buf: CString, buf_size: Int32, size_arg: ImVec2, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: CPointer<Unit>): Bool

foreign func igInputTextMultiline(label: CString, buf: CString, buf_size: UIntNative, size: ImVec2, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: CPointer<Unit>): Bool

foreign func igInputTextWithHint(label: CString, hint: CString, buf: CString, buf_size: UIntNative, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: CPointer<Unit>): Bool

foreign func igInvisibleButton(str_id: CString, size: ImVec2, flags: ImGuiButtonFlags): Bool

foreign func igIsActiveIdUsingNavDir(dir: ImGuiDir): Bool

foreign func igIsAliasKey(key: ImGuiKey): Bool

foreign func igIsAnyItemActive(): Bool

foreign func igIsAnyItemFocused(): Bool

foreign func igIsAnyItemHovered(): Bool

foreign func igIsAnyMouseDown(): Bool

foreign func igIsClippedEx(bb: ImRect, id: ImGuiID): Bool

foreign func igIsDragDropActive(): Bool

foreign func igIsDragDropPayloadBeingAccepted(): Bool

foreign func igIsGamepadKey(key: ImGuiKey): Bool

foreign func igIsItemActivated(): Bool

foreign func igIsItemActive(): Bool

foreign func igIsItemClicked(mouse_button: ImGuiMouseButton): Bool

foreign func igIsItemDeactivated(): Bool

foreign func igIsItemDeactivatedAfterEdit(): Bool

foreign func igIsItemEdited(): Bool

foreign func igIsItemFocused(): Bool

foreign func igIsItemHovered(flags: ImGuiHoveredFlags): Bool

foreign func igIsItemToggledOpen(): Bool

foreign func igIsItemToggledSelection(): Bool

foreign func igIsItemVisible(): Bool

foreign func igIsKeyChordPressed_Nil(key_chord: ImGuiKeyChord): Bool

foreign func igIsKeyChordPressed_InputFlags(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool

foreign func igIsKeyDown_Nil(key: ImGuiKey): Bool

foreign func igIsKeyDown_ID(key: ImGuiKey, owner_id: ImGuiID): Bool

foreign func igIsKeyPressed_Bool(key: ImGuiKey, repeat: Bool): Bool

foreign func igIsKeyPressed_InputFlags(key: ImGuiKey, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool

foreign func igIsKeyReleased_Nil(key: ImGuiKey): Bool

foreign func igIsKeyReleased_ID(key: ImGuiKey, owner_id: ImGuiID): Bool

foreign func igIsKeyboardKey(key: ImGuiKey): Bool

foreign func igIsLegacyKey(key: ImGuiKey): Bool

foreign func igIsModKey(key: ImGuiKey): Bool

foreign func igIsMouseClicked_Bool(button: ImGuiMouseButton, repeat: Bool): Bool

foreign func igIsMouseClicked_InputFlags(button: ImGuiMouseButton, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool

foreign func igIsMouseDoubleClicked_Nil(button: ImGuiMouseButton): Bool

foreign func igIsMouseDoubleClicked_ID(button: ImGuiMouseButton, owner_id: ImGuiID): Bool

foreign func igIsMouseDown_Nil(button: ImGuiMouseButton): Bool

foreign func igIsMouseDown_ID(button: ImGuiMouseButton, owner_id: ImGuiID): Bool

foreign func igIsMouseDragPastThreshold(button: ImGuiMouseButton, lock_threshold: Float32): Bool

foreign func igIsMouseDragging(button: ImGuiMouseButton, lock_threshold: Float32): Bool

foreign func igIsMouseHoveringRect(r_min: ImVec2, r_max: ImVec2, clip: Bool): Bool

foreign func igIsMouseKey(key: ImGuiKey): Bool

foreign func igIsMousePosValid(mouse_pos: CPointer<ImVec2>): Bool

foreign func igIsMouseReleased_Nil(button: ImGuiMouseButton): Bool

foreign func igIsMouseReleased_ID(button: ImGuiMouseButton, owner_id: ImGuiID): Bool

foreign func igIsNamedKey(key: ImGuiKey): Bool

foreign func igIsNamedKeyOrMod(key: ImGuiKey): Bool

foreign func igIsPopupOpen_Str(str_id: CString, flags: ImGuiPopupFlags): Bool

foreign func igIsPopupOpen_ID(id: ImGuiID, popup_flags: ImGuiPopupFlags): Bool

foreign func igIsRectVisible_Nil(size: ImVec2): Bool

foreign func igIsRectVisible_Vec2(rect_min: ImVec2, rect_max: ImVec2): Bool

foreign func igIsWindowAbove(potential_above: CPointer<ImGuiWindow>, potential_below: CPointer<ImGuiWindow>): Bool

foreign func igIsWindowAppearing(): Bool

foreign func igIsWindowChildOf(window: CPointer<ImGuiWindow>, potential_parent: CPointer<ImGuiWindow>, popup_hierarchy: Bool, dock_hierarchy: Bool): Bool

foreign func igIsWindowCollapsed(): Bool

foreign func igIsWindowContentHoverable(window: CPointer<ImGuiWindow>, flags: ImGuiHoveredFlags): Bool

foreign func igIsWindowDocked(): Bool

foreign func igIsWindowFocused(flags: ImGuiFocusedFlags): Bool

foreign func igIsWindowHovered(flags: ImGuiHoveredFlags): Bool

foreign func igIsWindowNavFocusable(window: CPointer<ImGuiWindow>): Bool

foreign func igIsWindowWithinBeginStackOf(window: CPointer<ImGuiWindow>, potential_parent: CPointer<ImGuiWindow>): Bool

foreign func igItemAdd(bb: ImRect, id: ImGuiID, nav_bb: CPointer<ImRect>, extra_flags: ImGuiItemFlags): Bool

foreign func igItemHoverable(bb: ImRect, id: ImGuiID, item_flags: ImGuiItemFlags): Bool

foreign func igItemSize_Vec2(size: ImVec2, text_baseline_y: Float32): Unit

foreign func igItemSize_Rect(bb: ImRect, text_baseline_y: Float32): Unit

foreign func igKeepAliveID(id: ImGuiID): Unit

foreign func igLabelText(label: CString, fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igLabelTextV(label: CString, fmt: CString, args: va_list): Unit

foreign func igListBox_Str_arr(label: CString, current_item: CPointer<Int32>, items: CPointer<CString>, items_count: Int32, height_in_items: Int32): Bool

foreign func igListBox_FnStrPtr(label: CString, current_item: CPointer<Int32>, getter: CFunc<(user_data: CPointer<Unit>, idx: Int32) -> CString>, user_data: CPointer<Unit>, items_count: Int32, height_in_items: Int32): Bool

foreign func igLoadIniSettingsFromDisk(ini_filename: CString): Unit

foreign func igLoadIniSettingsFromMemory(ini_data: CString, ini_size: UIntNative): Unit

foreign func igLocalizeGetMsg(key: ImGuiLocKey): CString

foreign func igLocalizeRegisterEntries(entries: CPointer<ImGuiLocEntry>, count: Int32): Unit

foreign func igLogBegin(`type`: ImGuiLogType, auto_open_depth: Int32): Unit

foreign func igLogButtons(): Unit

foreign func igLogFinish(): Unit

foreign func igLogRenderedText(ref_pos: CPointer<ImVec2>, text: CString, text_end: CString): Unit

foreign func igLogSetNextTextDecoration(prefix: CString, suffix: CString): Unit

foreign func igLogText(fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igLogTextV(fmt: CString, args: va_list): Unit

foreign func igLogToBuffer(auto_open_depth: Int32): Unit

foreign func igLogToClipboard(auto_open_depth: Int32): Unit

foreign func igLogToFile(auto_open_depth: Int32, filename: CString): Unit

foreign func igLogToTTY(auto_open_depth: Int32): Unit

foreign func igMarkIniSettingsDirty_Nil(): Unit

foreign func igMarkIniSettingsDirty_WindowPtr(window: CPointer<ImGuiWindow>): Unit

foreign func igMarkItemEdited(id: ImGuiID): Unit

foreign func igMemAlloc(size: UIntNative): CPointer<Unit>

foreign func igMemFree(ptr: CPointer<Unit>): Unit

foreign func igMenuItem_Bool(label: CString, shortcut: CString, selected: Bool, enabled: Bool): Bool

foreign func igMenuItem_BoolPtr(label: CString, shortcut: CString, p_selected: CPointer<Bool>, enabled: Bool): Bool

foreign func igMenuItemEx(label: CString, icon: CString, shortcut: CString, selected: Bool, enabled: Bool): Bool

foreign func igMouseButtonToKey(button: ImGuiMouseButton): ImGuiKey

foreign func igNavClearPreferredPosForAxis(axis: ImGuiAxis): Unit

foreign func igNavHighlightActivated(id: ImGuiID): Unit

foreign func igNavInitRequestApplyResult(): Unit

foreign func igNavInitWindow(window: CPointer<ImGuiWindow>, force_reinit: Bool): Unit

foreign func igNavMoveRequestApplyResult(): Unit

foreign func igNavMoveRequestButNoResultYet(): Bool

foreign func igNavMoveRequestCancel(): Unit

foreign func igNavMoveRequestForward(move_dir: ImGuiDir, clip_dir: ImGuiDir, move_flags: ImGuiNavMoveFlags, scroll_flags: ImGuiScrollFlags): Unit

foreign func igNavMoveRequestResolveWithLastItem(result: CPointer<ImGuiNavItemData>): Unit

foreign func igNavMoveRequestResolveWithPastTreeNode(result: CPointer<ImGuiNavItemData>, tree_node_data: CPointer<ImGuiNavTreeNodeData>): Unit

foreign func igNavMoveRequestSubmit(move_dir: ImGuiDir, clip_dir: ImGuiDir, move_flags: ImGuiNavMoveFlags, scroll_flags: ImGuiScrollFlags): Unit

foreign func igNavMoveRequestTryWrapping(window: CPointer<ImGuiWindow>, move_flags: ImGuiNavMoveFlags): Unit

foreign func igNavRestoreHighlightAfterMove(): Unit

foreign func igNavUpdateCurrentWindowIsScrollPushableX(): Unit

foreign func igNewFrame(): Unit

foreign func igNewLine(): Unit

foreign func igNextColumn(): Unit

foreign func igOpenPopup_Str(str_id: CString, popup_flags: ImGuiPopupFlags): Unit

foreign func igOpenPopup_ID(id: ImGuiID, popup_flags: ImGuiPopupFlags): Unit

foreign func igOpenPopupEx(id: ImGuiID, popup_flags: ImGuiPopupFlags): Unit

foreign func igOpenPopupOnItemClick(str_id: CString, popup_flags: ImGuiPopupFlags): Unit

foreign func igPlotEx(plot_type: ImGuiPlotType, label: CString, values_getter: CFunc<(data: CPointer<Unit>, idx: Int32) -> Float32>, data: CPointer<Unit>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, size_arg: ImVec2): Int32

foreign func igPlotHistogram_FloatPtr(label: CString, values: CPointer<Float32>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, graph_size: ImVec2, stride: Int32): Unit

foreign func igPlotHistogram_FnFloatPtr(label: CString, values_getter: CFunc<(data: CPointer<Unit>, idx: Int32) -> Float32>, data: CPointer<Unit>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, graph_size: ImVec2): Unit

foreign func igPlotLines_FloatPtr(label: CString, values: CPointer<Float32>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, graph_size: ImVec2, stride: Int32): Unit

foreign func igPlotLines_FnFloatPtr(label: CString, values_getter: CFunc<(data: CPointer<Unit>, idx: Int32) -> Float32>, data: CPointer<Unit>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, graph_size: ImVec2): Unit

foreign func igPopButtonRepeat(): Unit

foreign func igPopClipRect(): Unit

foreign func igPopColumnsBackground(): Unit

foreign func igPopFocusScope(): Unit

foreign func igPopFont(): Unit

foreign func igPopID(): Unit

foreign func igPopItemFlag(): Unit

foreign func igPopItemWidth(): Unit

foreign func igPopStyleColor(count: Int32): Unit

foreign func igPopStyleVar(count: Int32): Unit

foreign func igPopTabStop(): Unit

foreign func igPopTextWrapPos(): Unit

foreign func igProgressBar(fraction: Float32, size_arg: ImVec2, overlay: CString): Unit

foreign func igPushButtonRepeat(repeat: Bool): Unit

foreign func igPushClipRect(clip_rect_min: ImVec2, clip_rect_max: ImVec2, intersect_with_current_clip_rect: Bool): Unit

foreign func igPushColumnClipRect(column_index: Int32): Unit

foreign func igPushColumnsBackground(): Unit

foreign func igPushFocusScope(id: ImGuiID): Unit

foreign func igPushFont(font: CPointer<ImFont>): Unit

foreign func igPushID_Str(str_id: CString): Unit

foreign func igPushID_StrStr(str_id_begin: CString, str_id_end: CString): Unit

foreign func igPushID_Ptr(ptr_id: CPointer<Unit>): Unit

foreign func igPushID_Int(int_id: Int32): Unit

foreign func igPushItemFlag(option: ImGuiItemFlags, enabled: Bool): Unit

foreign func igPushItemWidth(item_width: Float32): Unit

foreign func igPushMultiItemsWidths(components: Int32, width_full: Float32): Unit

foreign func igPushOverrideID(id: ImGuiID): Unit

foreign func igPushStyleColor_U32(idx: ImGuiCol, col: ImU32): Unit

foreign func igPushStyleColor_Vec4(idx: ImGuiCol, col: ImVec4): Unit

foreign func igPushStyleVar_Float(idx: ImGuiStyleVar, val: Float32): Unit

foreign func igPushStyleVar_Vec2(idx: ImGuiStyleVar, val: ImVec2): Unit

foreign func igPushTabStop(tab_stop: Bool): Unit

foreign func igPushTextWrapPos(wrap_local_pos_x: Float32): Unit

foreign func igRadioButton_Bool(label: CString, active: Bool): Bool

foreign func igRadioButton_IntPtr(label: CString, v: CPointer<Int32>, v_button: Int32): Bool

foreign func igRemoveContextHook(context: CPointer<ImGuiContext>, hook_to_remove: ImGuiID): Unit

foreign func igRemoveSettingsHandler(type_name: CString): Unit

foreign func igRender(): Unit

foreign func igRenderArrow(draw_list: CPointer<ImDrawList>, pos: ImVec2, col: ImU32, dir: ImGuiDir, scale: Float32): Unit

foreign func igRenderArrowDockMenu(draw_list: CPointer<ImDrawList>, p_min: ImVec2, sz: Float32, col: ImU32): Unit

foreign func igRenderArrowPointingAt(draw_list: CPointer<ImDrawList>, pos: ImVec2, half_sz: ImVec2, direction: ImGuiDir, col: ImU32): Unit

foreign func igRenderBullet(draw_list: CPointer<ImDrawList>, pos: ImVec2, col: ImU32): Unit

foreign func igRenderCheckMark(draw_list: CPointer<ImDrawList>, pos: ImVec2, col: ImU32, sz: Float32): Unit

foreign func igRenderColorRectWithAlphaCheckerboard(draw_list: CPointer<ImDrawList>, p_min: ImVec2, p_max: ImVec2, fill_col: ImU32, grid_step: Float32, grid_off: ImVec2, rounding: Float32, flags: ImDrawFlags): Unit

foreign func igRenderDragDropTargetRect(bb: ImRect, item_clip_rect: ImRect): Unit

foreign func igRenderFrame(p_min: ImVec2, p_max: ImVec2, fill_col: ImU32, border: Bool, rounding: Float32): Unit

foreign func igRenderFrameBorder(p_min: ImVec2, p_max: ImVec2, rounding: Float32): Unit

foreign func igRenderMouseCursor(pos: ImVec2, scale: Float32, mouse_cursor: ImGuiMouseCursor, col_fill: ImU32, col_border: ImU32, col_shadow: ImU32): Unit

foreign func igRenderNavHighlight(bb: ImRect, id: ImGuiID, flags: ImGuiNavHighlightFlags): Unit

foreign func igRenderPlatformWindowsDefault(platform_render_arg: CPointer<Unit>, renderer_render_arg: CPointer<Unit>): Unit

foreign func igRenderRectFilledRangeH(draw_list: CPointer<ImDrawList>, rect: ImRect, col: ImU32, x_start_norm: Float32, x_end_norm: Float32, rounding: Float32): Unit

foreign func igRenderRectFilledWithHole(draw_list: CPointer<ImDrawList>, outer: ImRect, inner: ImRect, col: ImU32, rounding: Float32): Unit

foreign func igRenderText(pos: ImVec2, text: CString, text_end: CString, hide_text_after_hash: Bool): Unit

foreign func igRenderTextClipped(pos_min: ImVec2, pos_max: ImVec2, text: CString, text_end: CString, text_size_if_known: CPointer<ImVec2>, align: ImVec2, clip_rect: CPointer<ImRect>): Unit

foreign func igRenderTextClippedEx(draw_list: CPointer<ImDrawList>, pos_min: ImVec2, pos_max: ImVec2, text: CString, text_end: CString, text_size_if_known: CPointer<ImVec2>, align: ImVec2, clip_rect: CPointer<ImRect>): Unit

foreign func igRenderTextEllipsis(draw_list: CPointer<ImDrawList>, pos_min: ImVec2, pos_max: ImVec2, clip_max_x: Float32, ellipsis_max_x: Float32, text: CString, text_end: CString, text_size_if_known: CPointer<ImVec2>): Unit

foreign func igRenderTextWrapped(pos: ImVec2, text: CString, text_end: CString, wrap_width: Float32): Unit

foreign func igResetMouseDragDelta(button: ImGuiMouseButton): Unit

foreign func igSameLine(offset_from_start_x: Float32, spacing: Float32): Unit

foreign func igSaveIniSettingsToDisk(ini_filename: CString): Unit

foreign func igSaveIniSettingsToMemory(out_ini_size: CPointer<UIntNative>): CString

foreign func igScaleWindowsInViewport(viewport: CPointer<ImGuiViewportP>, scale: Float32): Unit

foreign func igScrollToBringRectIntoView(window: CPointer<ImGuiWindow>, rect: ImRect): Unit

foreign func igScrollToItem(flags: ImGuiScrollFlags): Unit

foreign func igScrollToRect(window: CPointer<ImGuiWindow>, rect: ImRect, flags: ImGuiScrollFlags): Unit

foreign func igScrollToRectEx(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>, rect: ImRect, flags: ImGuiScrollFlags): Unit

foreign func igScrollbar(axis: ImGuiAxis): Unit

foreign func igScrollbarEx(bb: ImRect, id: ImGuiID, axis: ImGuiAxis, p_scroll_v: CPointer<ImS64>, avail_v: ImS64, contents_v: ImS64, flags: ImDrawFlags): Bool

foreign func igSelectable_Bool(label: CString, selected: Bool, flags: ImGuiSelectableFlags, size: ImVec2): Bool

foreign func igSelectable_BoolPtr(label: CString, p_selected: CPointer<Bool>, flags: ImGuiSelectableFlags, size: ImVec2): Bool

foreign func igSeparator(): Unit

foreign func igSeparatorEx(flags: ImGuiSeparatorFlags, thickness: Float32): Unit

foreign func igSeparatorText(label: CString): Unit

foreign func igSeparatorTextEx(id: ImGuiID, label: CString, label_end: CString, extra_width: Float32): Unit

foreign func igSetActiveID(id: ImGuiID, window: CPointer<ImGuiWindow>): Unit

foreign func igSetActiveIdUsingAllKeyboardKeys(): Unit

foreign func igSetAllocatorFunctions(alloc_func: ImGuiMemAllocFunc, free_func: ImGuiMemFreeFunc, user_data: CPointer<Unit>): Unit

foreign func igSetClipboardText(text: CString): Unit

foreign func igSetColorEditOptions(flags: ImGuiColorEditFlags): Unit

foreign func igSetColumnOffset(column_index: Int32, offset_x: Float32): Unit

foreign func igSetColumnWidth(column_index: Int32, width: Float32): Unit

foreign func igSetCurrentContext(ctx: CPointer<ImGuiContext>): Unit

foreign func igSetCurrentFont(font: CPointer<ImFont>): Unit

foreign func igSetCurrentViewport(window: CPointer<ImGuiWindow>, viewport: CPointer<ImGuiViewportP>): Unit

foreign func igSetCursorPos(local_pos: ImVec2): Unit

foreign func igSetCursorPosX(local_x: Float32): Unit

foreign func igSetCursorPosY(local_y: Float32): Unit

foreign func igSetCursorScreenPos(pos: ImVec2): Unit

foreign func igSetDragDropPayload(`type`: CString, data: CPointer<Unit>, sz: UIntNative, cond: ImGuiCond): Bool

foreign func igSetFocusID(id: ImGuiID, window: CPointer<ImGuiWindow>): Unit

foreign func igSetHoveredID(id: ImGuiID): Unit

foreign func igSetItemDefaultFocus(): Unit

foreign func igSetItemKeyOwner(key: ImGuiKey, flags: ImGuiInputFlags): Unit

foreign func igSetItemTooltip(fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igSetItemTooltipV(fmt: CString, args: va_list): Unit

foreign func igSetKeyOwner(key: ImGuiKey, owner_id: ImGuiID, flags: ImGuiInputFlags): Unit

foreign func igSetKeyOwnersForKeyChord(key: ImGuiKeyChord, owner_id: ImGuiID, flags: ImGuiInputFlags): Unit

foreign func igSetKeyboardFocusHere(offset: Int32): Unit

foreign func igSetLastItemData(item_id: ImGuiID, in_flags: ImGuiItemFlags, status_flags: ImGuiItemStatusFlags, item_rect: ImRect): Unit

foreign func igSetMouseCursor(cursor_type: ImGuiMouseCursor): Unit

foreign func igSetNavFocusScope(focus_scope_id: ImGuiID): Unit

foreign func igSetNavID(id: ImGuiID, nav_layer: ImGuiNavLayer, focus_scope_id: ImGuiID, rect_rel: ImRect): Unit

foreign func igSetNavWindow(window: CPointer<ImGuiWindow>): Unit

foreign func igSetNextFrameWantCaptureKeyboard(want_capture_keyboard: Bool): Unit

foreign func igSetNextFrameWantCaptureMouse(want_capture_mouse: Bool): Unit

foreign func igSetNextItemAllowOverlap(): Unit

foreign func igSetNextItemOpen(is_open: Bool, cond: ImGuiCond): Unit

foreign func igSetNextItemRefVal(data_type: ImGuiDataType, p_data: CPointer<Unit>): Unit

foreign func igSetNextItemSelectionUserData(selection_user_data: ImGuiSelectionUserData): Unit

foreign func igSetNextItemShortcut(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags): Unit

foreign func igSetNextItemWidth(item_width: Float32): Unit

foreign func igSetNextWindowBgAlpha(alpha: Float32): Unit

foreign func igSetNextWindowClass(window_class: CPointer<ImGuiWindowClass>): Unit

foreign func igSetNextWindowCollapsed(collapsed: Bool, cond: ImGuiCond): Unit

foreign func igSetNextWindowContentSize(size: ImVec2): Unit

foreign func igSetNextWindowDockID(dock_id: ImGuiID, cond: ImGuiCond): Unit

foreign func igSetNextWindowFocus(): Unit

foreign func igSetNextWindowPos(pos: ImVec2, cond: ImGuiCond, pivot: ImVec2): Unit

foreign func igSetNextWindowRefreshPolicy(flags: ImGuiWindowRefreshFlags): Unit

foreign func igSetNextWindowScroll(scroll: ImVec2): Unit

foreign func igSetNextWindowSize(size: ImVec2, cond: ImGuiCond): Unit

foreign func igSetNextWindowSizeConstraints(size_min: ImVec2, size_max: ImVec2, custom_callback: ImGuiSizeCallback, custom_callback_data: CPointer<Unit>): Unit

foreign func igSetNextWindowViewport(viewport_id: ImGuiID): Unit

foreign func igSetScrollFromPosX_Float(local_x: Float32, center_x_ratio: Float32): Unit

foreign func igSetScrollFromPosX_WindowPtr(window: CPointer<ImGuiWindow>, local_x: Float32, center_x_ratio: Float32): Unit

foreign func igSetScrollFromPosY_Float(local_y: Float32, center_y_ratio: Float32): Unit

foreign func igSetScrollFromPosY_WindowPtr(window: CPointer<ImGuiWindow>, local_y: Float32, center_y_ratio: Float32): Unit

foreign func igSetScrollHereX(center_x_ratio: Float32): Unit

foreign func igSetScrollHereY(center_y_ratio: Float32): Unit

foreign func igSetScrollX_Float(scroll_x: Float32): Unit

foreign func igSetScrollX_WindowPtr(window: CPointer<ImGuiWindow>, scroll_x: Float32): Unit

foreign func igSetScrollY_Float(scroll_y: Float32): Unit

foreign func igSetScrollY_WindowPtr(window: CPointer<ImGuiWindow>, scroll_y: Float32): Unit

foreign func igSetShortcutRouting(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool

foreign func igSetStateStorage(storage: CPointer<ImGuiStorage>): Unit

foreign func igSetTabItemClosed(tab_or_docked_window_label: CString): Unit

foreign func igSetTooltip(fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igSetTooltipV(fmt: CString, args: va_list): Unit

foreign func igSetWindowClipRectBeforeSetChannel(window: CPointer<ImGuiWindow>, clip_rect: ImRect): Unit

foreign func igSetWindowCollapsed_Bool(collapsed: Bool, cond: ImGuiCond): Unit

foreign func igSetWindowCollapsed_Str(name: CString, collapsed: Bool, cond: ImGuiCond): Unit

foreign func igSetWindowCollapsed_WindowPtr(window: CPointer<ImGuiWindow>, collapsed: Bool, cond: ImGuiCond): Unit

foreign func igSetWindowDock(window: CPointer<ImGuiWindow>, dock_id: ImGuiID, cond: ImGuiCond): Unit

foreign func igSetWindowFocus_Nil(): Unit

foreign func igSetWindowFocus_Str(name: CString): Unit

foreign func igSetWindowFontScale(scale: Float32): Unit

foreign func igSetWindowHiddenAndSkipItemsForCurrentFrame(window: CPointer<ImGuiWindow>): Unit

foreign func igSetWindowHitTestHole(window: CPointer<ImGuiWindow>, pos: ImVec2, size: ImVec2): Unit

foreign func igSetWindowParentWindowForFocusRoute(window: CPointer<ImGuiWindow>, parent_window: CPointer<ImGuiWindow>): Unit

foreign func igSetWindowPos_Vec2(pos: ImVec2, cond: ImGuiCond): Unit

foreign func igSetWindowPos_Str(name: CString, pos: ImVec2, cond: ImGuiCond): Unit

foreign func igSetWindowPos_WindowPtr(window: CPointer<ImGuiWindow>, pos: ImVec2, cond: ImGuiCond): Unit

foreign func igSetWindowSize_Vec2(size: ImVec2, cond: ImGuiCond): Unit

foreign func igSetWindowSize_Str(name: CString, size: ImVec2, cond: ImGuiCond): Unit

foreign func igSetWindowSize_WindowPtr(window: CPointer<ImGuiWindow>, size: ImVec2, cond: ImGuiCond): Unit

foreign func igSetWindowViewport(window: CPointer<ImGuiWindow>, viewport: CPointer<ImGuiViewportP>): Unit

foreign func igShadeVertsLinearColorGradientKeepAlpha(draw_list: CPointer<ImDrawList>, vert_start_idx: Int32, vert_end_idx: Int32, gradient_p0: ImVec2, gradient_p1: ImVec2, col0: ImU32, col1: ImU32): Unit

foreign func igShadeVertsLinearUV(draw_list: CPointer<ImDrawList>, vert_start_idx: Int32, vert_end_idx: Int32, a: ImVec2, b: ImVec2, uv_a: ImVec2, uv_b: ImVec2, clamp: Bool): Unit

foreign func igShadeVertsTransformPos(draw_list: CPointer<ImDrawList>, vert_start_idx: Int32, vert_end_idx: Int32, pivot_in: ImVec2, cos_a: Float32, sin_a: Float32, pivot_out: ImVec2): Unit

foreign func igShortcut_Nil(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags): Bool

foreign func igShortcut_ID(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool

foreign func igShowAboutWindow(p_open: CPointer<Bool>): Unit

foreign func igShowDebugLogWindow(p_open: CPointer<Bool>): Unit

foreign func igShowDemoWindow(p_open: CPointer<Bool>): Unit

foreign func igShowFontAtlas(atlas: CPointer<ImFontAtlas>): Unit

foreign func igShowFontSelector(label: CString): Unit

foreign func igShowIDStackToolWindow(p_open: CPointer<Bool>): Unit

foreign func igShowMetricsWindow(p_open: CPointer<Bool>): Unit

foreign func igShowStyleEditor(ref: CPointer<ImGuiStyle>): Unit

foreign func igShowStyleSelector(label: CString): Bool

foreign func igShowUserGuide(): Unit

foreign func igShrinkWidths(items: CPointer<ImGuiShrinkWidthItem>, count: Int32, width_excess: Float32): Unit

foreign func igShutdown(): Unit

foreign func igSliderAngle(label: CString, v_rad: CPointer<Float32>, v_degrees_min: Float32, v_degrees_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderBehavior(bb: ImRect, id: ImGuiID, data_type: ImGuiDataType, p_v: CPointer<Unit>, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags, out_grab_bb: CPointer<ImRect>): Bool

foreign func igSliderFloat(label: CString, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderFloat2(label: CString, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderFloat3(label: CString, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderFloat4(label: CString, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderInt(label: CString, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderInt2(label: CString, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderInt3(label: CString, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderInt4(label: CString, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderScalar(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSliderScalarN(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, components: Int32, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igSmallButton(label: CString): Bool

foreign func igSpacing(): Unit

foreign func igSplitterBehavior(bb: ImRect, id: ImGuiID, axis: ImGuiAxis, size1: CPointer<Float32>, size2: CPointer<Float32>, min_size1: Float32, min_size2: Float32, hover_extend: Float32, hover_visibility_delay: Float32, bg_col: ImU32): Bool

foreign func igStartMouseMovingWindow(window: CPointer<ImGuiWindow>): Unit

foreign func igStartMouseMovingWindowOrNode(window: CPointer<ImGuiWindow>, node: CPointer<ImGuiDockNode>, undock: Bool): Unit

foreign func igStyleColorsClassic(dst: CPointer<ImGuiStyle>): Unit

foreign func igStyleColorsDark(dst: CPointer<ImGuiStyle>): Unit

foreign func igStyleColorsLight(dst: CPointer<ImGuiStyle>): Unit

foreign func igTabBarAddTab(tab_bar: CPointer<ImGuiTabBar>, tab_flags: ImGuiTabItemFlags, window: CPointer<ImGuiWindow>): Unit

foreign func igTabBarCloseTab(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>): Unit

foreign func igTabBarFindMostRecentlySelectedTabForActiveWindow(tab_bar: CPointer<ImGuiTabBar>): CPointer<ImGuiTabItem>

foreign func igTabBarFindTabByID(tab_bar: CPointer<ImGuiTabBar>, tab_id: ImGuiID): CPointer<ImGuiTabItem>

foreign func igTabBarFindTabByOrder(tab_bar: CPointer<ImGuiTabBar>, order: Int32): CPointer<ImGuiTabItem>

foreign func igTabBarGetCurrentTab(tab_bar: CPointer<ImGuiTabBar>): CPointer<ImGuiTabItem>

foreign func igTabBarGetTabName(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>): CString

foreign func igTabBarGetTabOrder(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>): Int32

foreign func igTabBarProcessReorder(tab_bar: CPointer<ImGuiTabBar>): Bool

foreign func igTabBarQueueFocus(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>): Unit

foreign func igTabBarQueueReorder(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>, offset: Int32): Unit

foreign func igTabBarQueueReorderFromMousePos(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>, mouse_pos: ImVec2): Unit

foreign func igTabBarRemoveTab(tab_bar: CPointer<ImGuiTabBar>, tab_id: ImGuiID): Unit

foreign func igTabItemBackground(draw_list: CPointer<ImDrawList>, bb: ImRect, flags: ImGuiTabItemFlags, col: ImU32): Unit

foreign func igTabItemButton(label: CString, flags: ImGuiTabItemFlags): Bool

foreign func igTabItemCalcSize_Str(pOut: CPointer<ImVec2>, label: CString, has_close_button_or_unsaved_marker: Bool): Unit

foreign func igTabItemCalcSize_WindowPtr(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>): Unit

foreign func igTabItemEx(tab_bar: CPointer<ImGuiTabBar>, label: CString, p_open: CPointer<Bool>, flags: ImGuiTabItemFlags, docked_window: CPointer<ImGuiWindow>): Bool

foreign func igTabItemLabelAndCloseButton(draw_list: CPointer<ImDrawList>, bb: ImRect, flags: ImGuiTabItemFlags, frame_padding: ImVec2, label: CString, tab_id: ImGuiID, close_button_id: ImGuiID, is_contents_visible: Bool, out_just_closed: CPointer<Bool>, out_text_clipped: CPointer<Bool>): Unit

foreign func igTableAngledHeadersRow(): Unit

foreign func igTableAngledHeadersRowEx(row_id: ImGuiID, angle: Float32, max_label_width: Float32, data: CPointer<ImGuiTableHeaderData>, data_count: Int32): Unit

foreign func igTableBeginApplyRequests(table: CPointer<ImGuiTable>): Unit

foreign func igTableBeginCell(table: CPointer<ImGuiTable>, column_n: Int32): Unit

foreign func igTableBeginContextMenuPopup(table: CPointer<ImGuiTable>): Bool

foreign func igTableBeginInitMemory(table: CPointer<ImGuiTable>, columns_count: Int32): Unit

foreign func igTableBeginRow(table: CPointer<ImGuiTable>): Unit

foreign func igTableDrawBorders(table: CPointer<ImGuiTable>): Unit

foreign func igTableDrawDefaultContextMenu(table: CPointer<ImGuiTable>, flags_for_section_to_display: ImGuiTableFlags): Unit

foreign func igTableEndCell(table: CPointer<ImGuiTable>): Unit

foreign func igTableEndRow(table: CPointer<ImGuiTable>): Unit

foreign func igTableFindByID(id: ImGuiID): CPointer<ImGuiTable>

foreign func igTableFixColumnSortDirection(table: CPointer<ImGuiTable>, column: CPointer<ImGuiTableColumn>): Unit

foreign func igTableGcCompactSettings(): Unit

foreign func igTableGcCompactTransientBuffers_TablePtr(table: CPointer<ImGuiTable>): Unit

foreign func igTableGcCompactTransientBuffers_TableTempDataPtr(table: CPointer<ImGuiTableTempData>): Unit

foreign func igTableGetBoundSettings(table: CPointer<ImGuiTable>): CPointer<ImGuiTableSettings>

foreign func igTableGetCellBgRect(pOut: CPointer<ImRect>, table: CPointer<ImGuiTable>, column_n: Int32): Unit

foreign func igTableGetColumnCount(): Int32

foreign func igTableGetColumnFlags(column_n: Int32): ImGuiTableColumnFlags

foreign func igTableGetColumnIndex(): Int32

foreign func igTableGetColumnName_Int(column_n: Int32): CString

foreign func igTableGetColumnName_TablePtr(table: CPointer<ImGuiTable>, column_n: Int32): CString

foreign func igTableGetColumnNextSortDirection(column: CPointer<ImGuiTableColumn>): ImGuiSortDirection

foreign func igTableGetColumnResizeID(table: CPointer<ImGuiTable>, column_n: Int32, instance_no: Int32): ImGuiID

foreign func igTableGetColumnWidthAuto(table: CPointer<ImGuiTable>, column: CPointer<ImGuiTableColumn>): Float32

foreign func igTableGetHeaderAngledMaxLabelWidth(): Float32

foreign func igTableGetHeaderRowHeight(): Float32

foreign func igTableGetHoveredColumn(): Int32

foreign func igTableGetHoveredRow(): Int32

foreign func igTableGetInstanceData(table: CPointer<ImGuiTable>, instance_no: Int32): CPointer<ImGuiTableInstanceData>

foreign func igTableGetInstanceID(table: CPointer<ImGuiTable>, instance_no: Int32): ImGuiID

foreign func igTableGetMaxColumnWidth(table: CPointer<ImGuiTable>, column_n: Int32): Float32

foreign func igTableGetRowIndex(): Int32

foreign func igTableGetSortSpecs(): CPointer<ImGuiTableSortSpecs>

foreign func igTableHeader(label: CString): Unit

foreign func igTableHeadersRow(): Unit

foreign func igTableLoadSettings(table: CPointer<ImGuiTable>): Unit

foreign func igTableMergeDrawChannels(table: CPointer<ImGuiTable>): Unit

foreign func igTableNextColumn(): Bool

foreign func igTableNextRow(row_flags: ImGuiTableRowFlags, min_row_height: Float32): Unit

foreign func igTableOpenContextMenu(column_n: Int32): Unit

foreign func igTablePopBackgroundChannel(): Unit

foreign func igTablePushBackgroundChannel(): Unit

foreign func igTableRemove(table: CPointer<ImGuiTable>): Unit

foreign func igTableResetSettings(table: CPointer<ImGuiTable>): Unit

foreign func igTableSaveSettings(table: CPointer<ImGuiTable>): Unit

foreign func igTableSetBgColor(target: ImGuiTableBgTarget, color: ImU32, column_n: Int32): Unit

foreign func igTableSetColumnEnabled(column_n: Int32, v: Bool): Unit

foreign func igTableSetColumnIndex(column_n: Int32): Bool

foreign func igTableSetColumnSortDirection(column_n: Int32, sort_direction: ImGuiSortDirection, append_to_sort_specs: Bool): Unit

foreign func igTableSetColumnWidth(column_n: Int32, width: Float32): Unit

foreign func igTableSetColumnWidthAutoAll(table: CPointer<ImGuiTable>): Unit

foreign func igTableSetColumnWidthAutoSingle(table: CPointer<ImGuiTable>, column_n: Int32): Unit

foreign func igTableSettingsAddSettingsHandler(): Unit

foreign func igTableSettingsCreate(id: ImGuiID, columns_count: Int32): CPointer<ImGuiTableSettings>

foreign func igTableSettingsFindByID(id: ImGuiID): CPointer<ImGuiTableSettings>

foreign func igTableSetupColumn(label: CString, flags: ImGuiTableColumnFlags, init_width_or_weight: Float32, user_id: ImGuiID): Unit

foreign func igTableSetupDrawChannels(table: CPointer<ImGuiTable>): Unit

foreign func igTableSetupScrollFreeze(cols: Int32, rows: Int32): Unit

foreign func igTableSortSpecsBuild(table: CPointer<ImGuiTable>): Unit

foreign func igTableSortSpecsSanitize(table: CPointer<ImGuiTable>): Unit

foreign func igTableUpdateBorders(table: CPointer<ImGuiTable>): Unit

foreign func igTableUpdateColumnsWeightFromWidth(table: CPointer<ImGuiTable>): Unit

foreign func igTableUpdateLayout(table: CPointer<ImGuiTable>): Unit

foreign func igTeleportMousePos(pos: ImVec2): Unit

foreign func igTempInputIsActive(id: ImGuiID): Bool

foreign func igTempInputScalar(bb: ImRect, id: ImGuiID, label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, format: CString, p_clamp_min: CPointer<Unit>, p_clamp_max: CPointer<Unit>): Bool

foreign func igTempInputText(bb: ImRect, id: ImGuiID, label: CString, buf: CString, buf_size: Int32, flags: ImGuiInputTextFlags): Bool

foreign func igTestKeyOwner(key: ImGuiKey, owner_id: ImGuiID): Bool

foreign func igTestShortcutRouting(key_chord: ImGuiKeyChord, owner_id: ImGuiID): Bool

foreign func igText(fmt: CString, ...): Unit

foreign func igTextColored(col: ImVec4, fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igTextColoredV(col: ImVec4, fmt: CString, args: va_list): Unit

foreign func igTextDisabled(fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igTextDisabledV(fmt: CString, args: va_list): Unit

foreign func igTextEx(text: CString, text_end: CString, flags: ImGuiTextFlags): Unit

foreign func igTextUnformatted(text: CString, text_end: CString): Unit

// Cangjie does not support `va_list`
// foreign func igTextV(fmt: CString, args: va_list): Unit

foreign func igTextWrapped(fmt: CString, ...): Unit

// Cangjie does not support `va_list`
// foreign func igTextWrappedV(fmt: CString, args: va_list): Unit

foreign func igTranslateWindowsInViewport(viewport: CPointer<ImGuiViewportP>, old_pos: ImVec2, new_pos: ImVec2): Unit

foreign func igTreeNode_Str(label: CString): Bool

foreign func igTreeNode_StrStr(str_id: CString, fmt: CString, ...): Bool

foreign func igTreeNode_Ptr(ptr_id: CPointer<Unit>, fmt: CString, ...): Bool

foreign func igTreeNodeBehavior(id: ImGuiID, flags: ImGuiTreeNodeFlags, label: CString, label_end: CString): Bool

foreign func igTreeNodeEx_Str(label: CString, flags: ImGuiTreeNodeFlags): Bool

foreign func igTreeNodeEx_StrStr(str_id: CString, flags: ImGuiTreeNodeFlags, fmt: CString, ...): Bool

foreign func igTreeNodeEx_Ptr(ptr_id: CPointer<Unit>, flags: ImGuiTreeNodeFlags, fmt: CString, ...): Bool

// Cangjie does not support `va_list`
// foreign func igTreeNodeExV_Str(str_id: CString, flags: ImGuiTreeNodeFlags, fmt: CString, args: va_list): Bool

// Cangjie does not support `va_list`
// foreign func igTreeNodeExV_Ptr(ptr_id: CPointer<Unit>, flags: ImGuiTreeNodeFlags, fmt: CString, args: va_list): Bool

foreign func igTreeNodeSetOpen(id: ImGuiID, `open`: Bool): Unit

foreign func igTreeNodeUpdateNextOpen(id: ImGuiID, flags: ImGuiTreeNodeFlags): Bool

// Cangjie does not support `va_list`
// foreign func igTreeNodeV_Str(str_id: CString, fmt: CString, args: va_list): Bool

// Cangjie does not support `va_list`
// foreign func igTreeNodeV_Ptr(ptr_id: CPointer<Unit>, fmt: CString, args: va_list): Bool

foreign func igTreePop(): Unit

foreign func igTreePush_Str(str_id: CString): Unit

foreign func igTreePush_Ptr(ptr_id: CPointer<Unit>): Unit

foreign func igTreePushOverrideID(id: ImGuiID): Unit

foreign func igTypingSelectFindBestLeadingMatch(req: CPointer<ImGuiTypingSelectRequest>, items_count: Int32, get_item_name_func: CFunc<(arg1: CPointer<Unit>, arg2: Int32) -> CString>, user_data: CPointer<Unit>): Int32

foreign func igTypingSelectFindMatch(req: CPointer<ImGuiTypingSelectRequest>, items_count: Int32, get_item_name_func: CFunc<(arg1: CPointer<Unit>, arg2: Int32) -> CString>, user_data: CPointer<Unit>, nav_item_idx: Int32): Int32

foreign func igTypingSelectFindNextSingleCharMatch(req: CPointer<ImGuiTypingSelectRequest>, items_count: Int32, get_item_name_func: CFunc<(arg1: CPointer<Unit>, arg2: Int32) -> CString>, user_data: CPointer<Unit>, nav_item_idx: Int32): Int32

foreign func igUnindent(indent_w: Float32): Unit

foreign func igUpdateHoveredWindowAndCaptureFlags(): Unit

foreign func igUpdateInputEvents(trickle_fast_inputs: Bool): Unit

foreign func igUpdateMouseMovingWindowEndFrame(): Unit

foreign func igUpdateMouseMovingWindowNewFrame(): Unit

foreign func igUpdatePlatformWindows(): Unit

foreign func igUpdateWindowParentAndRootLinks(window: CPointer<ImGuiWindow>, flags: ImGuiWindowFlags, parent_window: CPointer<ImGuiWindow>): Unit

foreign func igUpdateWindowSkipRefresh(window: CPointer<ImGuiWindow>): Unit

foreign func igVSliderFloat(label: CString, size: ImVec2, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igVSliderInt(label: CString, size: ImVec2, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igVSliderScalar(label: CString, size: ImVec2, data_type: ImGuiDataType, p_data: CPointer<Unit>, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool

foreign func igValue_Bool(prefix: CString, b: Bool): Unit

foreign func igValue_Int(prefix: CString, v: Int32): Unit

foreign func igValue_Uint(prefix: CString, v: Int32): Unit

foreign func igValue_Float(prefix: CString, v: Float32, float_format: CString): Unit

foreign func igWindowPosRelToAbs(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>, p: ImVec2): Unit

foreign func igWindowRectAbsToRel(pOut: CPointer<ImRect>, window: CPointer<ImGuiWindow>, r: ImRect): Unit

foreign func igWindowRectRelToAbs(pOut: CPointer<ImRect>, window: CPointer<ImGuiWindow>, r: ImRect): Unit

public func _capi_ImBitVector_Clear(self: CPointer<ImBitVector>): Unit {
    return unsafe { ImBitVector_Clear(self) }
}

public func _capi_ImBitVector_ClearBit(self: CPointer<ImBitVector>, n: Int32): Unit {
    return unsafe { ImBitVector_ClearBit(self, n) }
}

public func _capi_ImBitVector_Create(self: CPointer<ImBitVector>, sz: Int32): Unit {
    return unsafe { ImBitVector_Create(self, sz) }
}

public func _capi_ImBitVector_SetBit(self: CPointer<ImBitVector>, n: Int32): Unit {
    return unsafe { ImBitVector_SetBit(self, n) }
}

public func _capi_ImBitVector_TestBit(self: CPointer<ImBitVector>, n: Int32): Bool {
    return unsafe { ImBitVector_TestBit(self, n) }
}

public func _capi_ImColor_HSV(pOut: CPointer<ImColor>, h: Float32, s: Float32, v: Float32, a: Float32): Unit {
    return unsafe { ImColor_HSV(pOut, h, s, v, a) }
}

public func _capi_ImColor_ImColor_Nil(): CPointer<ImColor> {
    return unsafe { ImColor_ImColor_Nil() }
}

public func _capi_ImColor_ImColor_Float(r: Float32, g: Float32, b: Float32, a: Float32): CPointer<ImColor> {
    return unsafe { ImColor_ImColor_Float(r, g, b, a) }
}

public func _capi_ImColor_ImColor_Vec4(col: ImVec4): CPointer<ImColor> {
    return unsafe { ImColor_ImColor_Vec4(col) }
}

public func _capi_ImColor_ImColor_Int(r: Int32, g: Int32, b: Int32, a: Int32): CPointer<ImColor> {
    return unsafe { ImColor_ImColor_Int(r, g, b, a) }
}

public func _capi_ImColor_ImColor_U32(rgba: ImU32): CPointer<ImColor> {
    return unsafe { ImColor_ImColor_U32(rgba) }
}

public func _capi_ImColor_SetHSV(self: CPointer<ImColor>, h: Float32, s: Float32, v: Float32, a: Float32): Unit {
    return unsafe { ImColor_SetHSV(self, h, s, v, a) }
}

public func _capi_ImColor_destroy(self: CPointer<ImColor>): Unit {
    return unsafe { ImColor_destroy(self) }
}

public func _capi_ImDrawCmd_GetTexID(self: CPointer<ImDrawCmd>): ImTextureID {
    return unsafe { ImDrawCmd_GetTexID(self) }
}

public func _capi_ImDrawCmd_ImDrawCmd(): CPointer<ImDrawCmd> {
    return unsafe { ImDrawCmd_ImDrawCmd() }
}

public func _capi_ImDrawCmd_destroy(self: CPointer<ImDrawCmd>): Unit {
    return unsafe { ImDrawCmd_destroy(self) }
}

public func _capi_ImDrawDataBuilder_ImDrawDataBuilder(): CPointer<ImDrawDataBuilder> {
    return unsafe { ImDrawDataBuilder_ImDrawDataBuilder() }
}

public func _capi_ImDrawDataBuilder_destroy(self: CPointer<ImDrawDataBuilder>): Unit {
    return unsafe { ImDrawDataBuilder_destroy(self) }
}

public func _capi_ImDrawData_AddDrawList(self: CPointer<ImDrawData>, draw_list: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawData_AddDrawList(self, draw_list) }
}

public func _capi_ImDrawData_Clear(self: CPointer<ImDrawData>): Unit {
    return unsafe { ImDrawData_Clear(self) }
}

public func _capi_ImDrawData_DeIndexAllBuffers(self: CPointer<ImDrawData>): Unit {
    return unsafe { ImDrawData_DeIndexAllBuffers(self) }
}

public func _capi_ImDrawData_ImDrawData(): CPointer<ImDrawData> {
    return unsafe { ImDrawData_ImDrawData() }
}

public func _capi_ImDrawData_ScaleClipRects(self: CPointer<ImDrawData>, fb_scale: ImVec2): Unit {
    return unsafe { ImDrawData_ScaleClipRects(self, fb_scale) }
}

public func _capi_ImDrawData_destroy(self: CPointer<ImDrawData>): Unit {
    return unsafe { ImDrawData_destroy(self) }
}

public func _capi_ImDrawListSharedData_ImDrawListSharedData(): CPointer<ImDrawListSharedData> {
    return unsafe { ImDrawListSharedData_ImDrawListSharedData() }
}

public func _capi_ImDrawListSharedData_SetCircleTessellationMaxError(self: CPointer<ImDrawListSharedData>, max_error: Float32): Unit {
    return unsafe { ImDrawListSharedData_SetCircleTessellationMaxError(self, max_error) }
}

public func _capi_ImDrawListSharedData_destroy(self: CPointer<ImDrawListSharedData>): Unit {
    return unsafe { ImDrawListSharedData_destroy(self) }
}

public func _capi_ImDrawListSplitter_Clear(self: CPointer<ImDrawListSplitter>): Unit {
    return unsafe { ImDrawListSplitter_Clear(self) }
}

public func _capi_ImDrawListSplitter_ClearFreeMemory(self: CPointer<ImDrawListSplitter>): Unit {
    return unsafe { ImDrawListSplitter_ClearFreeMemory(self) }
}

public func _capi_ImDrawListSplitter_ImDrawListSplitter(): CPointer<ImDrawListSplitter> {
    return unsafe { ImDrawListSplitter_ImDrawListSplitter() }
}

public func _capi_ImDrawListSplitter_Merge(self: CPointer<ImDrawListSplitter>, draw_list: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawListSplitter_Merge(self, draw_list) }
}

public func _capi_ImDrawListSplitter_SetCurrentChannel(self: CPointer<ImDrawListSplitter>, draw_list: CPointer<ImDrawList>, channel_idx: Int32): Unit {
    return unsafe { ImDrawListSplitter_SetCurrentChannel(self, draw_list, channel_idx) }
}

public func _capi_ImDrawListSplitter_Split(self: CPointer<ImDrawListSplitter>, draw_list: CPointer<ImDrawList>, count: Int32): Unit {
    return unsafe { ImDrawListSplitter_Split(self, draw_list, count) }
}

public func _capi_ImDrawListSplitter_destroy(self: CPointer<ImDrawListSplitter>): Unit {
    return unsafe { ImDrawListSplitter_destroy(self) }
}

public func _capi_ImDrawList_AddBezierCubic(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, col: ImU32, thickness: Float32, num_segments: Int32): Unit {
    return unsafe { ImDrawList_AddBezierCubic(self, p1, p2, p3, p4, col, thickness, num_segments) }
}

public func _capi_ImDrawList_AddBezierQuadratic(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, col: ImU32, thickness: Float32, num_segments: Int32): Unit {
    return unsafe { ImDrawList_AddBezierQuadratic(self, p1, p2, p3, col, thickness, num_segments) }
}

public func _capi_ImDrawList_AddCallback(self: CPointer<ImDrawList>, callback: ImDrawCallback, callback_data: CPointer<Unit>): Unit {
    return unsafe { ImDrawList_AddCallback(self, callback, callback_data) }
}

public func _capi_ImDrawList_AddCircle(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, col: ImU32, num_segments: Int32, thickness: Float32): Unit {
    return unsafe { ImDrawList_AddCircle(self, center, radius, col, num_segments, thickness) }
}

public func _capi_ImDrawList_AddCircleFilled(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, col: ImU32, num_segments: Int32): Unit {
    return unsafe { ImDrawList_AddCircleFilled(self, center, radius, col, num_segments) }
}

public func _capi_ImDrawList_AddConcavePolyFilled(self: CPointer<ImDrawList>, points: CPointer<ImVec2>, num_points: Int32, col: ImU32): Unit {
    return unsafe { ImDrawList_AddConcavePolyFilled(self, points, num_points, col) }
}

public func _capi_ImDrawList_AddConvexPolyFilled(self: CPointer<ImDrawList>, points: CPointer<ImVec2>, num_points: Int32, col: ImU32): Unit {
    return unsafe { ImDrawList_AddConvexPolyFilled(self, points, num_points, col) }
}

public func _capi_ImDrawList_AddDrawCmd(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList_AddDrawCmd(self) }
}

public func _capi_ImDrawList_AddEllipse(self: CPointer<ImDrawList>, center: ImVec2, radius: ImVec2, col: ImU32, rot: Float32, num_segments: Int32, thickness: Float32): Unit {
    return unsafe { ImDrawList_AddEllipse(self, center, radius, col, rot, num_segments, thickness) }
}

public func _capi_ImDrawList_AddEllipseFilled(self: CPointer<ImDrawList>, center: ImVec2, radius: ImVec2, col: ImU32, rot: Float32, num_segments: Int32): Unit {
    return unsafe { ImDrawList_AddEllipseFilled(self, center, radius, col, rot, num_segments) }
}

public func _capi_ImDrawList_AddImage(self: CPointer<ImDrawList>, user_texture_id: ImTextureID, p_min: ImVec2, p_max: ImVec2, uv_min: ImVec2, uv_max: ImVec2, col: ImU32): Unit {
    return unsafe { ImDrawList_AddImage(self, user_texture_id, p_min, p_max, uv_min, uv_max, col) }
}

public func _capi_ImDrawList_AddImageQuad(self: CPointer<ImDrawList>, user_texture_id: ImTextureID, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, uv1: ImVec2, uv2: ImVec2, uv3: ImVec2, uv4: ImVec2, col: ImU32): Unit {
    return unsafe { ImDrawList_AddImageQuad(self, user_texture_id, p1, p2, p3, p4, uv1, uv2, uv3, uv4, col) }
}

public func _capi_ImDrawList_AddImageRounded(self: CPointer<ImDrawList>, user_texture_id: ImTextureID, p_min: ImVec2, p_max: ImVec2, uv_min: ImVec2, uv_max: ImVec2, col: ImU32, rounding: Float32, flags: ImDrawFlags): Unit {
    return unsafe { ImDrawList_AddImageRounded(self, user_texture_id, p_min, p_max, uv_min, uv_max, col, rounding, flags) }
}

public func _capi_ImDrawList_AddLine(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, col: ImU32, thickness: Float32): Unit {
    return unsafe { ImDrawList_AddLine(self, p1, p2, col, thickness) }
}

public func _capi_ImDrawList_AddNgon(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, col: ImU32, num_segments: Int32, thickness: Float32): Unit {
    return unsafe { ImDrawList_AddNgon(self, center, radius, col, num_segments, thickness) }
}

public func _capi_ImDrawList_AddNgonFilled(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, col: ImU32, num_segments: Int32): Unit {
    return unsafe { ImDrawList_AddNgonFilled(self, center, radius, col, num_segments) }
}

public func _capi_ImDrawList_AddPolyline(self: CPointer<ImDrawList>, points: CPointer<ImVec2>, num_points: Int32, col: ImU32, flags: ImDrawFlags, thickness: Float32): Unit {
    return unsafe { ImDrawList_AddPolyline(self, points, num_points, col, flags, thickness) }
}

public func _capi_ImDrawList_AddQuad(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, col: ImU32, thickness: Float32): Unit {
    return unsafe { ImDrawList_AddQuad(self, p1, p2, p3, p4, col, thickness) }
}

public func _capi_ImDrawList_AddQuadFilled(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, col: ImU32): Unit {
    return unsafe { ImDrawList_AddQuadFilled(self, p1, p2, p3, p4, col) }
}

public func _capi_ImDrawList_AddRect(self: CPointer<ImDrawList>, p_min: ImVec2, p_max: ImVec2, col: ImU32, rounding: Float32, flags: ImDrawFlags, thickness: Float32): Unit {
    return unsafe { ImDrawList_AddRect(self, p_min, p_max, col, rounding, flags, thickness) }
}

public func _capi_ImDrawList_AddRectFilled(self: CPointer<ImDrawList>, p_min: ImVec2, p_max: ImVec2, col: ImU32, rounding: Float32, flags: ImDrawFlags): Unit {
    return unsafe { ImDrawList_AddRectFilled(self, p_min, p_max, col, rounding, flags) }
}

public func _capi_ImDrawList_AddRectFilledMultiColor(self: CPointer<ImDrawList>, p_min: ImVec2, p_max: ImVec2, col_upr_left: ImU32, col_upr_right: ImU32, col_bot_right: ImU32, col_bot_left: ImU32): Unit {
    return unsafe { ImDrawList_AddRectFilledMultiColor(self, p_min, p_max, col_upr_left, col_upr_right, col_bot_right, col_bot_left) }
}

public func _capi_ImDrawList_AddText_Vec2(self: CPointer<ImDrawList>, pos: ImVec2, col: ImU32, text_begin: CString, text_end: CString): Unit {
    return unsafe { ImDrawList_AddText_Vec2(self, pos, col, text_begin, text_end) }
}

public func _capi_ImDrawList_AddText_FontPtr(self: CPointer<ImDrawList>, font: CPointer<ImFont>, font_size: Float32, pos: ImVec2, col: ImU32, text_begin: CString, text_end: CString, wrap_width: Float32, cpu_fine_clip_rect: CPointer<ImVec4>): Unit {
    return unsafe { ImDrawList_AddText_FontPtr(self, font, font_size, pos, col, text_begin, text_end, wrap_width, cpu_fine_clip_rect) }
}

public func _capi_ImDrawList_AddTriangle(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, col: ImU32, thickness: Float32): Unit {
    return unsafe { ImDrawList_AddTriangle(self, p1, p2, p3, col, thickness) }
}

public func _capi_ImDrawList_AddTriangleFilled(self: CPointer<ImDrawList>, p1: ImVec2, p2: ImVec2, p3: ImVec2, col: ImU32): Unit {
    return unsafe { ImDrawList_AddTriangleFilled(self, p1, p2, p3, col) }
}

public func _capi_ImDrawList_ChannelsMerge(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList_ChannelsMerge(self) }
}

public func _capi_ImDrawList_ChannelsSetCurrent(self: CPointer<ImDrawList>, n: Int32): Unit {
    return unsafe { ImDrawList_ChannelsSetCurrent(self, n) }
}

public func _capi_ImDrawList_ChannelsSplit(self: CPointer<ImDrawList>, count: Int32): Unit {
    return unsafe { ImDrawList_ChannelsSplit(self, count) }
}

public func _capi_ImDrawList_CloneOutput(self: CPointer<ImDrawList>): CPointer<ImDrawList> {
    return unsafe { ImDrawList_CloneOutput(self) }
}

public func _capi_ImDrawList_GetClipRectMax(pOut: CPointer<ImVec2>, self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList_GetClipRectMax(pOut, self) }
}

public func _capi_ImDrawList_GetClipRectMin(pOut: CPointer<ImVec2>, self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList_GetClipRectMin(pOut, self) }
}

public func _capi_ImDrawList_ImDrawList(shared_data: CPointer<ImDrawListSharedData>): CPointer<ImDrawList> {
    return unsafe { ImDrawList_ImDrawList(shared_data) }
}

public func _capi_ImDrawList_PathArcTo(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, a_min: Float32, a_max: Float32, num_segments: Int32): Unit {
    return unsafe { ImDrawList_PathArcTo(self, center, radius, a_min, a_max, num_segments) }
}

public func _capi_ImDrawList_PathArcToFast(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, a_min_of_12: Int32, a_max_of_12: Int32): Unit {
    return unsafe { ImDrawList_PathArcToFast(self, center, radius, a_min_of_12, a_max_of_12) }
}

public func _capi_ImDrawList_PathBezierCubicCurveTo(self: CPointer<ImDrawList>, p2: ImVec2, p3: ImVec2, p4: ImVec2, num_segments: Int32): Unit {
    return unsafe { ImDrawList_PathBezierCubicCurveTo(self, p2, p3, p4, num_segments) }
}

public func _capi_ImDrawList_PathBezierQuadraticCurveTo(self: CPointer<ImDrawList>, p2: ImVec2, p3: ImVec2, num_segments: Int32): Unit {
    return unsafe { ImDrawList_PathBezierQuadraticCurveTo(self, p2, p3, num_segments) }
}

public func _capi_ImDrawList_PathClear(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList_PathClear(self) }
}

public func _capi_ImDrawList_PathEllipticalArcTo(self: CPointer<ImDrawList>, center: ImVec2, radius: ImVec2, rot: Float32, a_min: Float32, a_max: Float32, num_segments: Int32): Unit {
    return unsafe { ImDrawList_PathEllipticalArcTo(self, center, radius, rot, a_min, a_max, num_segments) }
}

public func _capi_ImDrawList_PathFillConcave(self: CPointer<ImDrawList>, col: ImU32): Unit {
    return unsafe { ImDrawList_PathFillConcave(self, col) }
}

public func _capi_ImDrawList_PathFillConvex(self: CPointer<ImDrawList>, col: ImU32): Unit {
    return unsafe { ImDrawList_PathFillConvex(self, col) }
}

public func _capi_ImDrawList_PathLineTo(self: CPointer<ImDrawList>, pos: ImVec2): Unit {
    return unsafe { ImDrawList_PathLineTo(self, pos) }
}

public func _capi_ImDrawList_PathLineToMergeDuplicate(self: CPointer<ImDrawList>, pos: ImVec2): Unit {
    return unsafe { ImDrawList_PathLineToMergeDuplicate(self, pos) }
}

public func _capi_ImDrawList_PathRect(self: CPointer<ImDrawList>, rect_min: ImVec2, rect_max: ImVec2, rounding: Float32, flags: ImDrawFlags): Unit {
    return unsafe { ImDrawList_PathRect(self, rect_min, rect_max, rounding, flags) }
}

public func _capi_ImDrawList_PathStroke(self: CPointer<ImDrawList>, col: ImU32, flags: ImDrawFlags, thickness: Float32): Unit {
    return unsafe { ImDrawList_PathStroke(self, col, flags, thickness) }
}

public func _capi_ImDrawList_PopClipRect(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList_PopClipRect(self) }
}

public func _capi_ImDrawList_PopTextureID(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList_PopTextureID(self) }
}

public func _capi_ImDrawList_PrimQuadUV(self: CPointer<ImDrawList>, a: ImVec2, b: ImVec2, c: ImVec2, d: ImVec2, uv_a: ImVec2, uv_b: ImVec2, uv_c: ImVec2, uv_d: ImVec2, col: ImU32): Unit {
    return unsafe { ImDrawList_PrimQuadUV(self, a, b, c, d, uv_a, uv_b, uv_c, uv_d, col) }
}

public func _capi_ImDrawList_PrimRect(self: CPointer<ImDrawList>, a: ImVec2, b: ImVec2, col: ImU32): Unit {
    return unsafe { ImDrawList_PrimRect(self, a, b, col) }
}

public func _capi_ImDrawList_PrimRectUV(self: CPointer<ImDrawList>, a: ImVec2, b: ImVec2, uv_a: ImVec2, uv_b: ImVec2, col: ImU32): Unit {
    return unsafe { ImDrawList_PrimRectUV(self, a, b, uv_a, uv_b, col) }
}

public func _capi_ImDrawList_PrimReserve(self: CPointer<ImDrawList>, idx_count: Int32, vtx_count: Int32): Unit {
    return unsafe { ImDrawList_PrimReserve(self, idx_count, vtx_count) }
}

public func _capi_ImDrawList_PrimUnreserve(self: CPointer<ImDrawList>, idx_count: Int32, vtx_count: Int32): Unit {
    return unsafe { ImDrawList_PrimUnreserve(self, idx_count, vtx_count) }
}

public func _capi_ImDrawList_PrimVtx(self: CPointer<ImDrawList>, pos: ImVec2, uv: ImVec2, col: ImU32): Unit {
    return unsafe { ImDrawList_PrimVtx(self, pos, uv, col) }
}

public func _capi_ImDrawList_PrimWriteIdx(self: CPointer<ImDrawList>, idx: ImDrawIdx): Unit {
    return unsafe { ImDrawList_PrimWriteIdx(self, idx) }
}

public func _capi_ImDrawList_PrimWriteVtx(self: CPointer<ImDrawList>, pos: ImVec2, uv: ImVec2, col: ImU32): Unit {
    return unsafe { ImDrawList_PrimWriteVtx(self, pos, uv, col) }
}

public func _capi_ImDrawList_PushClipRect(self: CPointer<ImDrawList>, clip_rect_min: ImVec2, clip_rect_max: ImVec2, intersect_with_current_clip_rect: Bool): Unit {
    return unsafe { ImDrawList_PushClipRect(self, clip_rect_min, clip_rect_max, intersect_with_current_clip_rect) }
}

public func _capi_ImDrawList_PushClipRectFullScreen(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList_PushClipRectFullScreen(self) }
}

public func _capi_ImDrawList_PushTextureID(self: CPointer<ImDrawList>, texture_id: ImTextureID): Unit {
    return unsafe { ImDrawList_PushTextureID(self, texture_id) }
}

public func _capi_ImDrawList__CalcCircleAutoSegmentCount(self: CPointer<ImDrawList>, radius: Float32): Int32 {
    return unsafe { ImDrawList__CalcCircleAutoSegmentCount(self, radius) }
}

public func _capi_ImDrawList__ClearFreeMemory(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList__ClearFreeMemory(self) }
}

public func _capi_ImDrawList__OnChangedClipRect(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList__OnChangedClipRect(self) }
}

public func _capi_ImDrawList__OnChangedTextureID(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList__OnChangedTextureID(self) }
}

public func _capi_ImDrawList__OnChangedVtxOffset(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList__OnChangedVtxOffset(self) }
}

public func _capi_ImDrawList__PathArcToFastEx(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, a_min_sample: Int32, a_max_sample: Int32, a_step: Int32): Unit {
    return unsafe { ImDrawList__PathArcToFastEx(self, center, radius, a_min_sample, a_max_sample, a_step) }
}

public func _capi_ImDrawList__PathArcToN(self: CPointer<ImDrawList>, center: ImVec2, radius: Float32, a_min: Float32, a_max: Float32, num_segments: Int32): Unit {
    return unsafe { ImDrawList__PathArcToN(self, center, radius, a_min, a_max, num_segments) }
}

public func _capi_ImDrawList__PopUnusedDrawCmd(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList__PopUnusedDrawCmd(self) }
}

public func _capi_ImDrawList__ResetForNewFrame(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList__ResetForNewFrame(self) }
}

public func _capi_ImDrawList__TryMergeDrawCmds(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList__TryMergeDrawCmds(self) }
}

public func _capi_ImDrawList_destroy(self: CPointer<ImDrawList>): Unit {
    return unsafe { ImDrawList_destroy(self) }
}

public func _capi_ImFontAtlasCustomRect_ImFontAtlasCustomRect(): CPointer<ImFontAtlasCustomRect> {
    return unsafe { ImFontAtlasCustomRect_ImFontAtlasCustomRect() }
}

public func _capi_ImFontAtlasCustomRect_IsPacked(self: CPointer<ImFontAtlasCustomRect>): Bool {
    return unsafe { ImFontAtlasCustomRect_IsPacked(self) }
}

public func _capi_ImFontAtlasCustomRect_destroy(self: CPointer<ImFontAtlasCustomRect>): Unit {
    return unsafe { ImFontAtlasCustomRect_destroy(self) }
}

public func _capi_ImFontAtlas_AddCustomRectFontGlyph(self: CPointer<ImFontAtlas>, font: CPointer<ImFont>, id: ImWchar, width: Int32, height: Int32, advance_x: Float32, offset: ImVec2): Int32 {
    return unsafe { ImFontAtlas_AddCustomRectFontGlyph(self, font, id, width, height, advance_x, offset) }
}

public func _capi_ImFontAtlas_AddCustomRectRegular(self: CPointer<ImFontAtlas>, width: Int32, height: Int32): Int32 {
    return unsafe { ImFontAtlas_AddCustomRectRegular(self, width, height) }
}

public func _capi_ImFontAtlas_AddFont(self: CPointer<ImFontAtlas>, font_cfg: CPointer<ImFontConfig>): CPointer<ImFont> {
    return unsafe { ImFontAtlas_AddFont(self, font_cfg) }
}

public func _capi_ImFontAtlas_AddFontDefault(self: CPointer<ImFontAtlas>, font_cfg: CPointer<ImFontConfig>): CPointer<ImFont> {
    return unsafe { ImFontAtlas_AddFontDefault(self, font_cfg) }
}

public func _capi_ImFontAtlas_AddFontFromFileTTF(self: CPointer<ImFontAtlas>, filename: CString, size_pixels: Float32, font_cfg: CPointer<ImFontConfig>, glyph_ranges: CPointer<ImWchar>): CPointer<ImFont> {
    return unsafe { ImFontAtlas_AddFontFromFileTTF(self, filename, size_pixels, font_cfg, glyph_ranges) }
}

public func _capi_ImFontAtlas_AddFontFromMemoryCompressedBase85TTF(self: CPointer<ImFontAtlas>, compressed_font_data_base85: CString, size_pixels: Float32, font_cfg: CPointer<ImFontConfig>, glyph_ranges: CPointer<ImWchar>): CPointer<ImFont> {
    return unsafe { ImFontAtlas_AddFontFromMemoryCompressedBase85TTF(self, compressed_font_data_base85, size_pixels, font_cfg, glyph_ranges) }
}

public func _capi_ImFontAtlas_AddFontFromMemoryCompressedTTF(self: CPointer<ImFontAtlas>, compressed_font_data: CPointer<Unit>, compressed_font_data_size: Int32, size_pixels: Float32, font_cfg: CPointer<ImFontConfig>, glyph_ranges: CPointer<ImWchar>): CPointer<ImFont> {
    return unsafe { ImFontAtlas_AddFontFromMemoryCompressedTTF(self, compressed_font_data, compressed_font_data_size, size_pixels, font_cfg, glyph_ranges) }
}

public func _capi_ImFontAtlas_AddFontFromMemoryTTF(self: CPointer<ImFontAtlas>, font_data: CPointer<Unit>, font_data_size: Int32, size_pixels: Float32, font_cfg: CPointer<ImFontConfig>, glyph_ranges: CPointer<ImWchar>): CPointer<ImFont> {
    return unsafe { ImFontAtlas_AddFontFromMemoryTTF(self, font_data, font_data_size, size_pixels, font_cfg, glyph_ranges) }
}

public func _capi_ImFontAtlas_Build(self: CPointer<ImFontAtlas>): Bool {
    return unsafe { ImFontAtlas_Build(self) }
}

public func _capi_ImFontAtlas_CalcCustomRectUV(self: CPointer<ImFontAtlas>, rect: CPointer<ImFontAtlasCustomRect>, out_uv_min: CPointer<ImVec2>, out_uv_max: CPointer<ImVec2>): Unit {
    return unsafe { ImFontAtlas_CalcCustomRectUV(self, rect, out_uv_min, out_uv_max) }
}

public func _capi_ImFontAtlas_Clear(self: CPointer<ImFontAtlas>): Unit {
    return unsafe { ImFontAtlas_Clear(self) }
}

public func _capi_ImFontAtlas_ClearFonts(self: CPointer<ImFontAtlas>): Unit {
    return unsafe { ImFontAtlas_ClearFonts(self) }
}

public func _capi_ImFontAtlas_ClearInputData(self: CPointer<ImFontAtlas>): Unit {
    return unsafe { ImFontAtlas_ClearInputData(self) }
}

public func _capi_ImFontAtlas_ClearTexData(self: CPointer<ImFontAtlas>): Unit {
    return unsafe { ImFontAtlas_ClearTexData(self) }
}

public func _capi_ImFontAtlas_GetCustomRectByIndex(self: CPointer<ImFontAtlas>, index: Int32): CPointer<ImFontAtlasCustomRect> {
    return unsafe { ImFontAtlas_GetCustomRectByIndex(self, index) }
}

public func _capi_ImFontAtlas_GetGlyphRangesChineseFull(self: CPointer<ImFontAtlas>): CPointer<ImWchar> {
    return unsafe { ImFontAtlas_GetGlyphRangesChineseFull(self) }
}

public func _capi_ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon(self: CPointer<ImFontAtlas>): CPointer<ImWchar> {
    return unsafe { ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon(self) }
}

public func _capi_ImFontAtlas_GetGlyphRangesCyrillic(self: CPointer<ImFontAtlas>): CPointer<ImWchar> {
    return unsafe { ImFontAtlas_GetGlyphRangesCyrillic(self) }
}

public func _capi_ImFontAtlas_GetGlyphRangesDefault(self: CPointer<ImFontAtlas>): CPointer<ImWchar> {
    return unsafe { ImFontAtlas_GetGlyphRangesDefault(self) }
}

public func _capi_ImFontAtlas_GetGlyphRangesGreek(self: CPointer<ImFontAtlas>): CPointer<ImWchar> {
    return unsafe { ImFontAtlas_GetGlyphRangesGreek(self) }
}

public func _capi_ImFontAtlas_GetGlyphRangesJapanese(self: CPointer<ImFontAtlas>): CPointer<ImWchar> {
    return unsafe { ImFontAtlas_GetGlyphRangesJapanese(self) }
}

public func _capi_ImFontAtlas_GetGlyphRangesKorean(self: CPointer<ImFontAtlas>): CPointer<ImWchar> {
    return unsafe { ImFontAtlas_GetGlyphRangesKorean(self) }
}

public func _capi_ImFontAtlas_GetGlyphRangesThai(self: CPointer<ImFontAtlas>): CPointer<ImWchar> {
    return unsafe { ImFontAtlas_GetGlyphRangesThai(self) }
}

public func _capi_ImFontAtlas_GetGlyphRangesVietnamese(self: CPointer<ImFontAtlas>): CPointer<ImWchar> {
    return unsafe { ImFontAtlas_GetGlyphRangesVietnamese(self) }
}

public func _capi_ImFontAtlas_GetMouseCursorTexData(self: CPointer<ImFontAtlas>, cursor: ImGuiMouseCursor, out_offset: CPointer<ImVec2>, out_size: CPointer<ImVec2>, out_uv_border: CPointer<ImVec2>, out_uv_fill: CPointer<ImVec2>): Bool {
    return unsafe { ImFontAtlas_GetMouseCursorTexData(self, cursor, out_offset, out_size, out_uv_border, out_uv_fill) }
}

public func _capi_ImFontAtlas_GetTexDataAsAlpha8(self: CPointer<ImFontAtlas>, out_pixels: CPointer<CPointer<UInt8>>, out_width: CPointer<Int32>, out_height: CPointer<Int32>, out_bytes_per_pixel: CPointer<Int32>): Unit {
    return unsafe { ImFontAtlas_GetTexDataAsAlpha8(self, out_pixels, out_width, out_height, out_bytes_per_pixel) }
}

public func _capi_ImFontAtlas_GetTexDataAsRGBA32(self: CPointer<ImFontAtlas>, out_pixels: CPointer<CPointer<UInt8>>, out_width: CPointer<Int32>, out_height: CPointer<Int32>, out_bytes_per_pixel: CPointer<Int32>): Unit {
    return unsafe { ImFontAtlas_GetTexDataAsRGBA32(self, out_pixels, out_width, out_height, out_bytes_per_pixel) }
}

public func _capi_ImFontAtlas_ImFontAtlas(): CPointer<ImFontAtlas> {
    return unsafe { ImFontAtlas_ImFontAtlas() }
}

public func _capi_ImFontAtlas_IsBuilt(self: CPointer<ImFontAtlas>): Bool {
    return unsafe { ImFontAtlas_IsBuilt(self) }
}

public func _capi_ImFontAtlas_SetTexID(self: CPointer<ImFontAtlas>, id: ImTextureID): Unit {
    return unsafe { ImFontAtlas_SetTexID(self, id) }
}

public func _capi_ImFontAtlas_destroy(self: CPointer<ImFontAtlas>): Unit {
    return unsafe { ImFontAtlas_destroy(self) }
}

public func _capi_ImFontConfig_ImFontConfig(): CPointer<ImFontConfig> {
    return unsafe { ImFontConfig_ImFontConfig() }
}

public func _capi_ImFontConfig_destroy(self: CPointer<ImFontConfig>): Unit {
    return unsafe { ImFontConfig_destroy(self) }
}

public func _capi_ImFontGlyphRangesBuilder_AddChar(self: CPointer<ImFontGlyphRangesBuilder>, c: ImWchar): Unit {
    return unsafe { ImFontGlyphRangesBuilder_AddChar(self, c) }
}

public func _capi_ImFontGlyphRangesBuilder_AddRanges(self: CPointer<ImFontGlyphRangesBuilder>, ranges: CPointer<ImWchar>): Unit {
    return unsafe { ImFontGlyphRangesBuilder_AddRanges(self, ranges) }
}

public func _capi_ImFontGlyphRangesBuilder_AddText(self: CPointer<ImFontGlyphRangesBuilder>, text: CString, text_end: CString): Unit {
    return unsafe { ImFontGlyphRangesBuilder_AddText(self, text, text_end) }
}

public func _capi_ImFontGlyphRangesBuilder_BuildRanges(self: CPointer<ImFontGlyphRangesBuilder>, out_ranges: CPointer<ImVector_ImWchar>): Unit {
    return unsafe { ImFontGlyphRangesBuilder_BuildRanges(self, out_ranges) }
}

public func _capi_ImFontGlyphRangesBuilder_Clear(self: CPointer<ImFontGlyphRangesBuilder>): Unit {
    return unsafe { ImFontGlyphRangesBuilder_Clear(self) }
}

public func _capi_ImFontGlyphRangesBuilder_GetBit(self: CPointer<ImFontGlyphRangesBuilder>, n: UIntNative): Bool {
    return unsafe { ImFontGlyphRangesBuilder_GetBit(self, n) }
}

public func _capi_ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder(): CPointer<ImFontGlyphRangesBuilder> {
    return unsafe { ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder() }
}

public func _capi_ImFontGlyphRangesBuilder_SetBit(self: CPointer<ImFontGlyphRangesBuilder>, n: UIntNative): Unit {
    return unsafe { ImFontGlyphRangesBuilder_SetBit(self, n) }
}

public func _capi_ImFontGlyphRangesBuilder_destroy(self: CPointer<ImFontGlyphRangesBuilder>): Unit {
    return unsafe { ImFontGlyphRangesBuilder_destroy(self) }
}

public func _capi_ImFont_AddGlyph(self: CPointer<ImFont>, src_cfg: CPointer<ImFontConfig>, c: ImWchar, x0: Float32, y0: Float32, x1: Float32, y1: Float32, u0: Float32, v0: Float32, u1: Float32, v1: Float32, advance_x: Float32): Unit {
    return unsafe { ImFont_AddGlyph(self, src_cfg, c, x0, y0, x1, y1, u0, v0, u1, v1, advance_x) }
}

public func _capi_ImFont_AddRemapChar(self: CPointer<ImFont>, dst: ImWchar, src: ImWchar, overwrite_dst: Bool): Unit {
    return unsafe { ImFont_AddRemapChar(self, dst, src, overwrite_dst) }
}

public func _capi_ImFont_BuildLookupTable(self: CPointer<ImFont>): Unit {
    return unsafe { ImFont_BuildLookupTable(self) }
}

public func _capi_ImFont_CalcTextSizeA(pOut: CPointer<ImVec2>, self: CPointer<ImFont>, size: Float32, max_width: Float32, wrap_width: Float32, text_begin: CString, text_end: CString, remaining: CPointer<CString>): Unit {
    return unsafe { ImFont_CalcTextSizeA(pOut, self, size, max_width, wrap_width, text_begin, text_end, remaining) }
}

public func _capi_ImFont_CalcWordWrapPositionA(self: CPointer<ImFont>, scale: Float32, text: CString, text_end: CString, wrap_width: Float32): CString {
    return unsafe { ImFont_CalcWordWrapPositionA(self, scale, text, text_end, wrap_width) }
}

public func _capi_ImFont_ClearOutputData(self: CPointer<ImFont>): Unit {
    return unsafe { ImFont_ClearOutputData(self) }
}

public func _capi_ImFont_FindGlyph(self: CPointer<ImFont>, c: ImWchar): CPointer<ImFontGlyph> {
    return unsafe { ImFont_FindGlyph(self, c) }
}

public func _capi_ImFont_FindGlyphNoFallback(self: CPointer<ImFont>, c: ImWchar): CPointer<ImFontGlyph> {
    return unsafe { ImFont_FindGlyphNoFallback(self, c) }
}

public func _capi_ImFont_GetCharAdvance(self: CPointer<ImFont>, c: ImWchar): Float32 {
    return unsafe { ImFont_GetCharAdvance(self, c) }
}

public func _capi_ImFont_GetDebugName(self: CPointer<ImFont>): CString {
    return unsafe { ImFont_GetDebugName(self) }
}

public func _capi_ImFont_GrowIndex(self: CPointer<ImFont>, new_size: Int32): Unit {
    return unsafe { ImFont_GrowIndex(self, new_size) }
}

public func _capi_ImFont_ImFont(): CPointer<ImFont> {
    return unsafe { ImFont_ImFont() }
}

public func _capi_ImFont_IsGlyphRangeUnused(self: CPointer<ImFont>, c_begin: Int32, c_last: Int32): Bool {
    return unsafe { ImFont_IsGlyphRangeUnused(self, c_begin, c_last) }
}

public func _capi_ImFont_IsLoaded(self: CPointer<ImFont>): Bool {
    return unsafe { ImFont_IsLoaded(self) }
}

public func _capi_ImFont_RenderChar(self: CPointer<ImFont>, draw_list: CPointer<ImDrawList>, size: Float32, pos: ImVec2, col: ImU32, c: ImWchar): Unit {
    return unsafe { ImFont_RenderChar(self, draw_list, size, pos, col, c) }
}

public func _capi_ImFont_RenderText(self: CPointer<ImFont>, draw_list: CPointer<ImDrawList>, size: Float32, pos: ImVec2, col: ImU32, clip_rect: ImVec4, text_begin: CString, text_end: CString, wrap_width: Float32, cpu_fine_clip: Bool): Unit {
    return unsafe { ImFont_RenderText(self, draw_list, size, pos, col, clip_rect, text_begin, text_end, wrap_width, cpu_fine_clip) }
}

public func _capi_ImFont_SetGlyphVisible(self: CPointer<ImFont>, c: ImWchar, visible: Bool): Unit {
    return unsafe { ImFont_SetGlyphVisible(self, c, visible) }
}

public func _capi_ImFont_destroy(self: CPointer<ImFont>): Unit {
    return unsafe { ImFont_destroy(self) }
}

public func _capi_ImGuiComboPreviewData_ImGuiComboPreviewData(): CPointer<ImGuiComboPreviewData> {
    return unsafe { ImGuiComboPreviewData_ImGuiComboPreviewData() }
}

public func _capi_ImGuiComboPreviewData_destroy(self: CPointer<ImGuiComboPreviewData>): Unit {
    return unsafe { ImGuiComboPreviewData_destroy(self) }
}

public func _capi_ImGuiContextHook_ImGuiContextHook(): CPointer<ImGuiContextHook> {
    return unsafe { ImGuiContextHook_ImGuiContextHook() }
}

public func _capi_ImGuiContextHook_destroy(self: CPointer<ImGuiContextHook>): Unit {
    return unsafe { ImGuiContextHook_destroy(self) }
}

public func _capi_ImGuiContext_ImGuiContext(shared_font_atlas: CPointer<ImFontAtlas>): CPointer<ImGuiContext> {
    return unsafe { ImGuiContext_ImGuiContext(shared_font_atlas) }
}

public func _capi_ImGuiContext_destroy(self: CPointer<ImGuiContext>): Unit {
    return unsafe { ImGuiContext_destroy(self) }
}

public func _capi_ImGuiDataVarInfo_GetVarPtr(self: CPointer<ImGuiDataVarInfo>, parent: CPointer<Unit>): CPointer<Unit> {
    return unsafe { ImGuiDataVarInfo_GetVarPtr(self, parent) }
}

public func _capi_ImGuiDebugAllocInfo_ImGuiDebugAllocInfo(): CPointer<ImGuiDebugAllocInfo> {
    return unsafe { ImGuiDebugAllocInfo_ImGuiDebugAllocInfo() }
}

public func _capi_ImGuiDebugAllocInfo_destroy(self: CPointer<ImGuiDebugAllocInfo>): Unit {
    return unsafe { ImGuiDebugAllocInfo_destroy(self) }
}

public func _capi_ImGuiDockContext_ImGuiDockContext(): CPointer<ImGuiDockContext> {
    return unsafe { ImGuiDockContext_ImGuiDockContext() }
}

public func _capi_ImGuiDockContext_destroy(self: CPointer<ImGuiDockContext>): Unit {
    return unsafe { ImGuiDockContext_destroy(self) }
}

public func _capi_ImGuiDockNode_ImGuiDockNode(id: ImGuiID): CPointer<ImGuiDockNode> {
    return unsafe { ImGuiDockNode_ImGuiDockNode(id) }
}

public func _capi_ImGuiDockNode_IsCentralNode(self: CPointer<ImGuiDockNode>): Bool {
    return unsafe { ImGuiDockNode_IsCentralNode(self) }
}

public func _capi_ImGuiDockNode_IsDockSpace(self: CPointer<ImGuiDockNode>): Bool {
    return unsafe { ImGuiDockNode_IsDockSpace(self) }
}

public func _capi_ImGuiDockNode_IsEmpty(self: CPointer<ImGuiDockNode>): Bool {
    return unsafe { ImGuiDockNode_IsEmpty(self) }
}

public func _capi_ImGuiDockNode_IsFloatingNode(self: CPointer<ImGuiDockNode>): Bool {
    return unsafe { ImGuiDockNode_IsFloatingNode(self) }
}

public func _capi_ImGuiDockNode_IsHiddenTabBar(self: CPointer<ImGuiDockNode>): Bool {
    return unsafe { ImGuiDockNode_IsHiddenTabBar(self) }
}

public func _capi_ImGuiDockNode_IsLeafNode(self: CPointer<ImGuiDockNode>): Bool {
    return unsafe { ImGuiDockNode_IsLeafNode(self) }
}

public func _capi_ImGuiDockNode_IsNoTabBar(self: CPointer<ImGuiDockNode>): Bool {
    return unsafe { ImGuiDockNode_IsNoTabBar(self) }
}

public func _capi_ImGuiDockNode_IsRootNode(self: CPointer<ImGuiDockNode>): Bool {
    return unsafe { ImGuiDockNode_IsRootNode(self) }
}

public func _capi_ImGuiDockNode_IsSplitNode(self: CPointer<ImGuiDockNode>): Bool {
    return unsafe { ImGuiDockNode_IsSplitNode(self) }
}

public func _capi_ImGuiDockNode_Rect(pOut: CPointer<ImRect>, self: CPointer<ImGuiDockNode>): Unit {
    return unsafe { ImGuiDockNode_Rect(pOut, self) }
}

public func _capi_ImGuiDockNode_SetLocalFlags(self: CPointer<ImGuiDockNode>, flags: ImGuiDockNodeFlags): Unit {
    return unsafe { ImGuiDockNode_SetLocalFlags(self, flags) }
}

public func _capi_ImGuiDockNode_UpdateMergedFlags(self: CPointer<ImGuiDockNode>): Unit {
    return unsafe { ImGuiDockNode_UpdateMergedFlags(self) }
}

public func _capi_ImGuiDockNode_destroy(self: CPointer<ImGuiDockNode>): Unit {
    return unsafe { ImGuiDockNode_destroy(self) }
}

public func _capi_ImGuiIDStackTool_ImGuiIDStackTool(): CPointer<ImGuiIDStackTool> {
    return unsafe { ImGuiIDStackTool_ImGuiIDStackTool() }
}

public func _capi_ImGuiIDStackTool_destroy(self: CPointer<ImGuiIDStackTool>): Unit {
    return unsafe { ImGuiIDStackTool_destroy(self) }
}

public func _capi_ImGuiIO_AddFocusEvent(self: CPointer<ImGuiIO>, focused: Bool): Unit {
    return unsafe { ImGuiIO_AddFocusEvent(self, focused) }
}

public func _capi_ImGuiIO_AddInputCharacter(self: CPointer<ImGuiIO>, c: Int32): Unit {
    return unsafe { ImGuiIO_AddInputCharacter(self, c) }
}

public func _capi_ImGuiIO_AddInputCharacterUTF16(self: CPointer<ImGuiIO>, c: ImWchar16): Unit {
    return unsafe { ImGuiIO_AddInputCharacterUTF16(self, c) }
}

public func _capi_ImGuiIO_AddInputCharactersUTF8(self: CPointer<ImGuiIO>, str: CString): Unit {
    return unsafe { ImGuiIO_AddInputCharactersUTF8(self, str) }
}

public func _capi_ImGuiIO_AddKeyAnalogEvent(self: CPointer<ImGuiIO>, key: ImGuiKey, down: Bool, v: Float32): Unit {
    return unsafe { ImGuiIO_AddKeyAnalogEvent(self, key, down, v) }
}

public func _capi_ImGuiIO_AddKeyEvent(self: CPointer<ImGuiIO>, key: ImGuiKey, down: Bool): Unit {
    return unsafe { ImGuiIO_AddKeyEvent(self, key, down) }
}

public func _capi_ImGuiIO_AddMouseButtonEvent(self: CPointer<ImGuiIO>, button: Int32, down: Bool): Unit {
    return unsafe { ImGuiIO_AddMouseButtonEvent(self, button, down) }
}

public func _capi_ImGuiIO_AddMousePosEvent(self: CPointer<ImGuiIO>, x: Float32, y: Float32): Unit {
    return unsafe { ImGuiIO_AddMousePosEvent(self, x, y) }
}

public func _capi_ImGuiIO_AddMouseSourceEvent(self: CPointer<ImGuiIO>, source: ImGuiMouseSource): Unit {
    return unsafe { ImGuiIO_AddMouseSourceEvent(self, source) }
}

public func _capi_ImGuiIO_AddMouseViewportEvent(self: CPointer<ImGuiIO>, id: ImGuiID): Unit {
    return unsafe { ImGuiIO_AddMouseViewportEvent(self, id) }
}

public func _capi_ImGuiIO_AddMouseWheelEvent(self: CPointer<ImGuiIO>, wheel_x: Float32, wheel_y: Float32): Unit {
    return unsafe { ImGuiIO_AddMouseWheelEvent(self, wheel_x, wheel_y) }
}

public func _capi_ImGuiIO_ClearEventsQueue(self: CPointer<ImGuiIO>): Unit {
    return unsafe { ImGuiIO_ClearEventsQueue(self) }
}

public func _capi_ImGuiIO_ClearInputKeys(self: CPointer<ImGuiIO>): Unit {
    return unsafe { ImGuiIO_ClearInputKeys(self) }
}

public func _capi_ImGuiIO_ImGuiIO(): CPointer<ImGuiIO> {
    return unsafe { ImGuiIO_ImGuiIO() }
}

public func _capi_ImGuiIO_SetAppAcceptingEvents(self: CPointer<ImGuiIO>, accepting_events: Bool): Unit {
    return unsafe { ImGuiIO_SetAppAcceptingEvents(self, accepting_events) }
}

public func _capi_ImGuiIO_SetKeyEventNativeData(self: CPointer<ImGuiIO>, key: ImGuiKey, native_keycode: Int32, native_scancode: Int32, native_legacy_index: Int32): Unit {
    return unsafe { ImGuiIO_SetKeyEventNativeData(self, key, native_keycode, native_scancode, native_legacy_index) }
}

public func _capi_ImGuiIO_destroy(self: CPointer<ImGuiIO>): Unit {
    return unsafe { ImGuiIO_destroy(self) }
}

public func _capi_ImGuiInputEvent_ImGuiInputEvent(): CPointer<ImGuiInputEvent> {
    return unsafe { ImGuiInputEvent_ImGuiInputEvent() }
}

public func _capi_ImGuiInputEvent_destroy(self: CPointer<ImGuiInputEvent>): Unit {
    return unsafe { ImGuiInputEvent_destroy(self) }
}

public func _capi_ImGuiInputTextCallbackData_ClearSelection(self: CPointer<ImGuiInputTextCallbackData>): Unit {
    return unsafe { ImGuiInputTextCallbackData_ClearSelection(self) }
}

public func _capi_ImGuiInputTextCallbackData_DeleteChars(self: CPointer<ImGuiInputTextCallbackData>, pos: Int32, bytes_count: Int32): Unit {
    return unsafe { ImGuiInputTextCallbackData_DeleteChars(self, pos, bytes_count) }
}

public func _capi_ImGuiInputTextCallbackData_HasSelection(self: CPointer<ImGuiInputTextCallbackData>): Bool {
    return unsafe { ImGuiInputTextCallbackData_HasSelection(self) }
}

public func _capi_ImGuiInputTextCallbackData_ImGuiInputTextCallbackData(): CPointer<ImGuiInputTextCallbackData> {
    return unsafe { ImGuiInputTextCallbackData_ImGuiInputTextCallbackData() }
}

public func _capi_ImGuiInputTextCallbackData_InsertChars(self: CPointer<ImGuiInputTextCallbackData>, pos: Int32, text: CString, text_end: CString): Unit {
    return unsafe { ImGuiInputTextCallbackData_InsertChars(self, pos, text, text_end) }
}

public func _capi_ImGuiInputTextCallbackData_SelectAll(self: CPointer<ImGuiInputTextCallbackData>): Unit {
    return unsafe { ImGuiInputTextCallbackData_SelectAll(self) }
}

public func _capi_ImGuiInputTextCallbackData_destroy(self: CPointer<ImGuiInputTextCallbackData>): Unit {
    return unsafe { ImGuiInputTextCallbackData_destroy(self) }
}

public func _capi_ImGuiInputTextDeactivatedState_ClearFreeMemory(self: CPointer<ImGuiInputTextDeactivatedState>): Unit {
    return unsafe { ImGuiInputTextDeactivatedState_ClearFreeMemory(self) }
}

public func _capi_ImGuiInputTextDeactivatedState_ImGuiInputTextDeactivatedState(): CPointer<ImGuiInputTextDeactivatedState> {
    return unsafe { ImGuiInputTextDeactivatedState_ImGuiInputTextDeactivatedState() }
}

public func _capi_ImGuiInputTextDeactivatedState_destroy(self: CPointer<ImGuiInputTextDeactivatedState>): Unit {
    return unsafe { ImGuiInputTextDeactivatedState_destroy(self) }
}

public func _capi_ImGuiInputTextState_ClearFreeMemory(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_ClearFreeMemory(self) }
}

public func _capi_ImGuiInputTextState_ClearSelection(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_ClearSelection(self) }
}

public func _capi_ImGuiInputTextState_ClearText(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_ClearText(self) }
}

public func _capi_ImGuiInputTextState_CursorAnimReset(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_CursorAnimReset(self) }
}

public func _capi_ImGuiInputTextState_CursorClamp(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_CursorClamp(self) }
}

public func _capi_ImGuiInputTextState_GetCursorPos(self: CPointer<ImGuiInputTextState>): Int32 {
    return unsafe { ImGuiInputTextState_GetCursorPos(self) }
}

public func _capi_ImGuiInputTextState_GetRedoAvailCount(self: CPointer<ImGuiInputTextState>): Int32 {
    return unsafe { ImGuiInputTextState_GetRedoAvailCount(self) }
}

public func _capi_ImGuiInputTextState_GetSelectionEnd(self: CPointer<ImGuiInputTextState>): Int32 {
    return unsafe { ImGuiInputTextState_GetSelectionEnd(self) }
}

public func _capi_ImGuiInputTextState_GetSelectionStart(self: CPointer<ImGuiInputTextState>): Int32 {
    return unsafe { ImGuiInputTextState_GetSelectionStart(self) }
}

public func _capi_ImGuiInputTextState_GetUndoAvailCount(self: CPointer<ImGuiInputTextState>): Int32 {
    return unsafe { ImGuiInputTextState_GetUndoAvailCount(self) }
}

public func _capi_ImGuiInputTextState_HasSelection(self: CPointer<ImGuiInputTextState>): Bool {
    return unsafe { ImGuiInputTextState_HasSelection(self) }
}

public func _capi_ImGuiInputTextState_ImGuiInputTextState(): CPointer<ImGuiInputTextState> {
    return unsafe { ImGuiInputTextState_ImGuiInputTextState() }
}

public func _capi_ImGuiInputTextState_OnKeyPressed(self: CPointer<ImGuiInputTextState>, key: Int32): Unit {
    return unsafe { ImGuiInputTextState_OnKeyPressed(self, key) }
}

public func _capi_ImGuiInputTextState_ReloadUserBufAndKeepSelection(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_ReloadUserBufAndKeepSelection(self) }
}

public func _capi_ImGuiInputTextState_ReloadUserBufAndMoveToEnd(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_ReloadUserBufAndMoveToEnd(self) }
}

public func _capi_ImGuiInputTextState_ReloadUserBufAndSelectAll(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_ReloadUserBufAndSelectAll(self) }
}

public func _capi_ImGuiInputTextState_SelectAll(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_SelectAll(self) }
}

public func _capi_ImGuiInputTextState_destroy(self: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { ImGuiInputTextState_destroy(self) }
}

public func _capi_ImGuiKeyOwnerData_ImGuiKeyOwnerData(): CPointer<ImGuiKeyOwnerData> {
    return unsafe { ImGuiKeyOwnerData_ImGuiKeyOwnerData() }
}

public func _capi_ImGuiKeyOwnerData_destroy(self: CPointer<ImGuiKeyOwnerData>): Unit {
    return unsafe { ImGuiKeyOwnerData_destroy(self) }
}

public func _capi_ImGuiKeyRoutingData_ImGuiKeyRoutingData(): CPointer<ImGuiKeyRoutingData> {
    return unsafe { ImGuiKeyRoutingData_ImGuiKeyRoutingData() }
}

public func _capi_ImGuiKeyRoutingData_destroy(self: CPointer<ImGuiKeyRoutingData>): Unit {
    return unsafe { ImGuiKeyRoutingData_destroy(self) }
}

public func _capi_ImGuiKeyRoutingTable_Clear(self: CPointer<ImGuiKeyRoutingTable>): Unit {
    return unsafe { ImGuiKeyRoutingTable_Clear(self) }
}

public func _capi_ImGuiKeyRoutingTable_ImGuiKeyRoutingTable(): CPointer<ImGuiKeyRoutingTable> {
    return unsafe { ImGuiKeyRoutingTable_ImGuiKeyRoutingTable() }
}

public func _capi_ImGuiKeyRoutingTable_destroy(self: CPointer<ImGuiKeyRoutingTable>): Unit {
    return unsafe { ImGuiKeyRoutingTable_destroy(self) }
}

public func _capi_ImGuiLastItemData_ImGuiLastItemData(): CPointer<ImGuiLastItemData> {
    return unsafe { ImGuiLastItemData_ImGuiLastItemData() }
}

public func _capi_ImGuiLastItemData_destroy(self: CPointer<ImGuiLastItemData>): Unit {
    return unsafe { ImGuiLastItemData_destroy(self) }
}

public func _capi_ImGuiListClipperData_ImGuiListClipperData(): CPointer<ImGuiListClipperData> {
    return unsafe { ImGuiListClipperData_ImGuiListClipperData() }
}

public func _capi_ImGuiListClipperData_Reset(self: CPointer<ImGuiListClipperData>, clipper: CPointer<ImGuiListClipper>): Unit {
    return unsafe { ImGuiListClipperData_Reset(self, clipper) }
}

public func _capi_ImGuiListClipperData_destroy(self: CPointer<ImGuiListClipperData>): Unit {
    return unsafe { ImGuiListClipperData_destroy(self) }
}

public func _capi_ImGuiListClipperRange_FromIndices(min: Int32, max: Int32): ImGuiListClipperRange {
    return unsafe { ImGuiListClipperRange_FromIndices(min, max) }
}

public func _capi_ImGuiListClipperRange_FromPositions(y1: Float32, y2: Float32, off_min: Int32, off_max: Int32): ImGuiListClipperRange {
    return unsafe { ImGuiListClipperRange_FromPositions(y1, y2, off_min, off_max) }
}

public func _capi_ImGuiListClipper_Begin(self: CPointer<ImGuiListClipper>, items_count: Int32, items_height: Float32): Unit {
    return unsafe { ImGuiListClipper_Begin(self, items_count, items_height) }
}

public func _capi_ImGuiListClipper_End(self: CPointer<ImGuiListClipper>): Unit {
    return unsafe { ImGuiListClipper_End(self) }
}

public func _capi_ImGuiListClipper_ImGuiListClipper(): CPointer<ImGuiListClipper> {
    return unsafe { ImGuiListClipper_ImGuiListClipper() }
}

public func _capi_ImGuiListClipper_IncludeItemByIndex(self: CPointer<ImGuiListClipper>, item_index: Int32): Unit {
    return unsafe { ImGuiListClipper_IncludeItemByIndex(self, item_index) }
}

public func _capi_ImGuiListClipper_IncludeItemsByIndex(self: CPointer<ImGuiListClipper>, item_begin: Int32, item_end: Int32): Unit {
    return unsafe { ImGuiListClipper_IncludeItemsByIndex(self, item_begin, item_end) }
}

public func _capi_ImGuiListClipper_Step(self: CPointer<ImGuiListClipper>): Bool {
    return unsafe { ImGuiListClipper_Step(self) }
}

public func _capi_ImGuiListClipper_destroy(self: CPointer<ImGuiListClipper>): Unit {
    return unsafe { ImGuiListClipper_destroy(self) }
}

public func _capi_ImGuiMenuColumns_CalcNextTotalWidth(self: CPointer<ImGuiMenuColumns>, update_offsets: Bool): Unit {
    return unsafe { ImGuiMenuColumns_CalcNextTotalWidth(self, update_offsets) }
}

public func _capi_ImGuiMenuColumns_DeclColumns(self: CPointer<ImGuiMenuColumns>, w_icon: Float32, w_label: Float32, w_shortcut: Float32, w_mark: Float32): Float32 {
    return unsafe { ImGuiMenuColumns_DeclColumns(self, w_icon, w_label, w_shortcut, w_mark) }
}

public func _capi_ImGuiMenuColumns_ImGuiMenuColumns(): CPointer<ImGuiMenuColumns> {
    return unsafe { ImGuiMenuColumns_ImGuiMenuColumns() }
}

public func _capi_ImGuiMenuColumns_Update(self: CPointer<ImGuiMenuColumns>, spacing: Float32, window_reappearing: Bool): Unit {
    return unsafe { ImGuiMenuColumns_Update(self, spacing, window_reappearing) }
}

public func _capi_ImGuiMenuColumns_destroy(self: CPointer<ImGuiMenuColumns>): Unit {
    return unsafe { ImGuiMenuColumns_destroy(self) }
}

public func _capi_ImGuiNavItemData_Clear(self: CPointer<ImGuiNavItemData>): Unit {
    return unsafe { ImGuiNavItemData_Clear(self) }
}

public func _capi_ImGuiNavItemData_ImGuiNavItemData(): CPointer<ImGuiNavItemData> {
    return unsafe { ImGuiNavItemData_ImGuiNavItemData() }
}

public func _capi_ImGuiNavItemData_destroy(self: CPointer<ImGuiNavItemData>): Unit {
    return unsafe { ImGuiNavItemData_destroy(self) }
}

public func _capi_ImGuiNextItemData_ClearFlags(self: CPointer<ImGuiNextItemData>): Unit {
    return unsafe { ImGuiNextItemData_ClearFlags(self) }
}

public func _capi_ImGuiNextItemData_ImGuiNextItemData(): CPointer<ImGuiNextItemData> {
    return unsafe { ImGuiNextItemData_ImGuiNextItemData() }
}

public func _capi_ImGuiNextItemData_destroy(self: CPointer<ImGuiNextItemData>): Unit {
    return unsafe { ImGuiNextItemData_destroy(self) }
}

public func _capi_ImGuiNextWindowData_ClearFlags(self: CPointer<ImGuiNextWindowData>): Unit {
    return unsafe { ImGuiNextWindowData_ClearFlags(self) }
}

public func _capi_ImGuiNextWindowData_ImGuiNextWindowData(): CPointer<ImGuiNextWindowData> {
    return unsafe { ImGuiNextWindowData_ImGuiNextWindowData() }
}

public func _capi_ImGuiNextWindowData_destroy(self: CPointer<ImGuiNextWindowData>): Unit {
    return unsafe { ImGuiNextWindowData_destroy(self) }
}

public func _capi_ImGuiOldColumnData_ImGuiOldColumnData(): CPointer<ImGuiOldColumnData> {
    return unsafe { ImGuiOldColumnData_ImGuiOldColumnData() }
}

public func _capi_ImGuiOldColumnData_destroy(self: CPointer<ImGuiOldColumnData>): Unit {
    return unsafe { ImGuiOldColumnData_destroy(self) }
}

public func _capi_ImGuiOldColumns_ImGuiOldColumns(): CPointer<ImGuiOldColumns> {
    return unsafe { ImGuiOldColumns_ImGuiOldColumns() }
}

public func _capi_ImGuiOldColumns_destroy(self: CPointer<ImGuiOldColumns>): Unit {
    return unsafe { ImGuiOldColumns_destroy(self) }
}

public func _capi_ImGuiOnceUponAFrame_ImGuiOnceUponAFrame(): CPointer<ImGuiOnceUponAFrame> {
    return unsafe { ImGuiOnceUponAFrame_ImGuiOnceUponAFrame() }
}

public func _capi_ImGuiOnceUponAFrame_destroy(self: CPointer<ImGuiOnceUponAFrame>): Unit {
    return unsafe { ImGuiOnceUponAFrame_destroy(self) }
}

public func _capi_ImGuiPayload_Clear(self: CPointer<ImGuiPayload>): Unit {
    return unsafe { ImGuiPayload_Clear(self) }
}

public func _capi_ImGuiPayload_ImGuiPayload(): CPointer<ImGuiPayload> {
    return unsafe { ImGuiPayload_ImGuiPayload() }
}

public func _capi_ImGuiPayload_IsDataType(self: CPointer<ImGuiPayload>, `type`: CString): Bool {
    return unsafe { ImGuiPayload_IsDataType(self, `type`) }
}

public func _capi_ImGuiPayload_IsDelivery(self: CPointer<ImGuiPayload>): Bool {
    return unsafe { ImGuiPayload_IsDelivery(self) }
}

public func _capi_ImGuiPayload_IsPreview(self: CPointer<ImGuiPayload>): Bool {
    return unsafe { ImGuiPayload_IsPreview(self) }
}

public func _capi_ImGuiPayload_destroy(self: CPointer<ImGuiPayload>): Unit {
    return unsafe { ImGuiPayload_destroy(self) }
}

public func _capi_ImGuiPlatformIO_ImGuiPlatformIO(): CPointer<ImGuiPlatformIO> {
    return unsafe { ImGuiPlatformIO_ImGuiPlatformIO() }
}

public func _capi_ImGuiPlatformIO_destroy(self: CPointer<ImGuiPlatformIO>): Unit {
    return unsafe { ImGuiPlatformIO_destroy(self) }
}

public func _capi_ImGuiPlatformImeData_ImGuiPlatformImeData(): CPointer<ImGuiPlatformImeData> {
    return unsafe { ImGuiPlatformImeData_ImGuiPlatformImeData() }
}

public func _capi_ImGuiPlatformImeData_destroy(self: CPointer<ImGuiPlatformImeData>): Unit {
    return unsafe { ImGuiPlatformImeData_destroy(self) }
}

public func _capi_ImGuiPlatformMonitor_ImGuiPlatformMonitor(): CPointer<ImGuiPlatformMonitor> {
    return unsafe { ImGuiPlatformMonitor_ImGuiPlatformMonitor() }
}

public func _capi_ImGuiPlatformMonitor_destroy(self: CPointer<ImGuiPlatformMonitor>): Unit {
    return unsafe { ImGuiPlatformMonitor_destroy(self) }
}

public func _capi_ImGuiPopupData_ImGuiPopupData(): CPointer<ImGuiPopupData> {
    return unsafe { ImGuiPopupData_ImGuiPopupData() }
}

public func _capi_ImGuiPopupData_destroy(self: CPointer<ImGuiPopupData>): Unit {
    return unsafe { ImGuiPopupData_destroy(self) }
}

public func _capi_ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr(ptr: CPointer<Unit>): CPointer<ImGuiPtrOrIndex> {
    return unsafe { ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr(ptr) }
}

public func _capi_ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int(index: Int32): CPointer<ImGuiPtrOrIndex> {
    return unsafe { ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int(index) }
}

public func _capi_ImGuiPtrOrIndex_destroy(self: CPointer<ImGuiPtrOrIndex>): Unit {
    return unsafe { ImGuiPtrOrIndex_destroy(self) }
}

public func _capi_ImGuiSettingsHandler_ImGuiSettingsHandler(): CPointer<ImGuiSettingsHandler> {
    return unsafe { ImGuiSettingsHandler_ImGuiSettingsHandler() }
}

public func _capi_ImGuiSettingsHandler_destroy(self: CPointer<ImGuiSettingsHandler>): Unit {
    return unsafe { ImGuiSettingsHandler_destroy(self) }
}

public func _capi_ImGuiStackLevelInfo_ImGuiStackLevelInfo(): CPointer<ImGuiStackLevelInfo> {
    return unsafe { ImGuiStackLevelInfo_ImGuiStackLevelInfo() }
}

public func _capi_ImGuiStackLevelInfo_destroy(self: CPointer<ImGuiStackLevelInfo>): Unit {
    return unsafe { ImGuiStackLevelInfo_destroy(self) }
}

public func _capi_ImGuiStackSizes_CompareWithContextState(self: CPointer<ImGuiStackSizes>, ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { ImGuiStackSizes_CompareWithContextState(self, ctx) }
}

public func _capi_ImGuiStackSizes_ImGuiStackSizes(): CPointer<ImGuiStackSizes> {
    return unsafe { ImGuiStackSizes_ImGuiStackSizes() }
}

public func _capi_ImGuiStackSizes_SetToContextState(self: CPointer<ImGuiStackSizes>, ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { ImGuiStackSizes_SetToContextState(self, ctx) }
}

public func _capi_ImGuiStackSizes_destroy(self: CPointer<ImGuiStackSizes>): Unit {
    return unsafe { ImGuiStackSizes_destroy(self) }
}

public func _capi_ImGuiStoragePair_ImGuiStoragePair_Int(_key: ImGuiID, _val: Int32): CPointer<ImGuiStoragePair> {
    return unsafe { ImGuiStoragePair_ImGuiStoragePair_Int(_key, _val) }
}

public func _capi_ImGuiStoragePair_ImGuiStoragePair_Float(_key: ImGuiID, _val: Float32): CPointer<ImGuiStoragePair> {
    return unsafe { ImGuiStoragePair_ImGuiStoragePair_Float(_key, _val) }
}

public func _capi_ImGuiStoragePair_ImGuiStoragePair_Ptr(_key: ImGuiID, _val: CPointer<Unit>): CPointer<ImGuiStoragePair> {
    return unsafe { ImGuiStoragePair_ImGuiStoragePair_Ptr(_key, _val) }
}

public func _capi_ImGuiStoragePair_destroy(self: CPointer<ImGuiStoragePair>): Unit {
    return unsafe { ImGuiStoragePair_destroy(self) }
}

public func _capi_ImGuiStorage_BuildSortByKey(self: CPointer<ImGuiStorage>): Unit {
    return unsafe { ImGuiStorage_BuildSortByKey(self) }
}

public func _capi_ImGuiStorage_Clear(self: CPointer<ImGuiStorage>): Unit {
    return unsafe { ImGuiStorage_Clear(self) }
}

public func _capi_ImGuiStorage_GetBool(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Bool): Bool {
    return unsafe { ImGuiStorage_GetBool(self, key, default_val) }
}

public func _capi_ImGuiStorage_GetBoolRef(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Bool): CPointer<Bool> {
    return unsafe { ImGuiStorage_GetBoolRef(self, key, default_val) }
}

public func _capi_ImGuiStorage_GetFloat(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Float32): Float32 {
    return unsafe { ImGuiStorage_GetFloat(self, key, default_val) }
}

public func _capi_ImGuiStorage_GetFloatRef(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Float32): CPointer<Float32> {
    return unsafe { ImGuiStorage_GetFloatRef(self, key, default_val) }
}

public func _capi_ImGuiStorage_GetInt(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Int32): Int32 {
    return unsafe { ImGuiStorage_GetInt(self, key, default_val) }
}

public func _capi_ImGuiStorage_GetIntRef(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: Int32): CPointer<Int32> {
    return unsafe { ImGuiStorage_GetIntRef(self, key, default_val) }
}

public func _capi_ImGuiStorage_GetVoidPtr(self: CPointer<ImGuiStorage>, key: ImGuiID): CPointer<Unit> {
    return unsafe { ImGuiStorage_GetVoidPtr(self, key) }
}

public func _capi_ImGuiStorage_GetVoidPtrRef(self: CPointer<ImGuiStorage>, key: ImGuiID, default_val: CPointer<Unit>): CPointer<CPointer<Unit>> {
    return unsafe { ImGuiStorage_GetVoidPtrRef(self, key, default_val) }
}

public func _capi_ImGuiStorage_SetAllInt(self: CPointer<ImGuiStorage>, val: Int32): Unit {
    return unsafe { ImGuiStorage_SetAllInt(self, val) }
}

public func _capi_ImGuiStorage_SetBool(self: CPointer<ImGuiStorage>, key: ImGuiID, val: Bool): Unit {
    return unsafe { ImGuiStorage_SetBool(self, key, val) }
}

public func _capi_ImGuiStorage_SetFloat(self: CPointer<ImGuiStorage>, key: ImGuiID, val: Float32): Unit {
    return unsafe { ImGuiStorage_SetFloat(self, key, val) }
}

public func _capi_ImGuiStorage_SetInt(self: CPointer<ImGuiStorage>, key: ImGuiID, val: Int32): Unit {
    return unsafe { ImGuiStorage_SetInt(self, key, val) }
}

public func _capi_ImGuiStorage_SetVoidPtr(self: CPointer<ImGuiStorage>, key: ImGuiID, val: CPointer<Unit>): Unit {
    return unsafe { ImGuiStorage_SetVoidPtr(self, key, val) }
}

public func _capi_ImGuiStyleMod_ImGuiStyleMod_Int(idx: ImGuiStyleVar, v: Int32): CPointer<ImGuiStyleMod> {
    return unsafe { ImGuiStyleMod_ImGuiStyleMod_Int(idx, v) }
}

public func _capi_ImGuiStyleMod_ImGuiStyleMod_Float(idx: ImGuiStyleVar, v: Float32): CPointer<ImGuiStyleMod> {
    return unsafe { ImGuiStyleMod_ImGuiStyleMod_Float(idx, v) }
}

public func _capi_ImGuiStyleMod_ImGuiStyleMod_Vec2(idx: ImGuiStyleVar, v: ImVec2): CPointer<ImGuiStyleMod> {
    return unsafe { ImGuiStyleMod_ImGuiStyleMod_Vec2(idx, v) }
}

public func _capi_ImGuiStyleMod_destroy(self: CPointer<ImGuiStyleMod>): Unit {
    return unsafe { ImGuiStyleMod_destroy(self) }
}

public func _capi_ImGuiStyle_ImGuiStyle(): CPointer<ImGuiStyle> {
    return unsafe { ImGuiStyle_ImGuiStyle() }
}

public func _capi_ImGuiStyle_ScaleAllSizes(self: CPointer<ImGuiStyle>, scale_factor: Float32): Unit {
    return unsafe { ImGuiStyle_ScaleAllSizes(self, scale_factor) }
}

public func _capi_ImGuiStyle_destroy(self: CPointer<ImGuiStyle>): Unit {
    return unsafe { ImGuiStyle_destroy(self) }
}

public func _capi_ImGuiTabBar_ImGuiTabBar(): CPointer<ImGuiTabBar> {
    return unsafe { ImGuiTabBar_ImGuiTabBar() }
}

public func _capi_ImGuiTabBar_destroy(self: CPointer<ImGuiTabBar>): Unit {
    return unsafe { ImGuiTabBar_destroy(self) }
}

public func _capi_ImGuiTabItem_ImGuiTabItem(): CPointer<ImGuiTabItem> {
    return unsafe { ImGuiTabItem_ImGuiTabItem() }
}

public func _capi_ImGuiTabItem_destroy(self: CPointer<ImGuiTabItem>): Unit {
    return unsafe { ImGuiTabItem_destroy(self) }
}

public func _capi_ImGuiTableColumnSettings_ImGuiTableColumnSettings(): CPointer<ImGuiTableColumnSettings> {
    return unsafe { ImGuiTableColumnSettings_ImGuiTableColumnSettings() }
}

public func _capi_ImGuiTableColumnSettings_destroy(self: CPointer<ImGuiTableColumnSettings>): Unit {
    return unsafe { ImGuiTableColumnSettings_destroy(self) }
}

public func _capi_ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs(): CPointer<ImGuiTableColumnSortSpecs> {
    return unsafe { ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs() }
}

public func _capi_ImGuiTableColumnSortSpecs_destroy(self: CPointer<ImGuiTableColumnSortSpecs>): Unit {
    return unsafe { ImGuiTableColumnSortSpecs_destroy(self) }
}

public func _capi_ImGuiTableColumn_ImGuiTableColumn(): CPointer<ImGuiTableColumn> {
    return unsafe { ImGuiTableColumn_ImGuiTableColumn() }
}

public func _capi_ImGuiTableColumn_destroy(self: CPointer<ImGuiTableColumn>): Unit {
    return unsafe { ImGuiTableColumn_destroy(self) }
}

public func _capi_ImGuiTableInstanceData_ImGuiTableInstanceData(): CPointer<ImGuiTableInstanceData> {
    return unsafe { ImGuiTableInstanceData_ImGuiTableInstanceData() }
}

public func _capi_ImGuiTableInstanceData_destroy(self: CPointer<ImGuiTableInstanceData>): Unit {
    return unsafe { ImGuiTableInstanceData_destroy(self) }
}

public func _capi_ImGuiTableSettings_GetColumnSettings(self: CPointer<ImGuiTableSettings>): CPointer<ImGuiTableColumnSettings> {
    return unsafe { ImGuiTableSettings_GetColumnSettings(self) }
}

public func _capi_ImGuiTableSettings_ImGuiTableSettings(): CPointer<ImGuiTableSettings> {
    return unsafe { ImGuiTableSettings_ImGuiTableSettings() }
}

public func _capi_ImGuiTableSettings_destroy(self: CPointer<ImGuiTableSettings>): Unit {
    return unsafe { ImGuiTableSettings_destroy(self) }
}

public func _capi_ImGuiTableSortSpecs_ImGuiTableSortSpecs(): CPointer<ImGuiTableSortSpecs> {
    return unsafe { ImGuiTableSortSpecs_ImGuiTableSortSpecs() }
}

public func _capi_ImGuiTableSortSpecs_destroy(self: CPointer<ImGuiTableSortSpecs>): Unit {
    return unsafe { ImGuiTableSortSpecs_destroy(self) }
}

public func _capi_ImGuiTableTempData_ImGuiTableTempData(): CPointer<ImGuiTableTempData> {
    return unsafe { ImGuiTableTempData_ImGuiTableTempData() }
}

public func _capi_ImGuiTableTempData_destroy(self: CPointer<ImGuiTableTempData>): Unit {
    return unsafe { ImGuiTableTempData_destroy(self) }
}

public func _capi_ImGuiTable_ImGuiTable(): CPointer<ImGuiTable> {
    return unsafe { ImGuiTable_ImGuiTable() }
}

public func _capi_ImGuiTable_destroy(self: CPointer<ImGuiTable>): Unit {
    return unsafe { ImGuiTable_destroy(self) }
}

public func _capi_ImGuiTextBuffer_ImGuiTextBuffer(): CPointer<ImGuiTextBuffer> {
    return unsafe { ImGuiTextBuffer_ImGuiTextBuffer() }
}

public func _capi_ImGuiTextBuffer_append(self: CPointer<ImGuiTextBuffer>, str: CString, str_end: CString): Unit {
    return unsafe { ImGuiTextBuffer_append(self, str, str_end) }
}

public func _capi_ImGuiTextBuffer_appendf(self: CPointer<ImGuiTextBuffer>, fmt: CString): Unit {
    return unsafe { ImGuiTextBuffer_appendf(self, fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_ImGuiTextBuffer_appendfv(self: CPointer<ImGuiTextBuffer>, fmt: CString, args: va_list): Unit { ...

public func _capi_ImGuiTextBuffer_begin(self: CPointer<ImGuiTextBuffer>): CString {
    return unsafe { ImGuiTextBuffer_begin(self) }
}

public func _capi_ImGuiTextBuffer_c_str(self: CPointer<ImGuiTextBuffer>): CString {
    return unsafe { ImGuiTextBuffer_c_str(self) }
}

public func _capi_ImGuiTextBuffer_clear(self: CPointer<ImGuiTextBuffer>): Unit {
    return unsafe { ImGuiTextBuffer_clear(self) }
}

public func _capi_ImGuiTextBuffer_destroy(self: CPointer<ImGuiTextBuffer>): Unit {
    return unsafe { ImGuiTextBuffer_destroy(self) }
}

public func _capi_ImGuiTextBuffer_empty(self: CPointer<ImGuiTextBuffer>): Bool {
    return unsafe { ImGuiTextBuffer_empty(self) }
}

public func _capi_ImGuiTextBuffer_end(self: CPointer<ImGuiTextBuffer>): CString {
    return unsafe { ImGuiTextBuffer_end(self) }
}

public func _capi_ImGuiTextBuffer_reserve(self: CPointer<ImGuiTextBuffer>, capacity: Int32): Unit {
    return unsafe { ImGuiTextBuffer_reserve(self, capacity) }
}

public func _capi_ImGuiTextBuffer_size(self: CPointer<ImGuiTextBuffer>): Int32 {
    return unsafe { ImGuiTextBuffer_size(self) }
}

public func _capi_ImGuiTextFilter_Build(self: CPointer<ImGuiTextFilter>): Unit {
    return unsafe { ImGuiTextFilter_Build(self) }
}

public func _capi_ImGuiTextFilter_Clear(self: CPointer<ImGuiTextFilter>): Unit {
    return unsafe { ImGuiTextFilter_Clear(self) }
}

public func _capi_ImGuiTextFilter_Draw(self: CPointer<ImGuiTextFilter>, label: CString, width: Float32): Bool {
    return unsafe { ImGuiTextFilter_Draw(self, label, width) }
}

public func _capi_ImGuiTextFilter_ImGuiTextFilter(default_filter: CString): CPointer<ImGuiTextFilter> {
    return unsafe { ImGuiTextFilter_ImGuiTextFilter(default_filter) }
}

public func _capi_ImGuiTextFilter_IsActive(self: CPointer<ImGuiTextFilter>): Bool {
    return unsafe { ImGuiTextFilter_IsActive(self) }
}

public func _capi_ImGuiTextFilter_PassFilter(self: CPointer<ImGuiTextFilter>, text: CString, text_end: CString): Bool {
    return unsafe { ImGuiTextFilter_PassFilter(self, text, text_end) }
}

public func _capi_ImGuiTextFilter_destroy(self: CPointer<ImGuiTextFilter>): Unit {
    return unsafe { ImGuiTextFilter_destroy(self) }
}

public func _capi_ImGuiTextIndex_append(self: CPointer<ImGuiTextIndex>, base: CString, old_size: Int32, new_size: Int32): Unit {
    return unsafe { ImGuiTextIndex_append(self, base, old_size, new_size) }
}

public func _capi_ImGuiTextIndex_clear(self: CPointer<ImGuiTextIndex>): Unit {
    return unsafe { ImGuiTextIndex_clear(self) }
}

public func _capi_ImGuiTextIndex_get_line_begin(self: CPointer<ImGuiTextIndex>, base: CString, n: Int32): CString {
    return unsafe { ImGuiTextIndex_get_line_begin(self, base, n) }
}

public func _capi_ImGuiTextIndex_get_line_end(self: CPointer<ImGuiTextIndex>, base: CString, n: Int32): CString {
    return unsafe { ImGuiTextIndex_get_line_end(self, base, n) }
}

public func _capi_ImGuiTextIndex_size(self: CPointer<ImGuiTextIndex>): Int32 {
    return unsafe { ImGuiTextIndex_size(self) }
}

public func _capi_ImGuiTextRange_ImGuiTextRange_Nil(): CPointer<ImGuiTextRange> {
    return unsafe { ImGuiTextRange_ImGuiTextRange_Nil() }
}

public func _capi_ImGuiTextRange_ImGuiTextRange_Str(_b: CString, _e: CString): CPointer<ImGuiTextRange> {
    return unsafe { ImGuiTextRange_ImGuiTextRange_Str(_b, _e) }
}

public func _capi_ImGuiTextRange_destroy(self: CPointer<ImGuiTextRange>): Unit {
    return unsafe { ImGuiTextRange_destroy(self) }
}

public func _capi_ImGuiTextRange_empty(self: CPointer<ImGuiTextRange>): Bool {
    return unsafe { ImGuiTextRange_empty(self) }
}

public func _capi_ImGuiTextRange_split(self: CPointer<ImGuiTextRange>, separator: UInt8, out: CPointer<ImVector_ImGuiTextRange>): Unit {
    return unsafe { ImGuiTextRange_split(self, separator, out) }
}

public func _capi_ImGuiTypingSelectState_Clear(self: CPointer<ImGuiTypingSelectState>): Unit {
    return unsafe { ImGuiTypingSelectState_Clear(self) }
}

public func _capi_ImGuiTypingSelectState_ImGuiTypingSelectState(): CPointer<ImGuiTypingSelectState> {
    return unsafe { ImGuiTypingSelectState_ImGuiTypingSelectState() }
}

public func _capi_ImGuiTypingSelectState_destroy(self: CPointer<ImGuiTypingSelectState>): Unit {
    return unsafe { ImGuiTypingSelectState_destroy(self) }
}

public func _capi_ImGuiViewportP_CalcWorkRectPos(pOut: CPointer<ImVec2>, self: CPointer<ImGuiViewportP>, off_min: ImVec2): Unit {
    return unsafe { ImGuiViewportP_CalcWorkRectPos(pOut, self, off_min) }
}

public func _capi_ImGuiViewportP_CalcWorkRectSize(pOut: CPointer<ImVec2>, self: CPointer<ImGuiViewportP>, off_min: ImVec2, off_max: ImVec2): Unit {
    return unsafe { ImGuiViewportP_CalcWorkRectSize(pOut, self, off_min, off_max) }
}

public func _capi_ImGuiViewportP_ClearRequestFlags(self: CPointer<ImGuiViewportP>): Unit {
    return unsafe { ImGuiViewportP_ClearRequestFlags(self) }
}

public func _capi_ImGuiViewportP_GetBuildWorkRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiViewportP>): Unit {
    return unsafe { ImGuiViewportP_GetBuildWorkRect(pOut, self) }
}

public func _capi_ImGuiViewportP_GetMainRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiViewportP>): Unit {
    return unsafe { ImGuiViewportP_GetMainRect(pOut, self) }
}

public func _capi_ImGuiViewportP_GetWorkRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiViewportP>): Unit {
    return unsafe { ImGuiViewportP_GetWorkRect(pOut, self) }
}

public func _capi_ImGuiViewportP_ImGuiViewportP(): CPointer<ImGuiViewportP> {
    return unsafe { ImGuiViewportP_ImGuiViewportP() }
}

public func _capi_ImGuiViewportP_UpdateWorkRect(self: CPointer<ImGuiViewportP>): Unit {
    return unsafe { ImGuiViewportP_UpdateWorkRect(self) }
}

public func _capi_ImGuiViewportP_destroy(self: CPointer<ImGuiViewportP>): Unit {
    return unsafe { ImGuiViewportP_destroy(self) }
}

public func _capi_ImGuiViewport_GetCenter(pOut: CPointer<ImVec2>, self: CPointer<ImGuiViewport>): Unit {
    return unsafe { ImGuiViewport_GetCenter(pOut, self) }
}

public func _capi_ImGuiViewport_GetWorkCenter(pOut: CPointer<ImVec2>, self: CPointer<ImGuiViewport>): Unit {
    return unsafe { ImGuiViewport_GetWorkCenter(pOut, self) }
}

public func _capi_ImGuiViewport_ImGuiViewport(): CPointer<ImGuiViewport> {
    return unsafe { ImGuiViewport_ImGuiViewport() }
}

public func _capi_ImGuiViewport_destroy(self: CPointer<ImGuiViewport>): Unit {
    return unsafe { ImGuiViewport_destroy(self) }
}

public func _capi_ImGuiWindowClass_ImGuiWindowClass(): CPointer<ImGuiWindowClass> {
    return unsafe { ImGuiWindowClass_ImGuiWindowClass() }
}

public func _capi_ImGuiWindowClass_destroy(self: CPointer<ImGuiWindowClass>): Unit {
    return unsafe { ImGuiWindowClass_destroy(self) }
}

public func _capi_ImGuiWindowSettings_GetName(self: CPointer<ImGuiWindowSettings>): CString {
    return unsafe { ImGuiWindowSettings_GetName(self) }
}

public func _capi_ImGuiWindowSettings_ImGuiWindowSettings(): CPointer<ImGuiWindowSettings> {
    return unsafe { ImGuiWindowSettings_ImGuiWindowSettings() }
}

public func _capi_ImGuiWindowSettings_destroy(self: CPointer<ImGuiWindowSettings>): Unit {
    return unsafe { ImGuiWindowSettings_destroy(self) }
}

public func _capi_ImGuiWindow_CalcFontSize(self: CPointer<ImGuiWindow>): Float32 {
    return unsafe { ImGuiWindow_CalcFontSize(self) }
}

public func _capi_ImGuiWindow_GetID_Str(self: CPointer<ImGuiWindow>, str: CString, str_end: CString): ImGuiID {
    return unsafe { ImGuiWindow_GetID_Str(self, str, str_end) }
}

public func _capi_ImGuiWindow_GetID_Ptr(self: CPointer<ImGuiWindow>, ptr: CPointer<Unit>): ImGuiID {
    return unsafe { ImGuiWindow_GetID_Ptr(self, ptr) }
}

public func _capi_ImGuiWindow_GetID_Int(self: CPointer<ImGuiWindow>, n: Int32): ImGuiID {
    return unsafe { ImGuiWindow_GetID_Int(self, n) }
}

public func _capi_ImGuiWindow_GetIDFromRectangle(self: CPointer<ImGuiWindow>, r_abs: ImRect): ImGuiID {
    return unsafe { ImGuiWindow_GetIDFromRectangle(self, r_abs) }
}

public func _capi_ImGuiWindow_ImGuiWindow(context: CPointer<ImGuiContext>, name: CString): CPointer<ImGuiWindow> {
    return unsafe { ImGuiWindow_ImGuiWindow(context, name) }
}

public func _capi_ImGuiWindow_MenuBarRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiWindow>): Unit {
    return unsafe { ImGuiWindow_MenuBarRect(pOut, self) }
}

public func _capi_ImGuiWindow_Rect(pOut: CPointer<ImRect>, self: CPointer<ImGuiWindow>): Unit {
    return unsafe { ImGuiWindow_Rect(pOut, self) }
}

public func _capi_ImGuiWindow_TitleBarRect(pOut: CPointer<ImRect>, self: CPointer<ImGuiWindow>): Unit {
    return unsafe { ImGuiWindow_TitleBarRect(pOut, self) }
}

public func _capi_ImGuiWindow_destroy(self: CPointer<ImGuiWindow>): Unit {
    return unsafe { ImGuiWindow_destroy(self) }
}

public func _capi_ImRect_Add_Vec2(self: CPointer<ImRect>, p: ImVec2): Unit {
    return unsafe { ImRect_Add_Vec2(self, p) }
}

public func _capi_ImRect_Add_Rect(self: CPointer<ImRect>, r: ImRect): Unit {
    return unsafe { ImRect_Add_Rect(self, r) }
}

public func _capi_ImRect_ClipWith(self: CPointer<ImRect>, r: ImRect): Unit {
    return unsafe { ImRect_ClipWith(self, r) }
}

public func _capi_ImRect_ClipWithFull(self: CPointer<ImRect>, r: ImRect): Unit {
    return unsafe { ImRect_ClipWithFull(self, r) }
}

public func _capi_ImRect_Contains_Vec2(self: CPointer<ImRect>, p: ImVec2): Bool {
    return unsafe { ImRect_Contains_Vec2(self, p) }
}

public func _capi_ImRect_Contains_Rect(self: CPointer<ImRect>, r: ImRect): Bool {
    return unsafe { ImRect_Contains_Rect(self, r) }
}

public func _capi_ImRect_ContainsWithPad(self: CPointer<ImRect>, p: ImVec2, pad: ImVec2): Bool {
    return unsafe { ImRect_ContainsWithPad(self, p, pad) }
}

public func _capi_ImRect_Expand_Float(self: CPointer<ImRect>, amount: Float32): Unit {
    return unsafe { ImRect_Expand_Float(self, amount) }
}

public func _capi_ImRect_Expand_Vec2(self: CPointer<ImRect>, amount: ImVec2): Unit {
    return unsafe { ImRect_Expand_Vec2(self, amount) }
}

public func _capi_ImRect_Floor(self: CPointer<ImRect>): Unit {
    return unsafe { ImRect_Floor(self) }
}

public func _capi_ImRect_GetArea(self: CPointer<ImRect>): Float32 {
    return unsafe { ImRect_GetArea(self) }
}

public func _capi_ImRect_GetBL(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit {
    return unsafe { ImRect_GetBL(pOut, self) }
}

public func _capi_ImRect_GetBR(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit {
    return unsafe { ImRect_GetBR(pOut, self) }
}

public func _capi_ImRect_GetCenter(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit {
    return unsafe { ImRect_GetCenter(pOut, self) }
}

public func _capi_ImRect_GetHeight(self: CPointer<ImRect>): Float32 {
    return unsafe { ImRect_GetHeight(self) }
}

public func _capi_ImRect_GetSize(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit {
    return unsafe { ImRect_GetSize(pOut, self) }
}

public func _capi_ImRect_GetTL(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit {
    return unsafe { ImRect_GetTL(pOut, self) }
}

public func _capi_ImRect_GetTR(pOut: CPointer<ImVec2>, self: CPointer<ImRect>): Unit {
    return unsafe { ImRect_GetTR(pOut, self) }
}

public func _capi_ImRect_GetWidth(self: CPointer<ImRect>): Float32 {
    return unsafe { ImRect_GetWidth(self) }
}

public func _capi_ImRect_ImRect_Nil(): CPointer<ImRect> {
    return unsafe { ImRect_ImRect_Nil() }
}

public func _capi_ImRect_ImRect_Vec2(min: ImVec2, max: ImVec2): CPointer<ImRect> {
    return unsafe { ImRect_ImRect_Vec2(min, max) }
}

public func _capi_ImRect_ImRect_Vec4(v: ImVec4): CPointer<ImRect> {
    return unsafe { ImRect_ImRect_Vec4(v) }
}

public func _capi_ImRect_ImRect_Float(x1: Float32, y1: Float32, x2: Float32, y2: Float32): CPointer<ImRect> {
    return unsafe { ImRect_ImRect_Float(x1, y1, x2, y2) }
}

public func _capi_ImRect_IsInverted(self: CPointer<ImRect>): Bool {
    return unsafe { ImRect_IsInverted(self) }
}

public func _capi_ImRect_Overlaps(self: CPointer<ImRect>, r: ImRect): Bool {
    return unsafe { ImRect_Overlaps(self, r) }
}

public func _capi_ImRect_ToVec4(pOut: CPointer<ImVec4>, self: CPointer<ImRect>): Unit {
    return unsafe { ImRect_ToVec4(pOut, self) }
}

public func _capi_ImRect_Translate(self: CPointer<ImRect>, d: ImVec2): Unit {
    return unsafe { ImRect_Translate(self, d) }
}

public func _capi_ImRect_TranslateX(self: CPointer<ImRect>, dx: Float32): Unit {
    return unsafe { ImRect_TranslateX(self, dx) }
}

public func _capi_ImRect_TranslateY(self: CPointer<ImRect>, dy: Float32): Unit {
    return unsafe { ImRect_TranslateY(self, dy) }
}

public func _capi_ImRect_destroy(self: CPointer<ImRect>): Unit {
    return unsafe { ImRect_destroy(self) }
}

public func _capi_ImVec1_ImVec1_Nil(): CPointer<ImVec1> {
    return unsafe { ImVec1_ImVec1_Nil() }
}

public func _capi_ImVec1_ImVec1_Float(_x: Float32): CPointer<ImVec1> {
    return unsafe { ImVec1_ImVec1_Float(_x) }
}

public func _capi_ImVec1_destroy(self: CPointer<ImVec1>): Unit {
    return unsafe { ImVec1_destroy(self) }
}

public func _capi_ImVec2_ImVec2_Nil(): CPointer<ImVec2> {
    return unsafe { ImVec2_ImVec2_Nil() }
}

public func _capi_ImVec2_ImVec2_Float(_x: Float32, _y: Float32): CPointer<ImVec2> {
    return unsafe { ImVec2_ImVec2_Float(_x, _y) }
}

public func _capi_ImVec2_destroy(self: CPointer<ImVec2>): Unit {
    return unsafe { ImVec2_destroy(self) }
}

public func _capi_ImVec2ih_ImVec2ih_Nil(): CPointer<ImVec2ih> {
    return unsafe { ImVec2ih_ImVec2ih_Nil() }
}

public func _capi_ImVec2ih_ImVec2ih_short(_x: Int16, _y: Int16): CPointer<ImVec2ih> {
    return unsafe { ImVec2ih_ImVec2ih_short(_x, _y) }
}

public func _capi_ImVec2ih_ImVec2ih_Vec2(rhs: ImVec2): CPointer<ImVec2ih> {
    return unsafe { ImVec2ih_ImVec2ih_Vec2(rhs) }
}

public func _capi_ImVec2ih_destroy(self: CPointer<ImVec2ih>): Unit {
    return unsafe { ImVec2ih_destroy(self) }
}

public func _capi_ImVec4_ImVec4_Nil(): CPointer<ImVec4> {
    return unsafe { ImVec4_ImVec4_Nil() }
}

public func _capi_ImVec4_ImVec4_Float(_x: Float32, _y: Float32, _z: Float32, _w: Float32): CPointer<ImVec4> {
    return unsafe { ImVec4_ImVec4_Float(_x, _y, _z, _w) }
}

public func _capi_ImVec4_destroy(self: CPointer<ImVec4>): Unit {
    return unsafe { ImVec4_destroy(self) }
}

public func _capi_igAcceptDragDropPayload(`type`: CString, flags: ImGuiDragDropFlags): CPointer<ImGuiPayload> {
    return unsafe { igAcceptDragDropPayload(`type`, flags) }
}

public func _capi_igActivateItemByID(id: ImGuiID): Unit {
    return unsafe { igActivateItemByID(id) }
}

public func _capi_igAddContextHook(context: CPointer<ImGuiContext>, hook: CPointer<ImGuiContextHook>): ImGuiID {
    return unsafe { igAddContextHook(context, hook) }
}

public func _capi_igAddDrawListToDrawDataEx(draw_data: CPointer<ImDrawData>, out_list: CPointer<ImVector_ImDrawListPtr>, draw_list: CPointer<ImDrawList>): Unit {
    return unsafe { igAddDrawListToDrawDataEx(draw_data, out_list, draw_list) }
}

public func _capi_igAddSettingsHandler(handler: CPointer<ImGuiSettingsHandler>): Unit {
    return unsafe { igAddSettingsHandler(handler) }
}

public func _capi_igAlignTextToFramePadding(): Unit {
    return unsafe { igAlignTextToFramePadding() }
}

public func _capi_igArrowButton(str_id: CString, dir: ImGuiDir): Bool {
    return unsafe { igArrowButton(str_id, dir) }
}

public func _capi_igArrowButtonEx(str_id: CString, dir: ImGuiDir, size_arg: ImVec2, flags: ImGuiButtonFlags): Bool {
    return unsafe { igArrowButtonEx(str_id, dir, size_arg, flags) }
}

public func _capi_igBegin(name: CString, p_open: CPointer<Bool>, flags: ImGuiWindowFlags): Bool {
    return unsafe { igBegin(name, p_open, flags) }
}

public func _capi_igBeginChild_Str(str_id: CString, size: ImVec2, child_flags: ImGuiChildFlags, window_flags: ImGuiWindowFlags): Bool {
    return unsafe { igBeginChild_Str(str_id, size, child_flags, window_flags) }
}

public func _capi_igBeginChild_ID(id: ImGuiID, size: ImVec2, child_flags: ImGuiChildFlags, window_flags: ImGuiWindowFlags): Bool {
    return unsafe { igBeginChild_ID(id, size, child_flags, window_flags) }
}

public func _capi_igBeginChildEx(name: CString, id: ImGuiID, size_arg: ImVec2, child_flags: ImGuiChildFlags, window_flags: ImGuiWindowFlags): Bool {
    return unsafe { igBeginChildEx(name, id, size_arg, child_flags, window_flags) }
}

public func _capi_igBeginColumns(str_id: CString, count: Int32, flags: ImGuiOldColumnFlags): Unit {
    return unsafe { igBeginColumns(str_id, count, flags) }
}

public func _capi_igBeginCombo(label: CString, preview_value: CString, flags: ImGuiComboFlags): Bool {
    return unsafe { igBeginCombo(label, preview_value, flags) }
}

public func _capi_igBeginComboPopup(popup_id: ImGuiID, bb: ImRect, flags: ImGuiComboFlags): Bool {
    return unsafe { igBeginComboPopup(popup_id, bb, flags) }
}

public func _capi_igBeginComboPreview(): Bool {
    return unsafe { igBeginComboPreview() }
}

public func _capi_igBeginDisabled(disabled: Bool): Unit {
    return unsafe { igBeginDisabled(disabled) }
}

public func _capi_igBeginDisabledOverrideReenable(): Unit {
    return unsafe { igBeginDisabledOverrideReenable() }
}

public func _capi_igBeginDockableDragDropSource(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igBeginDockableDragDropSource(window) }
}

public func _capi_igBeginDockableDragDropTarget(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igBeginDockableDragDropTarget(window) }
}

public func _capi_igBeginDocked(window: CPointer<ImGuiWindow>, p_open: CPointer<Bool>): Unit {
    return unsafe { igBeginDocked(window, p_open) }
}

public func _capi_igBeginDragDropSource(flags: ImGuiDragDropFlags): Bool {
    return unsafe { igBeginDragDropSource(flags) }
}

public func _capi_igBeginDragDropTarget(): Bool {
    return unsafe { igBeginDragDropTarget() }
}

public func _capi_igBeginDragDropTargetCustom(bb: ImRect, id: ImGuiID): Bool {
    return unsafe { igBeginDragDropTargetCustom(bb, id) }
}

public func _capi_igBeginGroup(): Unit {
    return unsafe { igBeginGroup() }
}

public func _capi_igBeginItemTooltip(): Bool {
    return unsafe { igBeginItemTooltip() }
}

public func _capi_igBeginListBox(label: CString, size: ImVec2): Bool {
    return unsafe { igBeginListBox(label, size) }
}

public func _capi_igBeginMainMenuBar(): Bool {
    return unsafe { igBeginMainMenuBar() }
}

public func _capi_igBeginMenu(label: CString, enabled: Bool): Bool {
    return unsafe { igBeginMenu(label, enabled) }
}

public func _capi_igBeginMenuBar(): Bool {
    return unsafe { igBeginMenuBar() }
}

public func _capi_igBeginMenuEx(label: CString, icon: CString, enabled: Bool): Bool {
    return unsafe { igBeginMenuEx(label, icon, enabled) }
}

public func _capi_igBeginPopup(str_id: CString, flags: ImGuiWindowFlags): Bool {
    return unsafe { igBeginPopup(str_id, flags) }
}

public func _capi_igBeginPopupContextItem(str_id: CString, popup_flags: ImGuiPopupFlags): Bool {
    return unsafe { igBeginPopupContextItem(str_id, popup_flags) }
}

public func _capi_igBeginPopupContextVoid(str_id: CString, popup_flags: ImGuiPopupFlags): Bool {
    return unsafe { igBeginPopupContextVoid(str_id, popup_flags) }
}

public func _capi_igBeginPopupContextWindow(str_id: CString, popup_flags: ImGuiPopupFlags): Bool {
    return unsafe { igBeginPopupContextWindow(str_id, popup_flags) }
}

public func _capi_igBeginPopupEx(id: ImGuiID, extra_flags: ImGuiWindowFlags): Bool {
    return unsafe { igBeginPopupEx(id, extra_flags) }
}

public func _capi_igBeginPopupModal(name: CString, p_open: CPointer<Bool>, flags: ImGuiWindowFlags): Bool {
    return unsafe { igBeginPopupModal(name, p_open, flags) }
}

public func _capi_igBeginTabBar(str_id: CString, flags: ImGuiTabBarFlags): Bool {
    return unsafe { igBeginTabBar(str_id, flags) }
}

public func _capi_igBeginTabBarEx(tab_bar: CPointer<ImGuiTabBar>, bb: ImRect, flags: ImGuiTabBarFlags): Bool {
    return unsafe { igBeginTabBarEx(tab_bar, bb, flags) }
}

public func _capi_igBeginTabItem(label: CString, p_open: CPointer<Bool>, flags: ImGuiTabItemFlags): Bool {
    return unsafe { igBeginTabItem(label, p_open, flags) }
}

public func _capi_igBeginTable(str_id: CString, column: Int32, flags: ImGuiTableFlags, outer_size: ImVec2, inner_width: Float32): Bool {
    return unsafe { igBeginTable(str_id, column, flags, outer_size, inner_width) }
}

public func _capi_igBeginTableEx(name: CString, id: ImGuiID, columns_count: Int32, flags: ImGuiTableFlags, outer_size: ImVec2, inner_width: Float32): Bool {
    return unsafe { igBeginTableEx(name, id, columns_count, flags, outer_size, inner_width) }
}

public func _capi_igBeginTooltip(): Bool {
    return unsafe { igBeginTooltip() }
}

public func _capi_igBeginTooltipEx(tooltip_flags: ImGuiTooltipFlags, extra_window_flags: ImGuiWindowFlags): Bool {
    return unsafe { igBeginTooltipEx(tooltip_flags, extra_window_flags) }
}

public func _capi_igBeginTooltipHidden(): Bool {
    return unsafe { igBeginTooltipHidden() }
}

public func _capi_igBeginViewportSideBar(name: CString, viewport: CPointer<ImGuiViewport>, dir: ImGuiDir, size: Float32, window_flags: ImGuiWindowFlags): Bool {
    return unsafe { igBeginViewportSideBar(name, viewport, dir, size, window_flags) }
}

public func _capi_igBringWindowToDisplayBack(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igBringWindowToDisplayBack(window) }
}

public func _capi_igBringWindowToDisplayBehind(window: CPointer<ImGuiWindow>, above_window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igBringWindowToDisplayBehind(window, above_window) }
}

public func _capi_igBringWindowToDisplayFront(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igBringWindowToDisplayFront(window) }
}

public func _capi_igBringWindowToFocusFront(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igBringWindowToFocusFront(window) }
}

public func _capi_igBullet(): Unit {
    return unsafe { igBullet() }
}

public func _capi_igBulletText(fmt: CString): Unit {
    return unsafe { igBulletText(fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igBulletTextV(fmt: CString, args: va_list): Unit { ...

public func _capi_igButton(label: CString, size: ImVec2): Bool {
    return unsafe { igButton(label, size) }
}

public func _capi_igButtonBehavior(bb: ImRect, id: ImGuiID, out_hovered: CPointer<Bool>, out_held: CPointer<Bool>, flags: ImGuiButtonFlags): Bool {
    return unsafe { igButtonBehavior(bb, id, out_hovered, out_held, flags) }
}

public func _capi_igButtonEx(label: CString, size_arg: ImVec2, flags: ImGuiButtonFlags): Bool {
    return unsafe { igButtonEx(label, size_arg, flags) }
}

public func _capi_igCalcItemSize(pOut: CPointer<ImVec2>, size: ImVec2, default_w: Float32, default_h: Float32): Unit {
    return unsafe { igCalcItemSize(pOut, size, default_w, default_h) }
}

public func _capi_igCalcItemWidth(): Float32 {
    return unsafe { igCalcItemWidth() }
}

public func _capi_igCalcRoundingFlagsForRectInRect(r_in: ImRect, r_outer: ImRect, threshold: Float32): ImDrawFlags {
    return unsafe { igCalcRoundingFlagsForRectInRect(r_in, r_outer, threshold) }
}

public func _capi_igCalcTextSize(pOut: CPointer<ImVec2>, text: CString, text_end: CString, hide_text_after_double_hash: Bool, wrap_width: Float32): Unit {
    return unsafe { igCalcTextSize(pOut, text, text_end, hide_text_after_double_hash, wrap_width) }
}

public func _capi_igCalcTypematicRepeatAmount(t0: Float32, t1: Float32, repeat_delay: Float32, repeat_rate: Float32): Int32 {
    return unsafe { igCalcTypematicRepeatAmount(t0, t1, repeat_delay, repeat_rate) }
}

public func _capi_igCalcWindowNextAutoFitSize(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igCalcWindowNextAutoFitSize(pOut, window) }
}

public func _capi_igCalcWrapWidthForPos(pos: ImVec2, wrap_pos_x: Float32): Float32 {
    return unsafe { igCalcWrapWidthForPos(pos, wrap_pos_x) }
}

public func _capi_igCallContextHooks(context: CPointer<ImGuiContext>, `type`: ImGuiContextHookType): Unit {
    return unsafe { igCallContextHooks(context, `type`) }
}

public func _capi_igCheckbox(label: CString, v: CPointer<Bool>): Bool {
    return unsafe { igCheckbox(label, v) }
}

public func _capi_igCheckboxFlags_IntPtr(label: CString, flags: CPointer<Int32>, flags_value: Int32): Bool {
    return unsafe { igCheckboxFlags_IntPtr(label, flags, flags_value) }
}

public func _capi_igCheckboxFlags_UintPtr(label: CString, flags: CPointer<Int32>, flags_value: Int32): Bool {
    return unsafe { igCheckboxFlags_UintPtr(label, flags, flags_value) }
}

public func _capi_igCheckboxFlags_S64Ptr(label: CString, flags: CPointer<ImS64>, flags_value: ImS64): Bool {
    return unsafe { igCheckboxFlags_S64Ptr(label, flags, flags_value) }
}

public func _capi_igCheckboxFlags_U64Ptr(label: CString, flags: CPointer<ImU64>, flags_value: ImU64): Bool {
    return unsafe { igCheckboxFlags_U64Ptr(label, flags, flags_value) }
}

public func _capi_igClearActiveID(): Unit {
    return unsafe { igClearActiveID() }
}

public func _capi_igClearDragDrop(): Unit {
    return unsafe { igClearDragDrop() }
}

public func _capi_igClearIniSettings(): Unit {
    return unsafe { igClearIniSettings() }
}

public func _capi_igClearWindowSettings(name: CString): Unit {
    return unsafe { igClearWindowSettings(name) }
}

public func _capi_igCloseButton(id: ImGuiID, pos: ImVec2): Bool {
    return unsafe { igCloseButton(id, pos) }
}

public func _capi_igCloseCurrentPopup(): Unit {
    return unsafe { igCloseCurrentPopup() }
}

public func _capi_igClosePopupToLevel(remaining: Int32, restore_focus_to_window_under_popup: Bool): Unit {
    return unsafe { igClosePopupToLevel(remaining, restore_focus_to_window_under_popup) }
}

public func _capi_igClosePopupsExceptModals(): Unit {
    return unsafe { igClosePopupsExceptModals() }
}

public func _capi_igClosePopupsOverWindow(ref_window: CPointer<ImGuiWindow>, restore_focus_to_window_under_popup: Bool): Unit {
    return unsafe { igClosePopupsOverWindow(ref_window, restore_focus_to_window_under_popup) }
}

public func _capi_igCollapseButton(id: ImGuiID, pos: ImVec2, dock_node: CPointer<ImGuiDockNode>): Bool {
    return unsafe { igCollapseButton(id, pos, dock_node) }
}

public func _capi_igCollapsingHeader_TreeNodeFlags(label: CString, flags: ImGuiTreeNodeFlags): Bool {
    return unsafe { igCollapsingHeader_TreeNodeFlags(label, flags) }
}

public func _capi_igCollapsingHeader_BoolPtr(label: CString, p_visible: CPointer<Bool>, flags: ImGuiTreeNodeFlags): Bool {
    return unsafe { igCollapsingHeader_BoolPtr(label, p_visible, flags) }
}

public func _capi_igColorButton(desc_id: CString, col: ImVec4, flags: ImGuiColorEditFlags, size: ImVec2): Bool {
    return unsafe { igColorButton(desc_id, col, flags, size) }
}

public func _capi_igColorConvertFloat4ToU32(`in`: ImVec4): ImU32 {
    return unsafe { igColorConvertFloat4ToU32(`in`) }
}

public func _capi_igColorConvertHSVtoRGB(h: Float32, s: Float32, v: Float32, out_r: CPointer<Float32>, out_g: CPointer<Float32>, out_b: CPointer<Float32>): Unit {
    return unsafe { igColorConvertHSVtoRGB(h, s, v, out_r, out_g, out_b) }
}

public func _capi_igColorConvertRGBtoHSV(r: Float32, g: Float32, b: Float32, out_h: CPointer<Float32>, out_s: CPointer<Float32>, out_v: CPointer<Float32>): Unit {
    return unsafe { igColorConvertRGBtoHSV(r, g, b, out_h, out_s, out_v) }
}

public func _capi_igColorConvertU32ToFloat4(pOut: CPointer<ImVec4>, `in`: ImU32): Unit {
    return unsafe { igColorConvertU32ToFloat4(pOut, `in`) }
}

public func _capi_igColorEdit3(label: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags): Bool {
    return unsafe { igColorEdit3(label, col, flags) }
}

public func _capi_igColorEdit4(label: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags): Bool {
    return unsafe { igColorEdit4(label, col, flags) }
}

public func _capi_igColorEditOptionsPopup(col: CPointer<Float32>, flags: ImGuiColorEditFlags): Unit {
    return unsafe { igColorEditOptionsPopup(col, flags) }
}

public func _capi_igColorPicker3(label: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags): Bool {
    return unsafe { igColorPicker3(label, col, flags) }
}

public func _capi_igColorPicker4(label: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags, ref_col: CPointer<Float32>): Bool {
    return unsafe { igColorPicker4(label, col, flags, ref_col) }
}

public func _capi_igColorPickerOptionsPopup(ref_col: CPointer<Float32>, flags: ImGuiColorEditFlags): Unit {
    return unsafe { igColorPickerOptionsPopup(ref_col, flags) }
}

public func _capi_igColorTooltip(text: CString, col: CPointer<Float32>, flags: ImGuiColorEditFlags): Unit {
    return unsafe { igColorTooltip(text, col, flags) }
}

public func _capi_igColumns(count: Int32, id: CString, border: Bool): Unit {
    return unsafe { igColumns(count, id, border) }
}

public func _capi_igCombo_Str_arr(label: CString, current_item: CPointer<Int32>, items: CPointer<CString>, items_count: Int32, popup_max_height_in_items: Int32): Bool {
    return unsafe { igCombo_Str_arr(label, current_item, items, items_count, popup_max_height_in_items) }
}

public func _capi_igCombo_Str(label: CString, current_item: CPointer<Int32>, items_separated_by_zeros: CString, popup_max_height_in_items: Int32): Bool {
    return unsafe { igCombo_Str(label, current_item, items_separated_by_zeros, popup_max_height_in_items) }
}

public func _capi_igCombo_FnStrPtr(label: CString, current_item: CPointer<Int32>, getter: CFunc<(user_data: CPointer<Unit>, idx: Int32) -> CString>, user_data: CPointer<Unit>, items_count: Int32, popup_max_height_in_items: Int32): Bool {
    return unsafe { igCombo_FnStrPtr(label, current_item, getter, user_data, items_count, popup_max_height_in_items) }
}

public func _capi_igConvertSingleModFlagToKey(key: ImGuiKey): ImGuiKey {
    return unsafe { igConvertSingleModFlagToKey(key) }
}

public func _capi_igCreateContext(shared_font_atlas: CPointer<ImFontAtlas>): CPointer<ImGuiContext> {
    return unsafe { igCreateContext(shared_font_atlas) }
}

public func _capi_igCreateNewWindowSettings(name: CString): CPointer<ImGuiWindowSettings> {
    return unsafe { igCreateNewWindowSettings(name) }
}

public func _capi_igDataTypeApplyFromText(buf: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, format: CString, p_data_when_empty: CPointer<Unit>): Bool {
    return unsafe { igDataTypeApplyFromText(buf, data_type, p_data, format, p_data_when_empty) }
}

public func _capi_igDataTypeApplyOp(data_type: ImGuiDataType, op: Int32, output: CPointer<Unit>, arg_1: CPointer<Unit>, arg_2: CPointer<Unit>): Unit {
    return unsafe { igDataTypeApplyOp(data_type, op, output, arg_1, arg_2) }
}

public func _capi_igDataTypeClamp(data_type: ImGuiDataType, p_data: CPointer<Unit>, p_min: CPointer<Unit>, p_max: CPointer<Unit>): Bool {
    return unsafe { igDataTypeClamp(data_type, p_data, p_min, p_max) }
}

public func _capi_igDataTypeCompare(data_type: ImGuiDataType, arg_1: CPointer<Unit>, arg_2: CPointer<Unit>): Int32 {
    return unsafe { igDataTypeCompare(data_type, arg_1, arg_2) }
}

public func _capi_igDataTypeFormatString(buf: CString, buf_size: Int32, data_type: ImGuiDataType, p_data: CPointer<Unit>, format: CString): Int32 {
    return unsafe { igDataTypeFormatString(buf, buf_size, data_type, p_data, format) }
}

public func _capi_igDataTypeGetInfo(data_type: ImGuiDataType): CPointer<ImGuiDataTypeInfo> {
    return unsafe { igDataTypeGetInfo(data_type) }
}

public func _capi_igDebugAllocHook(info: CPointer<ImGuiDebugAllocInfo>, frame_count: Int32, ptr: CPointer<Unit>, size: UIntNative): Unit {
    return unsafe { igDebugAllocHook(info, frame_count, ptr, size) }
}

public func _capi_igDebugBreakButton(label: CString, description_of_location: CString): Bool {
    return unsafe { igDebugBreakButton(label, description_of_location) }
}

public func _capi_igDebugBreakButtonTooltip(keyboard_only: Bool, description_of_location: CString): Unit {
    return unsafe { igDebugBreakButtonTooltip(keyboard_only, description_of_location) }
}

public func _capi_igDebugBreakClearData(): Unit {
    return unsafe { igDebugBreakClearData() }
}

public func _capi_igDebugCheckVersionAndDataLayout(version_str: CString, sz_io: UIntNative, sz_style: UIntNative, sz_vec2: UIntNative, sz_vec4: UIntNative, sz_drawvert: UIntNative, sz_drawidx: UIntNative): Bool {
    return unsafe { igDebugCheckVersionAndDataLayout(version_str, sz_io, sz_style, sz_vec2, sz_vec4, sz_drawvert, sz_drawidx) }
}

public func _capi_igDebugDrawCursorPos(col: ImU32): Unit {
    return unsafe { igDebugDrawCursorPos(col) }
}

public func _capi_igDebugDrawItemRect(col: ImU32): Unit {
    return unsafe { igDebugDrawItemRect(col) }
}

public func _capi_igDebugDrawLineExtents(col: ImU32): Unit {
    return unsafe { igDebugDrawLineExtents(col) }
}

public func _capi_igDebugFlashStyleColor(idx: ImGuiCol): Unit {
    return unsafe { igDebugFlashStyleColor(idx) }
}

public func _capi_igDebugHookIdInfo(id: ImGuiID, data_type: ImGuiDataType, data_id: CPointer<Unit>, data_id_end: CPointer<Unit>): Unit {
    return unsafe { igDebugHookIdInfo(id, data_type, data_id, data_id_end) }
}

public func _capi_igDebugLocateItem(target_id: ImGuiID): Unit {
    return unsafe { igDebugLocateItem(target_id) }
}

public func _capi_igDebugLocateItemOnHover(target_id: ImGuiID): Unit {
    return unsafe { igDebugLocateItemOnHover(target_id) }
}

public func _capi_igDebugLocateItemResolveWithLastItem(): Unit {
    return unsafe { igDebugLocateItemResolveWithLastItem() }
}

public func _capi_igDebugLog(fmt: CString): Unit {
    return unsafe { igDebugLog(fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igDebugLogV(fmt: CString, args: va_list): Unit { ...

public func _capi_igDebugNodeColumns(columns: CPointer<ImGuiOldColumns>): Unit {
    return unsafe { igDebugNodeColumns(columns) }
}

public func _capi_igDebugNodeDockNode(node: CPointer<ImGuiDockNode>, label: CString): Unit {
    return unsafe { igDebugNodeDockNode(node, label) }
}

public func _capi_igDebugNodeDrawCmdShowMeshAndBoundingBox(out_draw_list: CPointer<ImDrawList>, draw_list: CPointer<ImDrawList>, draw_cmd: CPointer<ImDrawCmd>, show_mesh: Bool, show_aabb: Bool): Unit {
    return unsafe { igDebugNodeDrawCmdShowMeshAndBoundingBox(out_draw_list, draw_list, draw_cmd, show_mesh, show_aabb) }
}

public func _capi_igDebugNodeDrawList(window: CPointer<ImGuiWindow>, viewport: CPointer<ImGuiViewportP>, draw_list: CPointer<ImDrawList>, label: CString): Unit {
    return unsafe { igDebugNodeDrawList(window, viewport, draw_list, label) }
}

public func _capi_igDebugNodeFont(font: CPointer<ImFont>): Unit {
    return unsafe { igDebugNodeFont(font) }
}

public func _capi_igDebugNodeFontGlyph(font: CPointer<ImFont>, glyph: CPointer<ImFontGlyph>): Unit {
    return unsafe { igDebugNodeFontGlyph(font, glyph) }
}

public func _capi_igDebugNodeInputTextState(state: CPointer<ImGuiInputTextState>): Unit {
    return unsafe { igDebugNodeInputTextState(state) }
}

public func _capi_igDebugNodeStorage(storage: CPointer<ImGuiStorage>, label: CString): Unit {
    return unsafe { igDebugNodeStorage(storage, label) }
}

public func _capi_igDebugNodeTabBar(tab_bar: CPointer<ImGuiTabBar>, label: CString): Unit {
    return unsafe { igDebugNodeTabBar(tab_bar, label) }
}

public func _capi_igDebugNodeTable(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igDebugNodeTable(table) }
}

public func _capi_igDebugNodeTableSettings(settings: CPointer<ImGuiTableSettings>): Unit {
    return unsafe { igDebugNodeTableSettings(settings) }
}

public func _capi_igDebugNodeTypingSelectState(state: CPointer<ImGuiTypingSelectState>): Unit {
    return unsafe { igDebugNodeTypingSelectState(state) }
}

public func _capi_igDebugNodeViewport(viewport: CPointer<ImGuiViewportP>): Unit {
    return unsafe { igDebugNodeViewport(viewport) }
}

public func _capi_igDebugNodeWindow(window: CPointer<ImGuiWindow>, label: CString): Unit {
    return unsafe { igDebugNodeWindow(window, label) }
}

public func _capi_igDebugNodeWindowSettings(settings: CPointer<ImGuiWindowSettings>): Unit {
    return unsafe { igDebugNodeWindowSettings(settings) }
}

public func _capi_igDebugNodeWindowsList(windows: CPointer<ImVector_ImGuiWindowPtr>, label: CString): Unit {
    return unsafe { igDebugNodeWindowsList(windows, label) }
}

public func _capi_igDebugNodeWindowsListByBeginStackParent(windows: CPointer<CPointer<ImGuiWindow>>, windows_size: Int32, parent_in_begin_stack: CPointer<ImGuiWindow>): Unit {
    return unsafe { igDebugNodeWindowsListByBeginStackParent(windows, windows_size, parent_in_begin_stack) }
}

public func _capi_igDebugRenderKeyboardPreview(draw_list: CPointer<ImDrawList>): Unit {
    return unsafe { igDebugRenderKeyboardPreview(draw_list) }
}

public func _capi_igDebugRenderViewportThumbnail(draw_list: CPointer<ImDrawList>, viewport: CPointer<ImGuiViewportP>, bb: ImRect): Unit {
    return unsafe { igDebugRenderViewportThumbnail(draw_list, viewport, bb) }
}

public func _capi_igDebugStartItemPicker(): Unit {
    return unsafe { igDebugStartItemPicker() }
}

public func _capi_igDebugTextEncoding(text: CString): Unit {
    return unsafe { igDebugTextEncoding(text) }
}

public func _capi_igDebugTextUnformattedWithLocateItem(line_begin: CString, line_end: CString): Unit {
    return unsafe { igDebugTextUnformattedWithLocateItem(line_begin, line_end) }
}

public func _capi_igDestroyContext(ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { igDestroyContext(ctx) }
}

public func _capi_igDestroyPlatformWindow(viewport: CPointer<ImGuiViewportP>): Unit {
    return unsafe { igDestroyPlatformWindow(viewport) }
}

public func _capi_igDestroyPlatformWindows(): Unit {
    return unsafe { igDestroyPlatformWindows() }
}

public func _capi_igDockBuilderAddNode(node_id: ImGuiID, flags: ImGuiDockNodeFlags): ImGuiID {
    return unsafe { igDockBuilderAddNode(node_id, flags) }
}

public func _capi_igDockBuilderCopyDockSpace(src_dockspace_id: ImGuiID, dst_dockspace_id: ImGuiID, in_window_remap_pairs: CPointer<ImVector_const_charPtr>): Unit {
    return unsafe { igDockBuilderCopyDockSpace(src_dockspace_id, dst_dockspace_id, in_window_remap_pairs) }
}

public func _capi_igDockBuilderCopyNode(src_node_id: ImGuiID, dst_node_id: ImGuiID, out_node_remap_pairs: CPointer<ImVector_ImGuiID>): Unit {
    return unsafe { igDockBuilderCopyNode(src_node_id, dst_node_id, out_node_remap_pairs) }
}

public func _capi_igDockBuilderCopyWindowSettings(src_name: CString, dst_name: CString): Unit {
    return unsafe { igDockBuilderCopyWindowSettings(src_name, dst_name) }
}

public func _capi_igDockBuilderDockWindow(window_name: CString, node_id: ImGuiID): Unit {
    return unsafe { igDockBuilderDockWindow(window_name, node_id) }
}

public func _capi_igDockBuilderFinish(node_id: ImGuiID): Unit {
    return unsafe { igDockBuilderFinish(node_id) }
}

public func _capi_igDockBuilderGetCentralNode(node_id: ImGuiID): CPointer<ImGuiDockNode> {
    return unsafe { igDockBuilderGetCentralNode(node_id) }
}

public func _capi_igDockBuilderGetNode(node_id: ImGuiID): CPointer<ImGuiDockNode> {
    return unsafe { igDockBuilderGetNode(node_id) }
}

public func _capi_igDockBuilderRemoveNode(node_id: ImGuiID): Unit {
    return unsafe { igDockBuilderRemoveNode(node_id) }
}

public func _capi_igDockBuilderRemoveNodeChildNodes(node_id: ImGuiID): Unit {
    return unsafe { igDockBuilderRemoveNodeChildNodes(node_id) }
}

public func _capi_igDockBuilderRemoveNodeDockedWindows(node_id: ImGuiID, clear_settings_refs: Bool): Unit {
    return unsafe { igDockBuilderRemoveNodeDockedWindows(node_id, clear_settings_refs) }
}

public func _capi_igDockBuilderSetNodePos(node_id: ImGuiID, pos: ImVec2): Unit {
    return unsafe { igDockBuilderSetNodePos(node_id, pos) }
}

public func _capi_igDockBuilderSetNodeSize(node_id: ImGuiID, size: ImVec2): Unit {
    return unsafe { igDockBuilderSetNodeSize(node_id, size) }
}

public func _capi_igDockBuilderSplitNode(node_id: ImGuiID, split_dir: ImGuiDir, size_ratio_for_node_at_dir: Float32, out_id_at_dir: CPointer<ImGuiID>, out_id_at_opposite_dir: CPointer<ImGuiID>): ImGuiID {
    return unsafe { igDockBuilderSplitNode(node_id, split_dir, size_ratio_for_node_at_dir, out_id_at_dir, out_id_at_opposite_dir) }
}

public func _capi_igDockContextCalcDropPosForDocking(target: CPointer<ImGuiWindow>, target_node: CPointer<ImGuiDockNode>, payload_window: CPointer<ImGuiWindow>, payload_node: CPointer<ImGuiDockNode>, split_dir: ImGuiDir, split_outer: Bool, out_pos: CPointer<ImVec2>): Bool {
    return unsafe { igDockContextCalcDropPosForDocking(target, target_node, payload_window, payload_node, split_dir, split_outer, out_pos) }
}

public func _capi_igDockContextClearNodes(ctx: CPointer<ImGuiContext>, root_id: ImGuiID, clear_settings_refs: Bool): Unit {
    return unsafe { igDockContextClearNodes(ctx, root_id, clear_settings_refs) }
}

public func _capi_igDockContextEndFrame(ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { igDockContextEndFrame(ctx) }
}

public func _capi_igDockContextFindNodeByID(ctx: CPointer<ImGuiContext>, id: ImGuiID): CPointer<ImGuiDockNode> {
    return unsafe { igDockContextFindNodeByID(ctx, id) }
}

public func _capi_igDockContextGenNodeID(ctx: CPointer<ImGuiContext>): ImGuiID {
    return unsafe { igDockContextGenNodeID(ctx) }
}

public func _capi_igDockContextInitialize(ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { igDockContextInitialize(ctx) }
}

public func _capi_igDockContextNewFrameUpdateDocking(ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { igDockContextNewFrameUpdateDocking(ctx) }
}

public func _capi_igDockContextNewFrameUpdateUndocking(ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { igDockContextNewFrameUpdateUndocking(ctx) }
}

public func _capi_igDockContextProcessUndockNode(ctx: CPointer<ImGuiContext>, node: CPointer<ImGuiDockNode>): Unit {
    return unsafe { igDockContextProcessUndockNode(ctx, node) }
}

public func _capi_igDockContextProcessUndockWindow(ctx: CPointer<ImGuiContext>, window: CPointer<ImGuiWindow>, clear_persistent_docking_ref: Bool): Unit {
    return unsafe { igDockContextProcessUndockWindow(ctx, window, clear_persistent_docking_ref) }
}

public func _capi_igDockContextQueueDock(ctx: CPointer<ImGuiContext>, target: CPointer<ImGuiWindow>, target_node: CPointer<ImGuiDockNode>, payload: CPointer<ImGuiWindow>, split_dir: ImGuiDir, split_ratio: Float32, split_outer: Bool): Unit {
    return unsafe { igDockContextQueueDock(ctx, target, target_node, payload, split_dir, split_ratio, split_outer) }
}

public func _capi_igDockContextQueueUndockNode(ctx: CPointer<ImGuiContext>, node: CPointer<ImGuiDockNode>): Unit {
    return unsafe { igDockContextQueueUndockNode(ctx, node) }
}

public func _capi_igDockContextQueueUndockWindow(ctx: CPointer<ImGuiContext>, window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igDockContextQueueUndockWindow(ctx, window) }
}

public func _capi_igDockContextRebuildNodes(ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { igDockContextRebuildNodes(ctx) }
}

public func _capi_igDockContextShutdown(ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { igDockContextShutdown(ctx) }
}

public func _capi_igDockNodeBeginAmendTabBar(node: CPointer<ImGuiDockNode>): Bool {
    return unsafe { igDockNodeBeginAmendTabBar(node) }
}

public func _capi_igDockNodeEndAmendTabBar(): Unit {
    return unsafe { igDockNodeEndAmendTabBar() }
}

public func _capi_igDockNodeGetDepth(node: CPointer<ImGuiDockNode>): Int32 {
    return unsafe { igDockNodeGetDepth(node) }
}

public func _capi_igDockNodeGetRootNode(node: CPointer<ImGuiDockNode>): CPointer<ImGuiDockNode> {
    return unsafe { igDockNodeGetRootNode(node) }
}

public func _capi_igDockNodeGetWindowMenuButtonId(node: CPointer<ImGuiDockNode>): ImGuiID {
    return unsafe { igDockNodeGetWindowMenuButtonId(node) }
}

public func _capi_igDockNodeIsInHierarchyOf(node: CPointer<ImGuiDockNode>, parent: CPointer<ImGuiDockNode>): Bool {
    return unsafe { igDockNodeIsInHierarchyOf(node, parent) }
}

public func _capi_igDockNodeWindowMenuHandler_Default(ctx: CPointer<ImGuiContext>, node: CPointer<ImGuiDockNode>, tab_bar: CPointer<ImGuiTabBar>): Unit {
    return unsafe { igDockNodeWindowMenuHandler_Default(ctx, node, tab_bar) }
}

public func _capi_igDockSpace(dockspace_id: ImGuiID, size: ImVec2, flags: ImGuiDockNodeFlags, window_class: CPointer<ImGuiWindowClass>): ImGuiID {
    return unsafe { igDockSpace(dockspace_id, size, flags, window_class) }
}

public func _capi_igDockSpaceOverViewport(dockspace_id: ImGuiID, viewport: CPointer<ImGuiViewport>, flags: ImGuiDockNodeFlags, window_class: CPointer<ImGuiWindowClass>): ImGuiID {
    return unsafe { igDockSpaceOverViewport(dockspace_id, viewport, flags, window_class) }
}

public func _capi_igDragBehavior(id: ImGuiID, data_type: ImGuiDataType, p_v: CPointer<Unit>, v_speed: Float32, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragBehavior(id, data_type, p_v, v_speed, p_min, p_max, format, flags) }
}

public func _capi_igDragFloat(label: CString, v: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragFloat(label, v, v_speed, v_min, v_max, format, flags) }
}

public func _capi_igDragFloat2(label: CString, v: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragFloat2(label, v, v_speed, v_min, v_max, format, flags) }
}

public func _capi_igDragFloat3(label: CString, v: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragFloat3(label, v, v_speed, v_min, v_max, format, flags) }
}

public func _capi_igDragFloat4(label: CString, v: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragFloat4(label, v, v_speed, v_min, v_max, format, flags) }
}

public func _capi_igDragFloatRange2(label: CString, v_current_min: CPointer<Float32>, v_current_max: CPointer<Float32>, v_speed: Float32, v_min: Float32, v_max: Float32, format: CString, format_max: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragFloatRange2(label, v_current_min, v_current_max, v_speed, v_min, v_max, format, format_max, flags) }
}

public func _capi_igDragInt(label: CString, v: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragInt(label, v, v_speed, v_min, v_max, format, flags) }
}

public func _capi_igDragInt2(label: CString, v: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragInt2(label, v, v_speed, v_min, v_max, format, flags) }
}

public func _capi_igDragInt3(label: CString, v: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragInt3(label, v, v_speed, v_min, v_max, format, flags) }
}

public func _capi_igDragInt4(label: CString, v: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragInt4(label, v, v_speed, v_min, v_max, format, flags) }
}

public func _capi_igDragIntRange2(label: CString, v_current_min: CPointer<Int32>, v_current_max: CPointer<Int32>, v_speed: Float32, v_min: Int32, v_max: Int32, format: CString, format_max: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragIntRange2(label, v_current_min, v_current_max, v_speed, v_min, v_max, format, format_max, flags) }
}

public func _capi_igDragScalar(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, v_speed: Float32, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragScalar(label, data_type, p_data, v_speed, p_min, p_max, format, flags) }
}

public func _capi_igDragScalarN(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, components: Int32, v_speed: Float32, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igDragScalarN(label, data_type, p_data, components, v_speed, p_min, p_max, format, flags) }
}

public func _capi_igDummy(size: ImVec2): Unit {
    return unsafe { igDummy(size) }
}

public func _capi_igEnd(): Unit {
    return unsafe { igEnd() }
}

public func _capi_igEndChild(): Unit {
    return unsafe { igEndChild() }
}

public func _capi_igEndColumns(): Unit {
    return unsafe { igEndColumns() }
}

public func _capi_igEndCombo(): Unit {
    return unsafe { igEndCombo() }
}

public func _capi_igEndComboPreview(): Unit {
    return unsafe { igEndComboPreview() }
}

public func _capi_igEndDisabled(): Unit {
    return unsafe { igEndDisabled() }
}

public func _capi_igEndDisabledOverrideReenable(): Unit {
    return unsafe { igEndDisabledOverrideReenable() }
}

public func _capi_igEndDragDropSource(): Unit {
    return unsafe { igEndDragDropSource() }
}

public func _capi_igEndDragDropTarget(): Unit {
    return unsafe { igEndDragDropTarget() }
}

public func _capi_igEndFrame(): Unit {
    return unsafe { igEndFrame() }
}

public func _capi_igEndGroup(): Unit {
    return unsafe { igEndGroup() }
}

public func _capi_igEndListBox(): Unit {
    return unsafe { igEndListBox() }
}

public func _capi_igEndMainMenuBar(): Unit {
    return unsafe { igEndMainMenuBar() }
}

public func _capi_igEndMenu(): Unit {
    return unsafe { igEndMenu() }
}

public func _capi_igEndMenuBar(): Unit {
    return unsafe { igEndMenuBar() }
}

public func _capi_igEndPopup(): Unit {
    return unsafe { igEndPopup() }
}

public func _capi_igEndTabBar(): Unit {
    return unsafe { igEndTabBar() }
}

public func _capi_igEndTabItem(): Unit {
    return unsafe { igEndTabItem() }
}

public func _capi_igEndTable(): Unit {
    return unsafe { igEndTable() }
}

public func _capi_igEndTooltip(): Unit {
    return unsafe { igEndTooltip() }
}

public func _capi_igErrorCheckEndFrameRecover(log_callback: ImGuiErrorLogCallback, user_data: CPointer<Unit>): Unit {
    return unsafe { igErrorCheckEndFrameRecover(log_callback, user_data) }
}

public func _capi_igErrorCheckEndWindowRecover(log_callback: ImGuiErrorLogCallback, user_data: CPointer<Unit>): Unit {
    return unsafe { igErrorCheckEndWindowRecover(log_callback, user_data) }
}

public func _capi_igErrorCheckUsingSetCursorPosToExtendParentBoundaries(): Unit {
    return unsafe { igErrorCheckUsingSetCursorPosToExtendParentBoundaries() }
}

public func _capi_igFindBestWindowPosForPopup(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igFindBestWindowPosForPopup(pOut, window) }
}

public func _capi_igFindBestWindowPosForPopupEx(pOut: CPointer<ImVec2>, ref_pos: ImVec2, size: ImVec2, last_dir: CPointer<ImGuiDir>, r_outer: ImRect, r_avoid: ImRect, policy: ImGuiPopupPositionPolicy): Unit {
    return unsafe { igFindBestWindowPosForPopupEx(pOut, ref_pos, size, last_dir, r_outer, r_avoid, policy) }
}

public func _capi_igFindBlockingModal(window: CPointer<ImGuiWindow>): CPointer<ImGuiWindow> {
    return unsafe { igFindBlockingModal(window) }
}

public func _capi_igFindBottomMostVisibleWindowWithinBeginStack(window: CPointer<ImGuiWindow>): CPointer<ImGuiWindow> {
    return unsafe { igFindBottomMostVisibleWindowWithinBeginStack(window) }
}

public func _capi_igFindHoveredViewportFromPlatformWindowStack(mouse_platform_pos: ImVec2): CPointer<ImGuiViewportP> {
    return unsafe { igFindHoveredViewportFromPlatformWindowStack(mouse_platform_pos) }
}

public func _capi_igFindHoveredWindowEx(pos: ImVec2, find_first_and_in_any_viewport: Bool, out_hovered_window: CPointer<CPointer<ImGuiWindow>>, out_hovered_window_under_moving_window: CPointer<CPointer<ImGuiWindow>>): Unit {
    return unsafe { igFindHoveredWindowEx(pos, find_first_and_in_any_viewport, out_hovered_window, out_hovered_window_under_moving_window) }
}

public func _capi_igFindOrCreateColumns(window: CPointer<ImGuiWindow>, id: ImGuiID): CPointer<ImGuiOldColumns> {
    return unsafe { igFindOrCreateColumns(window, id) }
}

public func _capi_igFindRenderedTextEnd(text: CString, text_end: CString): CString {
    return unsafe { igFindRenderedTextEnd(text, text_end) }
}

public func _capi_igFindSettingsHandler(type_name: CString): CPointer<ImGuiSettingsHandler> {
    return unsafe { igFindSettingsHandler(type_name) }
}

public func _capi_igFindViewportByID(id: ImGuiID): CPointer<ImGuiViewport> {
    return unsafe { igFindViewportByID(id) }
}

public func _capi_igFindViewportByPlatformHandle(platform_handle: CPointer<Unit>): CPointer<ImGuiViewport> {
    return unsafe { igFindViewportByPlatformHandle(platform_handle) }
}

public func _capi_igFindWindowByID(id: ImGuiID): CPointer<ImGuiWindow> {
    return unsafe { igFindWindowByID(id) }
}

public func _capi_igFindWindowByName(name: CString): CPointer<ImGuiWindow> {
    return unsafe { igFindWindowByName(name) }
}

public func _capi_igFindWindowDisplayIndex(window: CPointer<ImGuiWindow>): Int32 {
    return unsafe { igFindWindowDisplayIndex(window) }
}

public func _capi_igFindWindowSettingsByID(id: ImGuiID): CPointer<ImGuiWindowSettings> {
    return unsafe { igFindWindowSettingsByID(id) }
}

public func _capi_igFindWindowSettingsByWindow(window: CPointer<ImGuiWindow>): CPointer<ImGuiWindowSettings> {
    return unsafe { igFindWindowSettingsByWindow(window) }
}

public func _capi_igFixupKeyChord(key_chord: ImGuiKeyChord): ImGuiKeyChord {
    return unsafe { igFixupKeyChord(key_chord) }
}

public func _capi_igFocusItem(): Unit {
    return unsafe { igFocusItem() }
}

public func _capi_igFocusTopMostWindowUnderOne(under_this_window: CPointer<ImGuiWindow>, ignore_window: CPointer<ImGuiWindow>, filter_viewport: CPointer<ImGuiViewport>, flags: ImGuiFocusRequestFlags): Unit {
    return unsafe { igFocusTopMostWindowUnderOne(under_this_window, ignore_window, filter_viewport, flags) }
}

public func _capi_igFocusWindow(window: CPointer<ImGuiWindow>, flags: ImGuiFocusRequestFlags): Unit {
    return unsafe { igFocusWindow(window, flags) }
}

public func _capi_igGcAwakeTransientWindowBuffers(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igGcAwakeTransientWindowBuffers(window) }
}

public func _capi_igGcCompactTransientMiscBuffers(): Unit {
    return unsafe { igGcCompactTransientMiscBuffers() }
}

public func _capi_igGcCompactTransientWindowBuffers(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igGcCompactTransientWindowBuffers(window) }
}

public func _capi_igGetActiveID(): ImGuiID {
    return unsafe { igGetActiveID() }
}

public func _capi_igGetAllocatorFunctions(p_alloc_func: CPointer<ImGuiMemAllocFunc>, p_free_func: CPointer<ImGuiMemFreeFunc>, p_user_data: CPointer<CPointer<Unit>>): Unit {
    return unsafe { igGetAllocatorFunctions(p_alloc_func, p_free_func, p_user_data) }
}

public func _capi_igGetBackgroundDrawList_Nil(): CPointer<ImDrawList> {
    return unsafe { igGetBackgroundDrawList_Nil() }
}

public func _capi_igGetBackgroundDrawList_ViewportPtr(viewport: CPointer<ImGuiViewport>): CPointer<ImDrawList> {
    return unsafe { igGetBackgroundDrawList_ViewportPtr(viewport) }
}

public func _capi_igGetClipboardText(): CString {
    return unsafe { igGetClipboardText() }
}

public func _capi_igGetColorU32_Col(idx: ImGuiCol, alpha_mul: Float32): ImU32 {
    return unsafe { igGetColorU32_Col(idx, alpha_mul) }
}

public func _capi_igGetColorU32_Vec4(col: ImVec4): ImU32 {
    return unsafe { igGetColorU32_Vec4(col) }
}

public func _capi_igGetColorU32_U32(col: ImU32, alpha_mul: Float32): ImU32 {
    return unsafe { igGetColorU32_U32(col, alpha_mul) }
}

public func _capi_igGetColumnIndex(): Int32 {
    return unsafe { igGetColumnIndex() }
}

public func _capi_igGetColumnNormFromOffset(columns: CPointer<ImGuiOldColumns>, offset: Float32): Float32 {
    return unsafe { igGetColumnNormFromOffset(columns, offset) }
}

public func _capi_igGetColumnOffset(column_index: Int32): Float32 {
    return unsafe { igGetColumnOffset(column_index) }
}

public func _capi_igGetColumnOffsetFromNorm(columns: CPointer<ImGuiOldColumns>, offset_norm: Float32): Float32 {
    return unsafe { igGetColumnOffsetFromNorm(columns, offset_norm) }
}

public func _capi_igGetColumnWidth(column_index: Int32): Float32 {
    return unsafe { igGetColumnWidth(column_index) }
}

public func _capi_igGetColumnsCount(): Int32 {
    return unsafe { igGetColumnsCount() }
}

public func _capi_igGetColumnsID(str_id: CString, count: Int32): ImGuiID {
    return unsafe { igGetColumnsID(str_id, count) }
}

public func _capi_igGetContentRegionAvail(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetContentRegionAvail(pOut) }
}

public func _capi_igGetContentRegionMax(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetContentRegionMax(pOut) }
}

public func _capi_igGetContentRegionMaxAbs(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetContentRegionMaxAbs(pOut) }
}

public func _capi_igGetCurrentContext(): CPointer<ImGuiContext> {
    return unsafe { igGetCurrentContext() }
}

public func _capi_igGetCurrentFocusScope(): ImGuiID {
    return unsafe { igGetCurrentFocusScope() }
}

public func _capi_igGetCurrentTabBar(): CPointer<ImGuiTabBar> {
    return unsafe { igGetCurrentTabBar() }
}

public func _capi_igGetCurrentTable(): CPointer<ImGuiTable> {
    return unsafe { igGetCurrentTable() }
}

public func _capi_igGetCurrentWindow(): CPointer<ImGuiWindow> {
    return unsafe { igGetCurrentWindow() }
}

public func _capi_igGetCurrentWindowRead(): CPointer<ImGuiWindow> {
    return unsafe { igGetCurrentWindowRead() }
}

public func _capi_igGetCursorPos(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetCursorPos(pOut) }
}

public func _capi_igGetCursorPosX(): Float32 {
    return unsafe { igGetCursorPosX() }
}

public func _capi_igGetCursorPosY(): Float32 {
    return unsafe { igGetCursorPosY() }
}

public func _capi_igGetCursorScreenPos(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetCursorScreenPos(pOut) }
}

public func _capi_igGetCursorStartPos(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetCursorStartPos(pOut) }
}

public func _capi_igGetDefaultFont(): CPointer<ImFont> {
    return unsafe { igGetDefaultFont() }
}

public func _capi_igGetDragDropPayload(): CPointer<ImGuiPayload> {
    return unsafe { igGetDragDropPayload() }
}

public func _capi_igGetDrawData(): CPointer<ImDrawData> {
    return unsafe { igGetDrawData() }
}

public func _capi_igGetDrawListSharedData(): CPointer<ImDrawListSharedData> {
    return unsafe { igGetDrawListSharedData() }
}

public func _capi_igGetFocusID(): ImGuiID {
    return unsafe { igGetFocusID() }
}

public func _capi_igGetFont(): CPointer<ImFont> {
    return unsafe { igGetFont() }
}

public func _capi_igGetFontSize(): Float32 {
    return unsafe { igGetFontSize() }
}

public func _capi_igGetFontTexUvWhitePixel(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetFontTexUvWhitePixel(pOut) }
}

public func _capi_igGetForegroundDrawList_Nil(): CPointer<ImDrawList> {
    return unsafe { igGetForegroundDrawList_Nil() }
}

public func _capi_igGetForegroundDrawList_ViewportPtr(viewport: CPointer<ImGuiViewport>): CPointer<ImDrawList> {
    return unsafe { igGetForegroundDrawList_ViewportPtr(viewport) }
}

public func _capi_igGetForegroundDrawList_WindowPtr(window: CPointer<ImGuiWindow>): CPointer<ImDrawList> {
    return unsafe { igGetForegroundDrawList_WindowPtr(window) }
}

public func _capi_igGetFrameCount(): Int32 {
    return unsafe { igGetFrameCount() }
}

public func _capi_igGetFrameHeight(): Float32 {
    return unsafe { igGetFrameHeight() }
}

public func _capi_igGetFrameHeightWithSpacing(): Float32 {
    return unsafe { igGetFrameHeightWithSpacing() }
}

public func _capi_igGetHoveredID(): ImGuiID {
    return unsafe { igGetHoveredID() }
}

public func _capi_igGetID_Str(str_id: CString): ImGuiID {
    return unsafe { igGetID_Str(str_id) }
}

public func _capi_igGetID_StrStr(str_id_begin: CString, str_id_end: CString): ImGuiID {
    return unsafe { igGetID_StrStr(str_id_begin, str_id_end) }
}

public func _capi_igGetID_Ptr(ptr_id: CPointer<Unit>): ImGuiID {
    return unsafe { igGetID_Ptr(ptr_id) }
}

public func _capi_igGetIDWithSeed_Str(str_id_begin: CString, str_id_end: CString, seed: ImGuiID): ImGuiID {
    return unsafe { igGetIDWithSeed_Str(str_id_begin, str_id_end, seed) }
}

public func _capi_igGetIDWithSeed_Int(n: Int32, seed: ImGuiID): ImGuiID {
    return unsafe { igGetIDWithSeed_Int(n, seed) }
}

public func _capi_igGetIO(): CPointer<ImGuiIO> {
    return unsafe { igGetIO() }
}

public func _capi_igGetInputTextState(id: ImGuiID): CPointer<ImGuiInputTextState> {
    return unsafe { igGetInputTextState(id) }
}

public func _capi_igGetItemFlags(): ImGuiItemFlags {
    return unsafe { igGetItemFlags() }
}

public func _capi_igGetItemID(): ImGuiID {
    return unsafe { igGetItemID() }
}

public func _capi_igGetItemRectMax(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetItemRectMax(pOut) }
}

public func _capi_igGetItemRectMin(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetItemRectMin(pOut) }
}

public func _capi_igGetItemRectSize(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetItemRectSize(pOut) }
}

public func _capi_igGetItemStatusFlags(): ImGuiItemStatusFlags {
    return unsafe { igGetItemStatusFlags() }
}

public func _capi_igGetKeyChordName(key_chord: ImGuiKeyChord): CString {
    return unsafe { igGetKeyChordName(key_chord) }
}

public func _capi_igGetKeyData_ContextPtr(ctx: CPointer<ImGuiContext>, key: ImGuiKey): CPointer<ImGuiKeyData> {
    return unsafe { igGetKeyData_ContextPtr(ctx, key) }
}

public func _capi_igGetKeyData_Key(key: ImGuiKey): CPointer<ImGuiKeyData> {
    return unsafe { igGetKeyData_Key(key) }
}

public func _capi_igGetKeyMagnitude2d(pOut: CPointer<ImVec2>, key_left: ImGuiKey, key_right: ImGuiKey, key_up: ImGuiKey, key_down: ImGuiKey): Unit {
    return unsafe { igGetKeyMagnitude2d(pOut, key_left, key_right, key_up, key_down) }
}

public func _capi_igGetKeyName(key: ImGuiKey): CString {
    return unsafe { igGetKeyName(key) }
}

public func _capi_igGetKeyOwner(key: ImGuiKey): ImGuiID {
    return unsafe { igGetKeyOwner(key) }
}

public func _capi_igGetKeyOwnerData(ctx: CPointer<ImGuiContext>, key: ImGuiKey): CPointer<ImGuiKeyOwnerData> {
    return unsafe { igGetKeyOwnerData(ctx, key) }
}

public func _capi_igGetKeyPressedAmount(key: ImGuiKey, repeat_delay: Float32, rate: Float32): Int32 {
    return unsafe { igGetKeyPressedAmount(key, repeat_delay, rate) }
}

public func _capi_igGetMainViewport(): CPointer<ImGuiViewport> {
    return unsafe { igGetMainViewport() }
}

public func _capi_igGetMouseClickedCount(button: ImGuiMouseButton): Int32 {
    return unsafe { igGetMouseClickedCount(button) }
}

public func _capi_igGetMouseCursor(): ImGuiMouseCursor {
    return unsafe { igGetMouseCursor() }
}

public func _capi_igGetMouseDragDelta(pOut: CPointer<ImVec2>, button: ImGuiMouseButton, lock_threshold: Float32): Unit {
    return unsafe { igGetMouseDragDelta(pOut, button, lock_threshold) }
}

public func _capi_igGetMousePos(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetMousePos(pOut) }
}

public func _capi_igGetMousePosOnOpeningCurrentPopup(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetMousePosOnOpeningCurrentPopup(pOut) }
}

public func _capi_igGetNavTweakPressedAmount(axis: ImGuiAxis): Float32 {
    return unsafe { igGetNavTweakPressedAmount(axis) }
}

public func _capi_igGetPlatformIO(): CPointer<ImGuiPlatformIO> {
    return unsafe { igGetPlatformIO() }
}

public func _capi_igGetPopupAllowedExtentRect(pOut: CPointer<ImRect>, window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igGetPopupAllowedExtentRect(pOut, window) }
}

public func _capi_igGetScrollMaxX(): Float32 {
    return unsafe { igGetScrollMaxX() }
}

public func _capi_igGetScrollMaxY(): Float32 {
    return unsafe { igGetScrollMaxY() }
}

public func _capi_igGetScrollX(): Float32 {
    return unsafe { igGetScrollX() }
}

public func _capi_igGetScrollY(): Float32 {
    return unsafe { igGetScrollY() }
}

public func _capi_igGetShortcutRoutingData(key_chord: ImGuiKeyChord): CPointer<ImGuiKeyRoutingData> {
    return unsafe { igGetShortcutRoutingData(key_chord) }
}

public func _capi_igGetStateStorage(): CPointer<ImGuiStorage> {
    return unsafe { igGetStateStorage() }
}

public func _capi_igGetStyle(): CPointer<ImGuiStyle> {
    return unsafe { igGetStyle() }
}

public func _capi_igGetStyleColorName(idx: ImGuiCol): CString {
    return unsafe { igGetStyleColorName(idx) }
}

public func _capi_igGetStyleColorVec4(idx: ImGuiCol): CPointer<ImVec4> {
    return unsafe { igGetStyleColorVec4(idx) }
}

public func _capi_igGetStyleVarInfo(idx: ImGuiStyleVar): CPointer<ImGuiDataVarInfo> {
    return unsafe { igGetStyleVarInfo(idx) }
}

public func _capi_igGetTextLineHeight(): Float32 {
    return unsafe { igGetTextLineHeight() }
}

public func _capi_igGetTextLineHeightWithSpacing(): Float32 {
    return unsafe { igGetTextLineHeightWithSpacing() }
}

public func _capi_igGetTime(): Float64 {
    return unsafe { igGetTime() }
}

public func _capi_igGetTopMostAndVisiblePopupModal(): CPointer<ImGuiWindow> {
    return unsafe { igGetTopMostAndVisiblePopupModal() }
}

public func _capi_igGetTopMostPopupModal(): CPointer<ImGuiWindow> {
    return unsafe { igGetTopMostPopupModal() }
}

public func _capi_igGetTreeNodeToLabelSpacing(): Float32 {
    return unsafe { igGetTreeNodeToLabelSpacing() }
}

public func _capi_igGetTypematicRepeatRate(flags: ImGuiInputFlags, repeat_delay: CPointer<Float32>, repeat_rate: CPointer<Float32>): Unit {
    return unsafe { igGetTypematicRepeatRate(flags, repeat_delay, repeat_rate) }
}

public func _capi_igGetTypingSelectRequest(flags: ImGuiTypingSelectFlags): CPointer<ImGuiTypingSelectRequest> {
    return unsafe { igGetTypingSelectRequest(flags) }
}

public func _capi_igGetVersion(): CString {
    return unsafe { igGetVersion() }
}

public func _capi_igGetViewportPlatformMonitor(viewport: CPointer<ImGuiViewport>): CPointer<ImGuiPlatformMonitor> {
    return unsafe { igGetViewportPlatformMonitor(viewport) }
}

public func _capi_igGetWindowAlwaysWantOwnTabBar(window: CPointer<ImGuiWindow>): Bool {
    return unsafe { igGetWindowAlwaysWantOwnTabBar(window) }
}

public func _capi_igGetWindowContentRegionMax(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetWindowContentRegionMax(pOut) }
}

public func _capi_igGetWindowContentRegionMin(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetWindowContentRegionMin(pOut) }
}

public func _capi_igGetWindowDockID(): ImGuiID {
    return unsafe { igGetWindowDockID() }
}

public func _capi_igGetWindowDockNode(): CPointer<ImGuiDockNode> {
    return unsafe { igGetWindowDockNode() }
}

public func _capi_igGetWindowDpiScale(): Float32 {
    return unsafe { igGetWindowDpiScale() }
}

public func _capi_igGetWindowDrawList(): CPointer<ImDrawList> {
    return unsafe { igGetWindowDrawList() }
}

public func _capi_igGetWindowHeight(): Float32 {
    return unsafe { igGetWindowHeight() }
}

public func _capi_igGetWindowPos(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetWindowPos(pOut) }
}

public func _capi_igGetWindowResizeBorderID(window: CPointer<ImGuiWindow>, dir: ImGuiDir): ImGuiID {
    return unsafe { igGetWindowResizeBorderID(window, dir) }
}

public func _capi_igGetWindowResizeCornerID(window: CPointer<ImGuiWindow>, n: Int32): ImGuiID {
    return unsafe { igGetWindowResizeCornerID(window, n) }
}

public func _capi_igGetWindowScrollbarID(window: CPointer<ImGuiWindow>, axis: ImGuiAxis): ImGuiID {
    return unsafe { igGetWindowScrollbarID(window, axis) }
}

public func _capi_igGetWindowScrollbarRect(pOut: CPointer<ImRect>, window: CPointer<ImGuiWindow>, axis: ImGuiAxis): Unit {
    return unsafe { igGetWindowScrollbarRect(pOut, window, axis) }
}

public func _capi_igGetWindowSize(pOut: CPointer<ImVec2>): Unit {
    return unsafe { igGetWindowSize(pOut) }
}

public func _capi_igGetWindowViewport(): CPointer<ImGuiViewport> {
    return unsafe { igGetWindowViewport() }
}

public func _capi_igGetWindowWidth(): Float32 {
    return unsafe { igGetWindowWidth() }
}

public func _capi_igImAbs_Int(x: Int32): Int32 {
    return unsafe { igImAbs_Int(x) }
}

public func _capi_igImAbs_Float(x: Float32): Float32 {
    return unsafe { igImAbs_Float(x) }
}

public func _capi_igImAbs_double(x: Float64): Float64 {
    return unsafe { igImAbs_double(x) }
}

public func _capi_igImAlphaBlendColors(col_a: ImU32, col_b: ImU32): ImU32 {
    return unsafe { igImAlphaBlendColors(col_a, col_b) }
}

public func _capi_igImBezierCubicCalc(pOut: CPointer<ImVec2>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, t: Float32): Unit {
    return unsafe { igImBezierCubicCalc(pOut, p1, p2, p3, p4, t) }
}

public func _capi_igImBezierCubicClosestPoint(pOut: CPointer<ImVec2>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, p: ImVec2, num_segments: Int32): Unit {
    return unsafe { igImBezierCubicClosestPoint(pOut, p1, p2, p3, p4, p, num_segments) }
}

public func _capi_igImBezierCubicClosestPointCasteljau(pOut: CPointer<ImVec2>, p1: ImVec2, p2: ImVec2, p3: ImVec2, p4: ImVec2, p: ImVec2, tess_tol: Float32): Unit {
    return unsafe { igImBezierCubicClosestPointCasteljau(pOut, p1, p2, p3, p4, p, tess_tol) }
}

public func _capi_igImBezierQuadraticCalc(pOut: CPointer<ImVec2>, p1: ImVec2, p2: ImVec2, p3: ImVec2, t: Float32): Unit {
    return unsafe { igImBezierQuadraticCalc(pOut, p1, p2, p3, t) }
}

public func _capi_igImBitArrayClearAllBits(arr: CPointer<ImU32>, bitcount: Int32): Unit {
    return unsafe { igImBitArrayClearAllBits(arr, bitcount) }
}

public func _capi_igImBitArrayClearBit(arr: CPointer<ImU32>, n: Int32): Unit {
    return unsafe { igImBitArrayClearBit(arr, n) }
}

public func _capi_igImBitArrayGetStorageSizeInBytes(bitcount: Int32): UIntNative {
    return unsafe { igImBitArrayGetStorageSizeInBytes(bitcount) }
}

public func _capi_igImBitArraySetBit(arr: CPointer<ImU32>, n: Int32): Unit {
    return unsafe { igImBitArraySetBit(arr, n) }
}

public func _capi_igImBitArraySetBitRange(arr: CPointer<ImU32>, n: Int32, n2: Int32): Unit {
    return unsafe { igImBitArraySetBitRange(arr, n, n2) }
}

public func _capi_igImBitArrayTestBit(arr: CPointer<ImU32>, n: Int32): Bool {
    return unsafe { igImBitArrayTestBit(arr, n) }
}

public func _capi_igImCharIsBlankA(c: UInt8): Bool {
    return unsafe { igImCharIsBlankA(c) }
}

public func _capi_igImCharIsBlankW(c: Int32): Bool {
    return unsafe { igImCharIsBlankW(c) }
}

public func _capi_igImClamp(pOut: CPointer<ImVec2>, v: ImVec2, mn: ImVec2, mx: ImVec2): Unit {
    return unsafe { igImClamp(pOut, v, mn, mx) }
}

public func _capi_igImDot(a: ImVec2, b: ImVec2): Float32 {
    return unsafe { igImDot(a, b) }
}

public func _capi_igImExponentialMovingAverage(avg: Float32, sample: Float32, n: Int32): Float32 {
    return unsafe { igImExponentialMovingAverage(avg, sample, n) }
}

public func _capi_igImFileClose(file: ImFileHandle): Bool {
    return unsafe { igImFileClose(file) }
}

public func _capi_igImFileGetSize(file: ImFileHandle): ImU64 {
    return unsafe { igImFileGetSize(file) }
}

public func _capi_igImFileLoadToMemory(filename: CString, mode: CString, out_file_size: CPointer<UIntNative>, padding_bytes: Int32): CPointer<Unit> {
    return unsafe { igImFileLoadToMemory(filename, mode, out_file_size, padding_bytes) }
}

public func _capi_igImFileOpen(filename: CString, mode: CString): ImFileHandle {
    return unsafe { igImFileOpen(filename, mode) }
}

public func _capi_igImFileRead(data: CPointer<Unit>, size: ImU64, count: ImU64, file: ImFileHandle): ImU64 {
    return unsafe { igImFileRead(data, size, count, file) }
}

public func _capi_igImFileWrite(data: CPointer<Unit>, size: ImU64, count: ImU64, file: ImFileHandle): ImU64 {
    return unsafe { igImFileWrite(data, size, count, file) }
}

public func _capi_igImFloor_Float(f: Float32): Float32 {
    return unsafe { igImFloor_Float(f) }
}

public func _capi_igImFloor_Vec2(pOut: CPointer<ImVec2>, v: ImVec2): Unit {
    return unsafe { igImFloor_Vec2(pOut, v) }
}

public func _capi_igImFontAtlasBuildFinish(atlas: CPointer<ImFontAtlas>): Unit {
    return unsafe { igImFontAtlasBuildFinish(atlas) }
}

public func _capi_igImFontAtlasBuildInit(atlas: CPointer<ImFontAtlas>): Unit {
    return unsafe { igImFontAtlasBuildInit(atlas) }
}

public func _capi_igImFontAtlasBuildMultiplyCalcLookupTable(out_table: CPointer<UInt8>, in_multiply_factor: Float32): Unit {
    return unsafe { igImFontAtlasBuildMultiplyCalcLookupTable(out_table, in_multiply_factor) }
}

public func _capi_igImFontAtlasBuildMultiplyRectAlpha8(table: CPointer<UInt8>, pixels: CPointer<UInt8>, x: Int32, y: Int32, w: Int32, h: Int32, stride: Int32): Unit {
    return unsafe { igImFontAtlasBuildMultiplyRectAlpha8(table, pixels, x, y, w, h, stride) }
}

public func _capi_igImFontAtlasBuildPackCustomRects(atlas: CPointer<ImFontAtlas>, stbrp_context_opaque: CPointer<Unit>): Unit {
    return unsafe { igImFontAtlasBuildPackCustomRects(atlas, stbrp_context_opaque) }
}

public func _capi_igImFontAtlasBuildRender32bppRectFromString(atlas: CPointer<ImFontAtlas>, x: Int32, y: Int32, w: Int32, h: Int32, in_str: CString, in_marker_char: UInt8, in_marker_pixel_value: Int32): Unit {
    return unsafe { igImFontAtlasBuildRender32bppRectFromString(atlas, x, y, w, h, in_str, in_marker_char, in_marker_pixel_value) }
}

public func _capi_igImFontAtlasBuildRender8bppRectFromString(atlas: CPointer<ImFontAtlas>, x: Int32, y: Int32, w: Int32, h: Int32, in_str: CString, in_marker_char: UInt8, in_marker_pixel_value: UInt8): Unit {
    return unsafe { igImFontAtlasBuildRender8bppRectFromString(atlas, x, y, w, h, in_str, in_marker_char, in_marker_pixel_value) }
}

public func _capi_igImFontAtlasBuildSetupFont(atlas: CPointer<ImFontAtlas>, font: CPointer<ImFont>, font_config: CPointer<ImFontConfig>, ascent: Float32, descent: Float32): Unit {
    return unsafe { igImFontAtlasBuildSetupFont(atlas, font, font_config, ascent, descent) }
}

public func _capi_igImFontAtlasGetBuilderForStbTruetype(): CPointer<ImFontBuilderIO> {
    return unsafe { igImFontAtlasGetBuilderForStbTruetype() }
}

public func _capi_igImFontAtlasUpdateConfigDataPointers(atlas: CPointer<ImFontAtlas>): Unit {
    return unsafe { igImFontAtlasUpdateConfigDataPointers(atlas) }
}

public func _capi_igImFormatString(buf: CString, buf_size: UIntNative, fmt: CString): Int32 {
    return unsafe { igImFormatString(buf, buf_size, fmt) }
}

public func _capi_igImFormatStringToTempBuffer(out_buf: CPointer<CString>, out_buf_end: CPointer<CString>, fmt: CString): Unit {
    return unsafe { igImFormatStringToTempBuffer(out_buf, out_buf_end, fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igImFormatStringToTempBufferV(out_buf: CPointer<CString>, out_buf_end: CPointer<CString>, fmt: CString, args: va_list): Unit { ...

// Cangjie does not support `va_list`
// public func _capi_igImFormatStringV(buf: CString, buf_size: UIntNative, fmt: CString, args: va_list): Int32 { ...

public func _capi_igImHashData(data: CPointer<Unit>, data_size: UIntNative, seed: ImGuiID): ImGuiID {
    return unsafe { igImHashData(data, data_size, seed) }
}

public func _capi_igImHashStr(data: CString, data_size: UIntNative, seed: ImGuiID): ImGuiID {
    return unsafe { igImHashStr(data, data_size, seed) }
}

public func _capi_igImInvLength(lhs: ImVec2, fail_value: Float32): Float32 {
    return unsafe { igImInvLength(lhs, fail_value) }
}

public func _capi_igImIsFloatAboveGuaranteedIntegerPrecision(f: Float32): Bool {
    return unsafe { igImIsFloatAboveGuaranteedIntegerPrecision(f) }
}

public func _capi_igImIsPowerOfTwo_Int(v: Int32): Bool {
    return unsafe { igImIsPowerOfTwo_Int(v) }
}

public func _capi_igImIsPowerOfTwo_U64(v: ImU64): Bool {
    return unsafe { igImIsPowerOfTwo_U64(v) }
}

public func _capi_igImLengthSqr_Vec2(lhs: ImVec2): Float32 {
    return unsafe { igImLengthSqr_Vec2(lhs) }
}

public func _capi_igImLengthSqr_Vec4(lhs: ImVec4): Float32 {
    return unsafe { igImLengthSqr_Vec4(lhs) }
}

public func _capi_igImLerp_Vec2Float(pOut: CPointer<ImVec2>, a: ImVec2, b: ImVec2, t: Float32): Unit {
    return unsafe { igImLerp_Vec2Float(pOut, a, b, t) }
}

public func _capi_igImLerp_Vec2Vec2(pOut: CPointer<ImVec2>, a: ImVec2, b: ImVec2, t: ImVec2): Unit {
    return unsafe { igImLerp_Vec2Vec2(pOut, a, b, t) }
}

public func _capi_igImLerp_Vec4(pOut: CPointer<ImVec4>, a: ImVec4, b: ImVec4, t: Float32): Unit {
    return unsafe { igImLerp_Vec4(pOut, a, b, t) }
}

public func _capi_igImLineClosestPoint(pOut: CPointer<ImVec2>, a: ImVec2, b: ImVec2, p: ImVec2): Unit {
    return unsafe { igImLineClosestPoint(pOut, a, b, p) }
}

public func _capi_igImLinearSweep(current: Float32, target: Float32, speed: Float32): Float32 {
    return unsafe { igImLinearSweep(current, target, speed) }
}

public func _capi_igImLog_Float(x: Float32): Float32 {
    return unsafe { igImLog_Float(x) }
}

public func _capi_igImLog_double(x: Float64): Float64 {
    return unsafe { igImLog_double(x) }
}

public func _capi_igImMax(pOut: CPointer<ImVec2>, lhs: ImVec2, rhs: ImVec2): Unit {
    return unsafe { igImMax(pOut, lhs, rhs) }
}

public func _capi_igImMin(pOut: CPointer<ImVec2>, lhs: ImVec2, rhs: ImVec2): Unit {
    return unsafe { igImMin(pOut, lhs, rhs) }
}

public func _capi_igImModPositive(a: Int32, b: Int32): Int32 {
    return unsafe { igImModPositive(a, b) }
}

public func _capi_igImMul(pOut: CPointer<ImVec2>, lhs: ImVec2, rhs: ImVec2): Unit {
    return unsafe { igImMul(pOut, lhs, rhs) }
}

public func _capi_igImParseFormatFindEnd(format: CString): CString {
    return unsafe { igImParseFormatFindEnd(format) }
}

public func _capi_igImParseFormatFindStart(format: CString): CString {
    return unsafe { igImParseFormatFindStart(format) }
}

public func _capi_igImParseFormatPrecision(format: CString, default_value: Int32): Int32 {
    return unsafe { igImParseFormatPrecision(format, default_value) }
}

public func _capi_igImParseFormatSanitizeForPrinting(fmt_in: CString, fmt_out: CString, fmt_out_size: UIntNative): Unit {
    return unsafe { igImParseFormatSanitizeForPrinting(fmt_in, fmt_out, fmt_out_size) }
}

public func _capi_igImParseFormatSanitizeForScanning(fmt_in: CString, fmt_out: CString, fmt_out_size: UIntNative): CString {
    return unsafe { igImParseFormatSanitizeForScanning(fmt_in, fmt_out, fmt_out_size) }
}

public func _capi_igImParseFormatTrimDecorations(format: CString, buf: CString, buf_size: UIntNative): CString {
    return unsafe { igImParseFormatTrimDecorations(format, buf, buf_size) }
}

public func _capi_igImPow_Float(x: Float32, y: Float32): Float32 {
    return unsafe { igImPow_Float(x, y) }
}

public func _capi_igImPow_double(x: Float64, y: Float64): Float64 {
    return unsafe { igImPow_double(x, y) }
}

public func _capi_igImQsort(base: CPointer<Unit>, count: UIntNative, size_of_element: UIntNative, compare_func: CFunc<(arg1: CPointer<Unit>, arg2: CPointer<Unit>) -> Int32>): Unit {
    return unsafe { igImQsort(base, count, size_of_element, compare_func) }
}

public func _capi_igImRotate(pOut: CPointer<ImVec2>, v: ImVec2, cos_a: Float32, sin_a: Float32): Unit {
    return unsafe { igImRotate(pOut, v, cos_a, sin_a) }
}

public func _capi_igImRsqrt_Float(x: Float32): Float32 {
    return unsafe { igImRsqrt_Float(x) }
}

public func _capi_igImRsqrt_double(x: Float64): Float64 {
    return unsafe { igImRsqrt_double(x) }
}

public func _capi_igImSaturate(f: Float32): Float32 {
    return unsafe { igImSaturate(f) }
}

public func _capi_igImSign_Float(x: Float32): Float32 {
    return unsafe { igImSign_Float(x) }
}

public func _capi_igImSign_double(x: Float64): Float64 {
    return unsafe { igImSign_double(x) }
}

public func _capi_igImStrSkipBlank(str: CString): CString {
    return unsafe { igImStrSkipBlank(str) }
}

public func _capi_igImStrTrimBlanks(str: CString): Unit {
    return unsafe { igImStrTrimBlanks(str) }
}

public func _capi_igImStrbolW(buf_mid_line: CPointer<ImWchar>, buf_begin: CPointer<ImWchar>): CPointer<ImWchar> {
    return unsafe { igImStrbolW(buf_mid_line, buf_begin) }
}

public func _capi_igImStrchrRange(str_begin: CString, str_end: CString, c: UInt8): CString {
    return unsafe { igImStrchrRange(str_begin, str_end, c) }
}

public func _capi_igImStrdup(str: CString): CString {
    return unsafe { igImStrdup(str) }
}

public func _capi_igImStrdupcpy(dst: CString, p_dst_size: CPointer<UIntNative>, str: CString): CString {
    return unsafe { igImStrdupcpy(dst, p_dst_size, str) }
}

public func _capi_igImStreolRange(str: CString, str_end: CString): CString {
    return unsafe { igImStreolRange(str, str_end) }
}

public func _capi_igImStricmp(str1: CString, str2: CString): Int32 {
    return unsafe { igImStricmp(str1, str2) }
}

public func _capi_igImStristr(haystack: CString, haystack_end: CString, needle: CString, needle_end: CString): CString {
    return unsafe { igImStristr(haystack, haystack_end, needle, needle_end) }
}

public func _capi_igImStrlenW(str: CPointer<ImWchar>): Int32 {
    return unsafe { igImStrlenW(str) }
}

public func _capi_igImStrncpy(dst: CString, src: CString, count: UIntNative): Unit {
    return unsafe { igImStrncpy(dst, src, count) }
}

public func _capi_igImStrnicmp(str1: CString, str2: CString, count: UIntNative): Int32 {
    return unsafe { igImStrnicmp(str1, str2, count) }
}

public func _capi_igImTextCharFromUtf8(out_char: CPointer<Int32>, in_text: CString, in_text_end: CString): Int32 {
    return unsafe { igImTextCharFromUtf8(out_char, in_text, in_text_end) }
}

public func _capi_igImTextCharToUtf8(out_buf: CPointer<UInt8>, c: Int32): CString {
    return unsafe { igImTextCharToUtf8(out_buf, c) }
}

public func _capi_igImTextCountCharsFromUtf8(in_text: CString, in_text_end: CString): Int32 {
    return unsafe { igImTextCountCharsFromUtf8(in_text, in_text_end) }
}

public func _capi_igImTextCountLines(in_text: CString, in_text_end: CString): Int32 {
    return unsafe { igImTextCountLines(in_text, in_text_end) }
}

public func _capi_igImTextCountUtf8BytesFromChar(in_text: CString, in_text_end: CString): Int32 {
    return unsafe { igImTextCountUtf8BytesFromChar(in_text, in_text_end) }
}

public func _capi_igImTextCountUtf8BytesFromStr(in_text: CPointer<ImWchar>, in_text_end: CPointer<ImWchar>): Int32 {
    return unsafe { igImTextCountUtf8BytesFromStr(in_text, in_text_end) }
}

public func _capi_igImTextFindPreviousUtf8Codepoint(in_text_start: CString, in_text_curr: CString): CString {
    return unsafe { igImTextFindPreviousUtf8Codepoint(in_text_start, in_text_curr) }
}

public func _capi_igImTextStrFromUtf8(out_buf: CPointer<ImWchar>, out_buf_size: Int32, in_text: CString, in_text_end: CString, in_remaining: CPointer<CString>): Int32 {
    return unsafe { igImTextStrFromUtf8(out_buf, out_buf_size, in_text, in_text_end, in_remaining) }
}

public func _capi_igImTextStrToUtf8(out_buf: CString, out_buf_size: Int32, in_text: CPointer<ImWchar>, in_text_end: CPointer<ImWchar>): Int32 {
    return unsafe { igImTextStrToUtf8(out_buf, out_buf_size, in_text, in_text_end) }
}

public func _capi_igImToUpper(c: UInt8): UInt8 {
    return unsafe { igImToUpper(c) }
}

public func _capi_igImTriangleArea(a: ImVec2, b: ImVec2, c: ImVec2): Float32 {
    return unsafe { igImTriangleArea(a, b, c) }
}

public func _capi_igImTriangleBarycentricCoords(a: ImVec2, b: ImVec2, c: ImVec2, p: ImVec2, out_u: CPointer<Float32>, out_v: CPointer<Float32>, out_w: CPointer<Float32>): Unit {
    return unsafe { igImTriangleBarycentricCoords(a, b, c, p, out_u, out_v, out_w) }
}

public func _capi_igImTriangleClosestPoint(pOut: CPointer<ImVec2>, a: ImVec2, b: ImVec2, c: ImVec2, p: ImVec2): Unit {
    return unsafe { igImTriangleClosestPoint(pOut, a, b, c, p) }
}

public func _capi_igImTriangleContainsPoint(a: ImVec2, b: ImVec2, c: ImVec2, p: ImVec2): Bool {
    return unsafe { igImTriangleContainsPoint(a, b, c, p) }
}

public func _capi_igImTriangleIsClockwise(a: ImVec2, b: ImVec2, c: ImVec2): Bool {
    return unsafe { igImTriangleIsClockwise(a, b, c) }
}

public func _capi_igImTrunc_Float(f: Float32): Float32 {
    return unsafe { igImTrunc_Float(f) }
}

public func _capi_igImTrunc_Vec2(pOut: CPointer<ImVec2>, v: ImVec2): Unit {
    return unsafe { igImTrunc_Vec2(pOut, v) }
}

public func _capi_igImUpperPowerOfTwo(v: Int32): Int32 {
    return unsafe { igImUpperPowerOfTwo(v) }
}

public func _capi_igImage(user_texture_id: ImTextureID, image_size: ImVec2, uv0: ImVec2, uv1: ImVec2, tint_col: ImVec4, border_col: ImVec4): Unit {
    return unsafe { igImage(user_texture_id, image_size, uv0, uv1, tint_col, border_col) }
}

public func _capi_igImageButton(str_id: CString, user_texture_id: ImTextureID, image_size: ImVec2, uv0: ImVec2, uv1: ImVec2, bg_col: ImVec4, tint_col: ImVec4): Bool {
    return unsafe { igImageButton(str_id, user_texture_id, image_size, uv0, uv1, bg_col, tint_col) }
}

public func _capi_igImageButtonEx(id: ImGuiID, texture_id: ImTextureID, image_size: ImVec2, uv0: ImVec2, uv1: ImVec2, bg_col: ImVec4, tint_col: ImVec4, flags: ImGuiButtonFlags): Bool {
    return unsafe { igImageButtonEx(id, texture_id, image_size, uv0, uv1, bg_col, tint_col, flags) }
}

public func _capi_igIndent(indent_w: Float32): Unit {
    return unsafe { igIndent(indent_w) }
}

public func _capi_igInitialize(): Unit {
    return unsafe { igInitialize() }
}

public func _capi_igInputDouble(label: CString, v: CPointer<Float64>, step: Float64, step_fast: Float64, format: CString, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputDouble(label, v, step, step_fast, format, flags) }
}

public func _capi_igInputFloat(label: CString, v: CPointer<Float32>, step: Float32, step_fast: Float32, format: CString, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputFloat(label, v, step, step_fast, format, flags) }
}

public func _capi_igInputFloat2(label: CString, v: CPointer<Float32>, format: CString, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputFloat2(label, v, format, flags) }
}

public func _capi_igInputFloat3(label: CString, v: CPointer<Float32>, format: CString, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputFloat3(label, v, format, flags) }
}

public func _capi_igInputFloat4(label: CString, v: CPointer<Float32>, format: CString, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputFloat4(label, v, format, flags) }
}

public func _capi_igInputInt(label: CString, v: CPointer<Int32>, step: Int32, step_fast: Int32, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputInt(label, v, step, step_fast, flags) }
}

public func _capi_igInputInt2(label: CString, v: CPointer<Int32>, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputInt2(label, v, flags) }
}

public func _capi_igInputInt3(label: CString, v: CPointer<Int32>, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputInt3(label, v, flags) }
}

public func _capi_igInputInt4(label: CString, v: CPointer<Int32>, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputInt4(label, v, flags) }
}

public func _capi_igInputScalar(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, p_step: CPointer<Unit>, p_step_fast: CPointer<Unit>, format: CString, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputScalar(label, data_type, p_data, p_step, p_step_fast, format, flags) }
}

public func _capi_igInputScalarN(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, components: Int32, p_step: CPointer<Unit>, p_step_fast: CPointer<Unit>, format: CString, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igInputScalarN(label, data_type, p_data, components, p_step, p_step_fast, format, flags) }
}

public func _capi_igInputText(label: CString, buf: CString, buf_size: UIntNative, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: CPointer<Unit>): Bool {
    return unsafe { igInputText(label, buf, buf_size, flags, callback, user_data) }
}

public func _capi_igInputTextDeactivateHook(id: ImGuiID): Unit {
    return unsafe { igInputTextDeactivateHook(id) }
}

public func _capi_igInputTextEx(label: CString, hint: CString, buf: CString, buf_size: Int32, size_arg: ImVec2, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: CPointer<Unit>): Bool {
    return unsafe { igInputTextEx(label, hint, buf, buf_size, size_arg, flags, callback, user_data) }
}

public func _capi_igInputTextMultiline(label: CString, buf: CString, buf_size: UIntNative, size: ImVec2, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: CPointer<Unit>): Bool {
    return unsafe { igInputTextMultiline(label, buf, buf_size, size, flags, callback, user_data) }
}

public func _capi_igInputTextWithHint(label: CString, hint: CString, buf: CString, buf_size: UIntNative, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: CPointer<Unit>): Bool {
    return unsafe { igInputTextWithHint(label, hint, buf, buf_size, flags, callback, user_data) }
}

public func _capi_igInvisibleButton(str_id: CString, size: ImVec2, flags: ImGuiButtonFlags): Bool {
    return unsafe { igInvisibleButton(str_id, size, flags) }
}

public func _capi_igIsActiveIdUsingNavDir(dir: ImGuiDir): Bool {
    return unsafe { igIsActiveIdUsingNavDir(dir) }
}

public func _capi_igIsAliasKey(key: ImGuiKey): Bool {
    return unsafe { igIsAliasKey(key) }
}

public func _capi_igIsAnyItemActive(): Bool {
    return unsafe { igIsAnyItemActive() }
}

public func _capi_igIsAnyItemFocused(): Bool {
    return unsafe { igIsAnyItemFocused() }
}

public func _capi_igIsAnyItemHovered(): Bool {
    return unsafe { igIsAnyItemHovered() }
}

public func _capi_igIsAnyMouseDown(): Bool {
    return unsafe { igIsAnyMouseDown() }
}

public func _capi_igIsClippedEx(bb: ImRect, id: ImGuiID): Bool {
    return unsafe { igIsClippedEx(bb, id) }
}

public func _capi_igIsDragDropActive(): Bool {
    return unsafe { igIsDragDropActive() }
}

public func _capi_igIsDragDropPayloadBeingAccepted(): Bool {
    return unsafe { igIsDragDropPayloadBeingAccepted() }
}

public func _capi_igIsGamepadKey(key: ImGuiKey): Bool {
    return unsafe { igIsGamepadKey(key) }
}

public func _capi_igIsItemActivated(): Bool {
    return unsafe { igIsItemActivated() }
}

public func _capi_igIsItemActive(): Bool {
    return unsafe { igIsItemActive() }
}

public func _capi_igIsItemClicked(mouse_button: ImGuiMouseButton): Bool {
    return unsafe { igIsItemClicked(mouse_button) }
}

public func _capi_igIsItemDeactivated(): Bool {
    return unsafe { igIsItemDeactivated() }
}

public func _capi_igIsItemDeactivatedAfterEdit(): Bool {
    return unsafe { igIsItemDeactivatedAfterEdit() }
}

public func _capi_igIsItemEdited(): Bool {
    return unsafe { igIsItemEdited() }
}

public func _capi_igIsItemFocused(): Bool {
    return unsafe { igIsItemFocused() }
}

public func _capi_igIsItemHovered(flags: ImGuiHoveredFlags): Bool {
    return unsafe { igIsItemHovered(flags) }
}

public func _capi_igIsItemToggledOpen(): Bool {
    return unsafe { igIsItemToggledOpen() }
}

public func _capi_igIsItemToggledSelection(): Bool {
    return unsafe { igIsItemToggledSelection() }
}

public func _capi_igIsItemVisible(): Bool {
    return unsafe { igIsItemVisible() }
}

public func _capi_igIsKeyChordPressed_Nil(key_chord: ImGuiKeyChord): Bool {
    return unsafe { igIsKeyChordPressed_Nil(key_chord) }
}

public func _capi_igIsKeyChordPressed_InputFlags(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool {
    return unsafe { igIsKeyChordPressed_InputFlags(key_chord, flags, owner_id) }
}

public func _capi_igIsKeyDown_Nil(key: ImGuiKey): Bool {
    return unsafe { igIsKeyDown_Nil(key) }
}

public func _capi_igIsKeyDown_ID(key: ImGuiKey, owner_id: ImGuiID): Bool {
    return unsafe { igIsKeyDown_ID(key, owner_id) }
}

public func _capi_igIsKeyPressed_Bool(key: ImGuiKey, repeat: Bool): Bool {
    return unsafe { igIsKeyPressed_Bool(key, repeat) }
}

public func _capi_igIsKeyPressed_InputFlags(key: ImGuiKey, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool {
    return unsafe { igIsKeyPressed_InputFlags(key, flags, owner_id) }
}

public func _capi_igIsKeyReleased_Nil(key: ImGuiKey): Bool {
    return unsafe { igIsKeyReleased_Nil(key) }
}

public func _capi_igIsKeyReleased_ID(key: ImGuiKey, owner_id: ImGuiID): Bool {
    return unsafe { igIsKeyReleased_ID(key, owner_id) }
}

public func _capi_igIsKeyboardKey(key: ImGuiKey): Bool {
    return unsafe { igIsKeyboardKey(key) }
}

public func _capi_igIsLegacyKey(key: ImGuiKey): Bool {
    return unsafe { igIsLegacyKey(key) }
}

public func _capi_igIsModKey(key: ImGuiKey): Bool {
    return unsafe { igIsModKey(key) }
}

public func _capi_igIsMouseClicked_Bool(button: ImGuiMouseButton, repeat: Bool): Bool {
    return unsafe { igIsMouseClicked_Bool(button, repeat) }
}

public func _capi_igIsMouseClicked_InputFlags(button: ImGuiMouseButton, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool {
    return unsafe { igIsMouseClicked_InputFlags(button, flags, owner_id) }
}

public func _capi_igIsMouseDoubleClicked_Nil(button: ImGuiMouseButton): Bool {
    return unsafe { igIsMouseDoubleClicked_Nil(button) }
}

public func _capi_igIsMouseDoubleClicked_ID(button: ImGuiMouseButton, owner_id: ImGuiID): Bool {
    return unsafe { igIsMouseDoubleClicked_ID(button, owner_id) }
}

public func _capi_igIsMouseDown_Nil(button: ImGuiMouseButton): Bool {
    return unsafe { igIsMouseDown_Nil(button) }
}

public func _capi_igIsMouseDown_ID(button: ImGuiMouseButton, owner_id: ImGuiID): Bool {
    return unsafe { igIsMouseDown_ID(button, owner_id) }
}

public func _capi_igIsMouseDragPastThreshold(button: ImGuiMouseButton, lock_threshold: Float32): Bool {
    return unsafe { igIsMouseDragPastThreshold(button, lock_threshold) }
}

public func _capi_igIsMouseDragging(button: ImGuiMouseButton, lock_threshold: Float32): Bool {
    return unsafe { igIsMouseDragging(button, lock_threshold) }
}

public func _capi_igIsMouseHoveringRect(r_min: ImVec2, r_max: ImVec2, clip: Bool): Bool {
    return unsafe { igIsMouseHoveringRect(r_min, r_max, clip) }
}

public func _capi_igIsMouseKey(key: ImGuiKey): Bool {
    return unsafe { igIsMouseKey(key) }
}

public func _capi_igIsMousePosValid(mouse_pos: CPointer<ImVec2>): Bool {
    return unsafe { igIsMousePosValid(mouse_pos) }
}

public func _capi_igIsMouseReleased_Nil(button: ImGuiMouseButton): Bool {
    return unsafe { igIsMouseReleased_Nil(button) }
}

public func _capi_igIsMouseReleased_ID(button: ImGuiMouseButton, owner_id: ImGuiID): Bool {
    return unsafe { igIsMouseReleased_ID(button, owner_id) }
}

public func _capi_igIsNamedKey(key: ImGuiKey): Bool {
    return unsafe { igIsNamedKey(key) }
}

public func _capi_igIsNamedKeyOrMod(key: ImGuiKey): Bool {
    return unsafe { igIsNamedKeyOrMod(key) }
}

public func _capi_igIsPopupOpen_Str(str_id: CString, flags: ImGuiPopupFlags): Bool {
    return unsafe { igIsPopupOpen_Str(str_id, flags) }
}

public func _capi_igIsPopupOpen_ID(id: ImGuiID, popup_flags: ImGuiPopupFlags): Bool {
    return unsafe { igIsPopupOpen_ID(id, popup_flags) }
}

public func _capi_igIsRectVisible_Nil(size: ImVec2): Bool {
    return unsafe { igIsRectVisible_Nil(size) }
}

public func _capi_igIsRectVisible_Vec2(rect_min: ImVec2, rect_max: ImVec2): Bool {
    return unsafe { igIsRectVisible_Vec2(rect_min, rect_max) }
}

public func _capi_igIsWindowAbove(potential_above: CPointer<ImGuiWindow>, potential_below: CPointer<ImGuiWindow>): Bool {
    return unsafe { igIsWindowAbove(potential_above, potential_below) }
}

public func _capi_igIsWindowAppearing(): Bool {
    return unsafe { igIsWindowAppearing() }
}

public func _capi_igIsWindowChildOf(window: CPointer<ImGuiWindow>, potential_parent: CPointer<ImGuiWindow>, popup_hierarchy: Bool, dock_hierarchy: Bool): Bool {
    return unsafe { igIsWindowChildOf(window, potential_parent, popup_hierarchy, dock_hierarchy) }
}

public func _capi_igIsWindowCollapsed(): Bool {
    return unsafe { igIsWindowCollapsed() }
}

public func _capi_igIsWindowContentHoverable(window: CPointer<ImGuiWindow>, flags: ImGuiHoveredFlags): Bool {
    return unsafe { igIsWindowContentHoverable(window, flags) }
}

public func _capi_igIsWindowDocked(): Bool {
    return unsafe { igIsWindowDocked() }
}

public func _capi_igIsWindowFocused(flags: ImGuiFocusedFlags): Bool {
    return unsafe { igIsWindowFocused(flags) }
}

public func _capi_igIsWindowHovered(flags: ImGuiHoveredFlags): Bool {
    return unsafe { igIsWindowHovered(flags) }
}

public func _capi_igIsWindowNavFocusable(window: CPointer<ImGuiWindow>): Bool {
    return unsafe { igIsWindowNavFocusable(window) }
}

public func _capi_igIsWindowWithinBeginStackOf(window: CPointer<ImGuiWindow>, potential_parent: CPointer<ImGuiWindow>): Bool {
    return unsafe { igIsWindowWithinBeginStackOf(window, potential_parent) }
}

public func _capi_igItemAdd(bb: ImRect, id: ImGuiID, nav_bb: CPointer<ImRect>, extra_flags: ImGuiItemFlags): Bool {
    return unsafe { igItemAdd(bb, id, nav_bb, extra_flags) }
}

public func _capi_igItemHoverable(bb: ImRect, id: ImGuiID, item_flags: ImGuiItemFlags): Bool {
    return unsafe { igItemHoverable(bb, id, item_flags) }
}

public func _capi_igItemSize_Vec2(size: ImVec2, text_baseline_y: Float32): Unit {
    return unsafe { igItemSize_Vec2(size, text_baseline_y) }
}

public func _capi_igItemSize_Rect(bb: ImRect, text_baseline_y: Float32): Unit {
    return unsafe { igItemSize_Rect(bb, text_baseline_y) }
}

public func _capi_igKeepAliveID(id: ImGuiID): Unit {
    return unsafe { igKeepAliveID(id) }
}

public func _capi_igLabelText(label: CString, fmt: CString): Unit {
    return unsafe { igLabelText(label, fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igLabelTextV(label: CString, fmt: CString, args: va_list): Unit { ...

public func _capi_igListBox_Str_arr(label: CString, current_item: CPointer<Int32>, items: CPointer<CString>, items_count: Int32, height_in_items: Int32): Bool {
    return unsafe { igListBox_Str_arr(label, current_item, items, items_count, height_in_items) }
}

public func _capi_igListBox_FnStrPtr(label: CString, current_item: CPointer<Int32>, getter: CFunc<(user_data: CPointer<Unit>, idx: Int32) -> CString>, user_data: CPointer<Unit>, items_count: Int32, height_in_items: Int32): Bool {
    return unsafe { igListBox_FnStrPtr(label, current_item, getter, user_data, items_count, height_in_items) }
}

public func _capi_igLoadIniSettingsFromDisk(ini_filename: CString): Unit {
    return unsafe { igLoadIniSettingsFromDisk(ini_filename) }
}

public func _capi_igLoadIniSettingsFromMemory(ini_data: CString, ini_size: UIntNative): Unit {
    return unsafe { igLoadIniSettingsFromMemory(ini_data, ini_size) }
}

public func _capi_igLocalizeGetMsg(key: ImGuiLocKey): CString {
    return unsafe { igLocalizeGetMsg(key) }
}

public func _capi_igLocalizeRegisterEntries(entries: CPointer<ImGuiLocEntry>, count: Int32): Unit {
    return unsafe { igLocalizeRegisterEntries(entries, count) }
}

public func _capi_igLogBegin(`type`: ImGuiLogType, auto_open_depth: Int32): Unit {
    return unsafe { igLogBegin(`type`, auto_open_depth) }
}

public func _capi_igLogButtons(): Unit {
    return unsafe { igLogButtons() }
}

public func _capi_igLogFinish(): Unit {
    return unsafe { igLogFinish() }
}

public func _capi_igLogRenderedText(ref_pos: CPointer<ImVec2>, text: CString, text_end: CString): Unit {
    return unsafe { igLogRenderedText(ref_pos, text, text_end) }
}

public func _capi_igLogSetNextTextDecoration(prefix: CString, suffix: CString): Unit {
    return unsafe { igLogSetNextTextDecoration(prefix, suffix) }
}

public func _capi_igLogText(fmt: CString): Unit {
    return unsafe { igLogText(fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igLogTextV(fmt: CString, args: va_list): Unit { ...

public func _capi_igLogToBuffer(auto_open_depth: Int32): Unit {
    return unsafe { igLogToBuffer(auto_open_depth) }
}

public func _capi_igLogToClipboard(auto_open_depth: Int32): Unit {
    return unsafe { igLogToClipboard(auto_open_depth) }
}

public func _capi_igLogToFile(auto_open_depth: Int32, filename: CString): Unit {
    return unsafe { igLogToFile(auto_open_depth, filename) }
}

public func _capi_igLogToTTY(auto_open_depth: Int32): Unit {
    return unsafe { igLogToTTY(auto_open_depth) }
}

public func _capi_igMarkIniSettingsDirty_Nil(): Unit {
    return unsafe { igMarkIniSettingsDirty_Nil() }
}

public func _capi_igMarkIniSettingsDirty_WindowPtr(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igMarkIniSettingsDirty_WindowPtr(window) }
}

public func _capi_igMarkItemEdited(id: ImGuiID): Unit {
    return unsafe { igMarkItemEdited(id) }
}

public func _capi_igMemAlloc(size: UIntNative): CPointer<Unit> {
    return unsafe { igMemAlloc(size) }
}

public func _capi_igMemFree(ptr: CPointer<Unit>): Unit {
    return unsafe { igMemFree(ptr) }
}

public func _capi_igMenuItem_Bool(label: CString, shortcut: CString, selected: Bool, enabled: Bool): Bool {
    return unsafe { igMenuItem_Bool(label, shortcut, selected, enabled) }
}

public func _capi_igMenuItem_BoolPtr(label: CString, shortcut: CString, p_selected: CPointer<Bool>, enabled: Bool): Bool {
    return unsafe { igMenuItem_BoolPtr(label, shortcut, p_selected, enabled) }
}

public func _capi_igMenuItemEx(label: CString, icon: CString, shortcut: CString, selected: Bool, enabled: Bool): Bool {
    return unsafe { igMenuItemEx(label, icon, shortcut, selected, enabled) }
}

public func _capi_igMouseButtonToKey(button: ImGuiMouseButton): ImGuiKey {
    return unsafe { igMouseButtonToKey(button) }
}

public func _capi_igNavClearPreferredPosForAxis(axis: ImGuiAxis): Unit {
    return unsafe { igNavClearPreferredPosForAxis(axis) }
}

public func _capi_igNavHighlightActivated(id: ImGuiID): Unit {
    return unsafe { igNavHighlightActivated(id) }
}

public func _capi_igNavInitRequestApplyResult(): Unit {
    return unsafe { igNavInitRequestApplyResult() }
}

public func _capi_igNavInitWindow(window: CPointer<ImGuiWindow>, force_reinit: Bool): Unit {
    return unsafe { igNavInitWindow(window, force_reinit) }
}

public func _capi_igNavMoveRequestApplyResult(): Unit {
    return unsafe { igNavMoveRequestApplyResult() }
}

public func _capi_igNavMoveRequestButNoResultYet(): Bool {
    return unsafe { igNavMoveRequestButNoResultYet() }
}

public func _capi_igNavMoveRequestCancel(): Unit {
    return unsafe { igNavMoveRequestCancel() }
}

public func _capi_igNavMoveRequestForward(move_dir: ImGuiDir, clip_dir: ImGuiDir, move_flags: ImGuiNavMoveFlags, scroll_flags: ImGuiScrollFlags): Unit {
    return unsafe { igNavMoveRequestForward(move_dir, clip_dir, move_flags, scroll_flags) }
}

public func _capi_igNavMoveRequestResolveWithLastItem(result: CPointer<ImGuiNavItemData>): Unit {
    return unsafe { igNavMoveRequestResolveWithLastItem(result) }
}

public func _capi_igNavMoveRequestResolveWithPastTreeNode(result: CPointer<ImGuiNavItemData>, tree_node_data: CPointer<ImGuiNavTreeNodeData>): Unit {
    return unsafe { igNavMoveRequestResolveWithPastTreeNode(result, tree_node_data) }
}

public func _capi_igNavMoveRequestSubmit(move_dir: ImGuiDir, clip_dir: ImGuiDir, move_flags: ImGuiNavMoveFlags, scroll_flags: ImGuiScrollFlags): Unit {
    return unsafe { igNavMoveRequestSubmit(move_dir, clip_dir, move_flags, scroll_flags) }
}

public func _capi_igNavMoveRequestTryWrapping(window: CPointer<ImGuiWindow>, move_flags: ImGuiNavMoveFlags): Unit {
    return unsafe { igNavMoveRequestTryWrapping(window, move_flags) }
}

public func _capi_igNavRestoreHighlightAfterMove(): Unit {
    return unsafe { igNavRestoreHighlightAfterMove() }
}

public func _capi_igNavUpdateCurrentWindowIsScrollPushableX(): Unit {
    return unsafe { igNavUpdateCurrentWindowIsScrollPushableX() }
}

public func _capi_igNewFrame(): Unit {
    return unsafe { igNewFrame() }
}

public func _capi_igNewLine(): Unit {
    return unsafe { igNewLine() }
}

public func _capi_igNextColumn(): Unit {
    return unsafe { igNextColumn() }
}

public func _capi_igOpenPopup_Str(str_id: CString, popup_flags: ImGuiPopupFlags): Unit {
    return unsafe { igOpenPopup_Str(str_id, popup_flags) }
}

public func _capi_igOpenPopup_ID(id: ImGuiID, popup_flags: ImGuiPopupFlags): Unit {
    return unsafe { igOpenPopup_ID(id, popup_flags) }
}

public func _capi_igOpenPopupEx(id: ImGuiID, popup_flags: ImGuiPopupFlags): Unit {
    return unsafe { igOpenPopupEx(id, popup_flags) }
}

public func _capi_igOpenPopupOnItemClick(str_id: CString, popup_flags: ImGuiPopupFlags): Unit {
    return unsafe { igOpenPopupOnItemClick(str_id, popup_flags) }
}

public func _capi_igPlotEx(plot_type: ImGuiPlotType, label: CString, values_getter: CFunc<(data: CPointer<Unit>, idx: Int32) -> Float32>, data: CPointer<Unit>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, size_arg: ImVec2): Int32 {
    return unsafe { igPlotEx(plot_type, label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, size_arg) }
}

public func _capi_igPlotHistogram_FloatPtr(label: CString, values: CPointer<Float32>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, graph_size: ImVec2, stride: Int32): Unit {
    return unsafe { igPlotHistogram_FloatPtr(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, stride) }
}

public func _capi_igPlotHistogram_FnFloatPtr(label: CString, values_getter: CFunc<(data: CPointer<Unit>, idx: Int32) -> Float32>, data: CPointer<Unit>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, graph_size: ImVec2): Unit {
    return unsafe { igPlotHistogram_FnFloatPtr(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size) }
}

public func _capi_igPlotLines_FloatPtr(label: CString, values: CPointer<Float32>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, graph_size: ImVec2, stride: Int32): Unit {
    return unsafe { igPlotLines_FloatPtr(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, stride) }
}

public func _capi_igPlotLines_FnFloatPtr(label: CString, values_getter: CFunc<(data: CPointer<Unit>, idx: Int32) -> Float32>, data: CPointer<Unit>, values_count: Int32, values_offset: Int32, overlay_text: CString, scale_min: Float32, scale_max: Float32, graph_size: ImVec2): Unit {
    return unsafe { igPlotLines_FnFloatPtr(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size) }
}

public func _capi_igPopButtonRepeat(): Unit {
    return unsafe { igPopButtonRepeat() }
}

public func _capi_igPopClipRect(): Unit {
    return unsafe { igPopClipRect() }
}

public func _capi_igPopColumnsBackground(): Unit {
    return unsafe { igPopColumnsBackground() }
}

public func _capi_igPopFocusScope(): Unit {
    return unsafe { igPopFocusScope() }
}

public func _capi_igPopFont(): Unit {
    return unsafe { igPopFont() }
}

public func _capi_igPopID(): Unit {
    return unsafe { igPopID() }
}

public func _capi_igPopItemFlag(): Unit {
    return unsafe { igPopItemFlag() }
}

public func _capi_igPopItemWidth(): Unit {
    return unsafe { igPopItemWidth() }
}

public func _capi_igPopStyleColor(count: Int32): Unit {
    return unsafe { igPopStyleColor(count) }
}

public func _capi_igPopStyleVar(count: Int32): Unit {
    return unsafe { igPopStyleVar(count) }
}

public func _capi_igPopTabStop(): Unit {
    return unsafe { igPopTabStop() }
}

public func _capi_igPopTextWrapPos(): Unit {
    return unsafe { igPopTextWrapPos() }
}

public func _capi_igProgressBar(fraction: Float32, size_arg: ImVec2, overlay: CString): Unit {
    return unsafe { igProgressBar(fraction, size_arg, overlay) }
}

public func _capi_igPushButtonRepeat(repeat: Bool): Unit {
    return unsafe { igPushButtonRepeat(repeat) }
}

public func _capi_igPushClipRect(clip_rect_min: ImVec2, clip_rect_max: ImVec2, intersect_with_current_clip_rect: Bool): Unit {
    return unsafe { igPushClipRect(clip_rect_min, clip_rect_max, intersect_with_current_clip_rect) }
}

public func _capi_igPushColumnClipRect(column_index: Int32): Unit {
    return unsafe { igPushColumnClipRect(column_index) }
}

public func _capi_igPushColumnsBackground(): Unit {
    return unsafe { igPushColumnsBackground() }
}

public func _capi_igPushFocusScope(id: ImGuiID): Unit {
    return unsafe { igPushFocusScope(id) }
}

public func _capi_igPushFont(font: CPointer<ImFont>): Unit {
    return unsafe { igPushFont(font) }
}

public func _capi_igPushID_Str(str_id: CString): Unit {
    return unsafe { igPushID_Str(str_id) }
}

public func _capi_igPushID_StrStr(str_id_begin: CString, str_id_end: CString): Unit {
    return unsafe { igPushID_StrStr(str_id_begin, str_id_end) }
}

public func _capi_igPushID_Ptr(ptr_id: CPointer<Unit>): Unit {
    return unsafe { igPushID_Ptr(ptr_id) }
}

public func _capi_igPushID_Int(int_id: Int32): Unit {
    return unsafe { igPushID_Int(int_id) }
}

public func _capi_igPushItemFlag(option: ImGuiItemFlags, enabled: Bool): Unit {
    return unsafe { igPushItemFlag(option, enabled) }
}

public func _capi_igPushItemWidth(item_width: Float32): Unit {
    return unsafe { igPushItemWidth(item_width) }
}

public func _capi_igPushMultiItemsWidths(components: Int32, width_full: Float32): Unit {
    return unsafe { igPushMultiItemsWidths(components, width_full) }
}

public func _capi_igPushOverrideID(id: ImGuiID): Unit {
    return unsafe { igPushOverrideID(id) }
}

public func _capi_igPushStyleColor_U32(idx: ImGuiCol, col: ImU32): Unit {
    return unsafe { igPushStyleColor_U32(idx, col) }
}

public func _capi_igPushStyleColor_Vec4(idx: ImGuiCol, col: ImVec4): Unit {
    return unsafe { igPushStyleColor_Vec4(idx, col) }
}

public func _capi_igPushStyleVar_Float(idx: ImGuiStyleVar, val: Float32): Unit {
    return unsafe { igPushStyleVar_Float(idx, val) }
}

public func _capi_igPushStyleVar_Vec2(idx: ImGuiStyleVar, val: ImVec2): Unit {
    return unsafe { igPushStyleVar_Vec2(idx, val) }
}

public func _capi_igPushTabStop(tab_stop: Bool): Unit {
    return unsafe { igPushTabStop(tab_stop) }
}

public func _capi_igPushTextWrapPos(wrap_local_pos_x: Float32): Unit {
    return unsafe { igPushTextWrapPos(wrap_local_pos_x) }
}

public func _capi_igRadioButton_Bool(label: CString, active: Bool): Bool {
    return unsafe { igRadioButton_Bool(label, active) }
}

public func _capi_igRadioButton_IntPtr(label: CString, v: CPointer<Int32>, v_button: Int32): Bool {
    return unsafe { igRadioButton_IntPtr(label, v, v_button) }
}

public func _capi_igRemoveContextHook(context: CPointer<ImGuiContext>, hook_to_remove: ImGuiID): Unit {
    return unsafe { igRemoveContextHook(context, hook_to_remove) }
}

public func _capi_igRemoveSettingsHandler(type_name: CString): Unit {
    return unsafe { igRemoveSettingsHandler(type_name) }
}

public func _capi_igRender(): Unit {
    return unsafe { igRender() }
}

public func _capi_igRenderArrow(draw_list: CPointer<ImDrawList>, pos: ImVec2, col: ImU32, dir: ImGuiDir, scale: Float32): Unit {
    return unsafe { igRenderArrow(draw_list, pos, col, dir, scale) }
}

public func _capi_igRenderArrowDockMenu(draw_list: CPointer<ImDrawList>, p_min: ImVec2, sz: Float32, col: ImU32): Unit {
    return unsafe { igRenderArrowDockMenu(draw_list, p_min, sz, col) }
}

public func _capi_igRenderArrowPointingAt(draw_list: CPointer<ImDrawList>, pos: ImVec2, half_sz: ImVec2, direction: ImGuiDir, col: ImU32): Unit {
    return unsafe { igRenderArrowPointingAt(draw_list, pos, half_sz, direction, col) }
}

public func _capi_igRenderBullet(draw_list: CPointer<ImDrawList>, pos: ImVec2, col: ImU32): Unit {
    return unsafe { igRenderBullet(draw_list, pos, col) }
}

public func _capi_igRenderCheckMark(draw_list: CPointer<ImDrawList>, pos: ImVec2, col: ImU32, sz: Float32): Unit {
    return unsafe { igRenderCheckMark(draw_list, pos, col, sz) }
}

public func _capi_igRenderColorRectWithAlphaCheckerboard(draw_list: CPointer<ImDrawList>, p_min: ImVec2, p_max: ImVec2, fill_col: ImU32, grid_step: Float32, grid_off: ImVec2, rounding: Float32, flags: ImDrawFlags): Unit {
    return unsafe { igRenderColorRectWithAlphaCheckerboard(draw_list, p_min, p_max, fill_col, grid_step, grid_off, rounding, flags) }
}

public func _capi_igRenderDragDropTargetRect(bb: ImRect, item_clip_rect: ImRect): Unit {
    return unsafe { igRenderDragDropTargetRect(bb, item_clip_rect) }
}

public func _capi_igRenderFrame(p_min: ImVec2, p_max: ImVec2, fill_col: ImU32, border: Bool, rounding: Float32): Unit {
    return unsafe { igRenderFrame(p_min, p_max, fill_col, border, rounding) }
}

public func _capi_igRenderFrameBorder(p_min: ImVec2, p_max: ImVec2, rounding: Float32): Unit {
    return unsafe { igRenderFrameBorder(p_min, p_max, rounding) }
}

public func _capi_igRenderMouseCursor(pos: ImVec2, scale: Float32, mouse_cursor: ImGuiMouseCursor, col_fill: ImU32, col_border: ImU32, col_shadow: ImU32): Unit {
    return unsafe { igRenderMouseCursor(pos, scale, mouse_cursor, col_fill, col_border, col_shadow) }
}

public func _capi_igRenderNavHighlight(bb: ImRect, id: ImGuiID, flags: ImGuiNavHighlightFlags): Unit {
    return unsafe { igRenderNavHighlight(bb, id, flags) }
}

public func _capi_igRenderPlatformWindowsDefault(platform_render_arg: CPointer<Unit>, renderer_render_arg: CPointer<Unit>): Unit {
    return unsafe { igRenderPlatformWindowsDefault(platform_render_arg, renderer_render_arg) }
}

public func _capi_igRenderRectFilledRangeH(draw_list: CPointer<ImDrawList>, rect: ImRect, col: ImU32, x_start_norm: Float32, x_end_norm: Float32, rounding: Float32): Unit {
    return unsafe { igRenderRectFilledRangeH(draw_list, rect, col, x_start_norm, x_end_norm, rounding) }
}

public func _capi_igRenderRectFilledWithHole(draw_list: CPointer<ImDrawList>, outer: ImRect, inner: ImRect, col: ImU32, rounding: Float32): Unit {
    return unsafe { igRenderRectFilledWithHole(draw_list, outer, inner, col, rounding) }
}

public func _capi_igRenderText(pos: ImVec2, text: CString, text_end: CString, hide_text_after_hash: Bool): Unit {
    return unsafe { igRenderText(pos, text, text_end, hide_text_after_hash) }
}

public func _capi_igRenderTextClipped(pos_min: ImVec2, pos_max: ImVec2, text: CString, text_end: CString, text_size_if_known: CPointer<ImVec2>, align: ImVec2, clip_rect: CPointer<ImRect>): Unit {
    return unsafe { igRenderTextClipped(pos_min, pos_max, text, text_end, text_size_if_known, align, clip_rect) }
}

public func _capi_igRenderTextClippedEx(draw_list: CPointer<ImDrawList>, pos_min: ImVec2, pos_max: ImVec2, text: CString, text_end: CString, text_size_if_known: CPointer<ImVec2>, align: ImVec2, clip_rect: CPointer<ImRect>): Unit {
    return unsafe { igRenderTextClippedEx(draw_list, pos_min, pos_max, text, text_end, text_size_if_known, align, clip_rect) }
}

public func _capi_igRenderTextEllipsis(draw_list: CPointer<ImDrawList>, pos_min: ImVec2, pos_max: ImVec2, clip_max_x: Float32, ellipsis_max_x: Float32, text: CString, text_end: CString, text_size_if_known: CPointer<ImVec2>): Unit {
    return unsafe { igRenderTextEllipsis(draw_list, pos_min, pos_max, clip_max_x, ellipsis_max_x, text, text_end, text_size_if_known) }
}

public func _capi_igRenderTextWrapped(pos: ImVec2, text: CString, text_end: CString, wrap_width: Float32): Unit {
    return unsafe { igRenderTextWrapped(pos, text, text_end, wrap_width) }
}

public func _capi_igResetMouseDragDelta(button: ImGuiMouseButton): Unit {
    return unsafe { igResetMouseDragDelta(button) }
}

public func _capi_igSameLine(offset_from_start_x: Float32, spacing: Float32): Unit {
    return unsafe { igSameLine(offset_from_start_x, spacing) }
}

public func _capi_igSaveIniSettingsToDisk(ini_filename: CString): Unit {
    return unsafe { igSaveIniSettingsToDisk(ini_filename) }
}

public func _capi_igSaveIniSettingsToMemory(out_ini_size: CPointer<UIntNative>): CString {
    return unsafe { igSaveIniSettingsToMemory(out_ini_size) }
}

public func _capi_igScaleWindowsInViewport(viewport: CPointer<ImGuiViewportP>, scale: Float32): Unit {
    return unsafe { igScaleWindowsInViewport(viewport, scale) }
}

public func _capi_igScrollToBringRectIntoView(window: CPointer<ImGuiWindow>, rect: ImRect): Unit {
    return unsafe { igScrollToBringRectIntoView(window, rect) }
}

public func _capi_igScrollToItem(flags: ImGuiScrollFlags): Unit {
    return unsafe { igScrollToItem(flags) }
}

public func _capi_igScrollToRect(window: CPointer<ImGuiWindow>, rect: ImRect, flags: ImGuiScrollFlags): Unit {
    return unsafe { igScrollToRect(window, rect, flags) }
}

public func _capi_igScrollToRectEx(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>, rect: ImRect, flags: ImGuiScrollFlags): Unit {
    return unsafe { igScrollToRectEx(pOut, window, rect, flags) }
}

public func _capi_igScrollbar(axis: ImGuiAxis): Unit {
    return unsafe { igScrollbar(axis) }
}

public func _capi_igScrollbarEx(bb: ImRect, id: ImGuiID, axis: ImGuiAxis, p_scroll_v: CPointer<ImS64>, avail_v: ImS64, contents_v: ImS64, flags: ImDrawFlags): Bool {
    return unsafe { igScrollbarEx(bb, id, axis, p_scroll_v, avail_v, contents_v, flags) }
}

public func _capi_igSelectable_Bool(label: CString, selected: Bool, flags: ImGuiSelectableFlags, size: ImVec2): Bool {
    return unsafe { igSelectable_Bool(label, selected, flags, size) }
}

public func _capi_igSelectable_BoolPtr(label: CString, p_selected: CPointer<Bool>, flags: ImGuiSelectableFlags, size: ImVec2): Bool {
    return unsafe { igSelectable_BoolPtr(label, p_selected, flags, size) }
}

public func _capi_igSeparator(): Unit {
    return unsafe { igSeparator() }
}

public func _capi_igSeparatorEx(flags: ImGuiSeparatorFlags, thickness: Float32): Unit {
    return unsafe { igSeparatorEx(flags, thickness) }
}

public func _capi_igSeparatorText(label: CString): Unit {
    return unsafe { igSeparatorText(label) }
}

public func _capi_igSeparatorTextEx(id: ImGuiID, label: CString, label_end: CString, extra_width: Float32): Unit {
    return unsafe { igSeparatorTextEx(id, label, label_end, extra_width) }
}

public func _capi_igSetActiveID(id: ImGuiID, window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igSetActiveID(id, window) }
}

public func _capi_igSetActiveIdUsingAllKeyboardKeys(): Unit {
    return unsafe { igSetActiveIdUsingAllKeyboardKeys() }
}

public func _capi_igSetAllocatorFunctions(alloc_func: ImGuiMemAllocFunc, free_func: ImGuiMemFreeFunc, user_data: CPointer<Unit>): Unit {
    return unsafe { igSetAllocatorFunctions(alloc_func, free_func, user_data) }
}

public func _capi_igSetClipboardText(text: CString): Unit {
    return unsafe { igSetClipboardText(text) }
}

public func _capi_igSetColorEditOptions(flags: ImGuiColorEditFlags): Unit {
    return unsafe { igSetColorEditOptions(flags) }
}

public func _capi_igSetColumnOffset(column_index: Int32, offset_x: Float32): Unit {
    return unsafe { igSetColumnOffset(column_index, offset_x) }
}

public func _capi_igSetColumnWidth(column_index: Int32, width: Float32): Unit {
    return unsafe { igSetColumnWidth(column_index, width) }
}

public func _capi_igSetCurrentContext(ctx: CPointer<ImGuiContext>): Unit {
    return unsafe { igSetCurrentContext(ctx) }
}

public func _capi_igSetCurrentFont(font: CPointer<ImFont>): Unit {
    return unsafe { igSetCurrentFont(font) }
}

public func _capi_igSetCurrentViewport(window: CPointer<ImGuiWindow>, viewport: CPointer<ImGuiViewportP>): Unit {
    return unsafe { igSetCurrentViewport(window, viewport) }
}

public func _capi_igSetCursorPos(local_pos: ImVec2): Unit {
    return unsafe { igSetCursorPos(local_pos) }
}

public func _capi_igSetCursorPosX(local_x: Float32): Unit {
    return unsafe { igSetCursorPosX(local_x) }
}

public func _capi_igSetCursorPosY(local_y: Float32): Unit {
    return unsafe { igSetCursorPosY(local_y) }
}

public func _capi_igSetCursorScreenPos(pos: ImVec2): Unit {
    return unsafe { igSetCursorScreenPos(pos) }
}

public func _capi_igSetDragDropPayload(`type`: CString, data: CPointer<Unit>, sz: UIntNative, cond: ImGuiCond): Bool {
    return unsafe { igSetDragDropPayload(`type`, data, sz, cond) }
}

public func _capi_igSetFocusID(id: ImGuiID, window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igSetFocusID(id, window) }
}

public func _capi_igSetHoveredID(id: ImGuiID): Unit {
    return unsafe { igSetHoveredID(id) }
}

public func _capi_igSetItemDefaultFocus(): Unit {
    return unsafe { igSetItemDefaultFocus() }
}

public func _capi_igSetItemKeyOwner(key: ImGuiKey, flags: ImGuiInputFlags): Unit {
    return unsafe { igSetItemKeyOwner(key, flags) }
}

public func _capi_igSetItemTooltip(fmt: CString): Unit {
    return unsafe { igSetItemTooltip(fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igSetItemTooltipV(fmt: CString, args: va_list): Unit { ...

public func _capi_igSetKeyOwner(key: ImGuiKey, owner_id: ImGuiID, flags: ImGuiInputFlags): Unit {
    return unsafe { igSetKeyOwner(key, owner_id, flags) }
}

public func _capi_igSetKeyOwnersForKeyChord(key: ImGuiKeyChord, owner_id: ImGuiID, flags: ImGuiInputFlags): Unit {
    return unsafe { igSetKeyOwnersForKeyChord(key, owner_id, flags) }
}

public func _capi_igSetKeyboardFocusHere(offset: Int32): Unit {
    return unsafe { igSetKeyboardFocusHere(offset) }
}

public func _capi_igSetLastItemData(item_id: ImGuiID, in_flags: ImGuiItemFlags, status_flags: ImGuiItemStatusFlags, item_rect: ImRect): Unit {
    return unsafe { igSetLastItemData(item_id, in_flags, status_flags, item_rect) }
}

public func _capi_igSetMouseCursor(cursor_type: ImGuiMouseCursor): Unit {
    return unsafe { igSetMouseCursor(cursor_type) }
}

public func _capi_igSetNavFocusScope(focus_scope_id: ImGuiID): Unit {
    return unsafe { igSetNavFocusScope(focus_scope_id) }
}

public func _capi_igSetNavID(id: ImGuiID, nav_layer: ImGuiNavLayer, focus_scope_id: ImGuiID, rect_rel: ImRect): Unit {
    return unsafe { igSetNavID(id, nav_layer, focus_scope_id, rect_rel) }
}

public func _capi_igSetNavWindow(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igSetNavWindow(window) }
}

public func _capi_igSetNextFrameWantCaptureKeyboard(want_capture_keyboard: Bool): Unit {
    return unsafe { igSetNextFrameWantCaptureKeyboard(want_capture_keyboard) }
}

public func _capi_igSetNextFrameWantCaptureMouse(want_capture_mouse: Bool): Unit {
    return unsafe { igSetNextFrameWantCaptureMouse(want_capture_mouse) }
}

public func _capi_igSetNextItemAllowOverlap(): Unit {
    return unsafe { igSetNextItemAllowOverlap() }
}

public func _capi_igSetNextItemOpen(is_open: Bool, cond: ImGuiCond): Unit {
    return unsafe { igSetNextItemOpen(is_open, cond) }
}

public func _capi_igSetNextItemRefVal(data_type: ImGuiDataType, p_data: CPointer<Unit>): Unit {
    return unsafe { igSetNextItemRefVal(data_type, p_data) }
}

public func _capi_igSetNextItemSelectionUserData(selection_user_data: ImGuiSelectionUserData): Unit {
    return unsafe { igSetNextItemSelectionUserData(selection_user_data) }
}

public func _capi_igSetNextItemShortcut(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags): Unit {
    return unsafe { igSetNextItemShortcut(key_chord, flags) }
}

public func _capi_igSetNextItemWidth(item_width: Float32): Unit {
    return unsafe { igSetNextItemWidth(item_width) }
}

public func _capi_igSetNextWindowBgAlpha(alpha: Float32): Unit {
    return unsafe { igSetNextWindowBgAlpha(alpha) }
}

public func _capi_igSetNextWindowClass(window_class: CPointer<ImGuiWindowClass>): Unit {
    return unsafe { igSetNextWindowClass(window_class) }
}

public func _capi_igSetNextWindowCollapsed(collapsed: Bool, cond: ImGuiCond): Unit {
    return unsafe { igSetNextWindowCollapsed(collapsed, cond) }
}

public func _capi_igSetNextWindowContentSize(size: ImVec2): Unit {
    return unsafe { igSetNextWindowContentSize(size) }
}

public func _capi_igSetNextWindowDockID(dock_id: ImGuiID, cond: ImGuiCond): Unit {
    return unsafe { igSetNextWindowDockID(dock_id, cond) }
}

public func _capi_igSetNextWindowFocus(): Unit {
    return unsafe { igSetNextWindowFocus() }
}

public func _capi_igSetNextWindowPos(pos: ImVec2, cond: ImGuiCond, pivot: ImVec2): Unit {
    return unsafe { igSetNextWindowPos(pos, cond, pivot) }
}

public func _capi_igSetNextWindowRefreshPolicy(flags: ImGuiWindowRefreshFlags): Unit {
    return unsafe { igSetNextWindowRefreshPolicy(flags) }
}

public func _capi_igSetNextWindowScroll(scroll: ImVec2): Unit {
    return unsafe { igSetNextWindowScroll(scroll) }
}

public func _capi_igSetNextWindowSize(size: ImVec2, cond: ImGuiCond): Unit {
    return unsafe { igSetNextWindowSize(size, cond) }
}

public func _capi_igSetNextWindowSizeConstraints(size_min: ImVec2, size_max: ImVec2, custom_callback: ImGuiSizeCallback, custom_callback_data: CPointer<Unit>): Unit {
    return unsafe { igSetNextWindowSizeConstraints(size_min, size_max, custom_callback, custom_callback_data) }
}

public func _capi_igSetNextWindowViewport(viewport_id: ImGuiID): Unit {
    return unsafe { igSetNextWindowViewport(viewport_id) }
}

public func _capi_igSetScrollFromPosX_Float(local_x: Float32, center_x_ratio: Float32): Unit {
    return unsafe { igSetScrollFromPosX_Float(local_x, center_x_ratio) }
}

public func _capi_igSetScrollFromPosX_WindowPtr(window: CPointer<ImGuiWindow>, local_x: Float32, center_x_ratio: Float32): Unit {
    return unsafe { igSetScrollFromPosX_WindowPtr(window, local_x, center_x_ratio) }
}

public func _capi_igSetScrollFromPosY_Float(local_y: Float32, center_y_ratio: Float32): Unit {
    return unsafe { igSetScrollFromPosY_Float(local_y, center_y_ratio) }
}

public func _capi_igSetScrollFromPosY_WindowPtr(window: CPointer<ImGuiWindow>, local_y: Float32, center_y_ratio: Float32): Unit {
    return unsafe { igSetScrollFromPosY_WindowPtr(window, local_y, center_y_ratio) }
}

public func _capi_igSetScrollHereX(center_x_ratio: Float32): Unit {
    return unsafe { igSetScrollHereX(center_x_ratio) }
}

public func _capi_igSetScrollHereY(center_y_ratio: Float32): Unit {
    return unsafe { igSetScrollHereY(center_y_ratio) }
}

public func _capi_igSetScrollX_Float(scroll_x: Float32): Unit {
    return unsafe { igSetScrollX_Float(scroll_x) }
}

public func _capi_igSetScrollX_WindowPtr(window: CPointer<ImGuiWindow>, scroll_x: Float32): Unit {
    return unsafe { igSetScrollX_WindowPtr(window, scroll_x) }
}

public func _capi_igSetScrollY_Float(scroll_y: Float32): Unit {
    return unsafe { igSetScrollY_Float(scroll_y) }
}

public func _capi_igSetScrollY_WindowPtr(window: CPointer<ImGuiWindow>, scroll_y: Float32): Unit {
    return unsafe { igSetScrollY_WindowPtr(window, scroll_y) }
}

public func _capi_igSetShortcutRouting(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool {
    return unsafe { igSetShortcutRouting(key_chord, flags, owner_id) }
}

public func _capi_igSetStateStorage(storage: CPointer<ImGuiStorage>): Unit {
    return unsafe { igSetStateStorage(storage) }
}

public func _capi_igSetTabItemClosed(tab_or_docked_window_label: CString): Unit {
    return unsafe { igSetTabItemClosed(tab_or_docked_window_label) }
}

public func _capi_igSetTooltip(fmt: CString): Unit {
    return unsafe { igSetTooltip(fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igSetTooltipV(fmt: CString, args: va_list): Unit { ...

public func _capi_igSetWindowClipRectBeforeSetChannel(window: CPointer<ImGuiWindow>, clip_rect: ImRect): Unit {
    return unsafe { igSetWindowClipRectBeforeSetChannel(window, clip_rect) }
}

public func _capi_igSetWindowCollapsed_Bool(collapsed: Bool, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowCollapsed_Bool(collapsed, cond) }
}

public func _capi_igSetWindowCollapsed_Str(name: CString, collapsed: Bool, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowCollapsed_Str(name, collapsed, cond) }
}

public func _capi_igSetWindowCollapsed_WindowPtr(window: CPointer<ImGuiWindow>, collapsed: Bool, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowCollapsed_WindowPtr(window, collapsed, cond) }
}

public func _capi_igSetWindowDock(window: CPointer<ImGuiWindow>, dock_id: ImGuiID, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowDock(window, dock_id, cond) }
}

public func _capi_igSetWindowFocus_Nil(): Unit {
    return unsafe { igSetWindowFocus_Nil() }
}

public func _capi_igSetWindowFocus_Str(name: CString): Unit {
    return unsafe { igSetWindowFocus_Str(name) }
}

public func _capi_igSetWindowFontScale(scale: Float32): Unit {
    return unsafe { igSetWindowFontScale(scale) }
}

public func _capi_igSetWindowHiddenAndSkipItemsForCurrentFrame(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igSetWindowHiddenAndSkipItemsForCurrentFrame(window) }
}

public func _capi_igSetWindowHitTestHole(window: CPointer<ImGuiWindow>, pos: ImVec2, size: ImVec2): Unit {
    return unsafe { igSetWindowHitTestHole(window, pos, size) }
}

public func _capi_igSetWindowParentWindowForFocusRoute(window: CPointer<ImGuiWindow>, parent_window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igSetWindowParentWindowForFocusRoute(window, parent_window) }
}

public func _capi_igSetWindowPos_Vec2(pos: ImVec2, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowPos_Vec2(pos, cond) }
}

public func _capi_igSetWindowPos_Str(name: CString, pos: ImVec2, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowPos_Str(name, pos, cond) }
}

public func _capi_igSetWindowPos_WindowPtr(window: CPointer<ImGuiWindow>, pos: ImVec2, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowPos_WindowPtr(window, pos, cond) }
}

public func _capi_igSetWindowSize_Vec2(size: ImVec2, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowSize_Vec2(size, cond) }
}

public func _capi_igSetWindowSize_Str(name: CString, size: ImVec2, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowSize_Str(name, size, cond) }
}

public func _capi_igSetWindowSize_WindowPtr(window: CPointer<ImGuiWindow>, size: ImVec2, cond: ImGuiCond): Unit {
    return unsafe { igSetWindowSize_WindowPtr(window, size, cond) }
}

public func _capi_igSetWindowViewport(window: CPointer<ImGuiWindow>, viewport: CPointer<ImGuiViewportP>): Unit {
    return unsafe { igSetWindowViewport(window, viewport) }
}

public func _capi_igShadeVertsLinearColorGradientKeepAlpha(draw_list: CPointer<ImDrawList>, vert_start_idx: Int32, vert_end_idx: Int32, gradient_p0: ImVec2, gradient_p1: ImVec2, col0: ImU32, col1: ImU32): Unit {
    return unsafe { igShadeVertsLinearColorGradientKeepAlpha(draw_list, vert_start_idx, vert_end_idx, gradient_p0, gradient_p1, col0, col1) }
}

public func _capi_igShadeVertsLinearUV(draw_list: CPointer<ImDrawList>, vert_start_idx: Int32, vert_end_idx: Int32, a: ImVec2, b: ImVec2, uv_a: ImVec2, uv_b: ImVec2, clamp: Bool): Unit {
    return unsafe { igShadeVertsLinearUV(draw_list, vert_start_idx, vert_end_idx, a, b, uv_a, uv_b, clamp) }
}

public func _capi_igShadeVertsTransformPos(draw_list: CPointer<ImDrawList>, vert_start_idx: Int32, vert_end_idx: Int32, pivot_in: ImVec2, cos_a: Float32, sin_a: Float32, pivot_out: ImVec2): Unit {
    return unsafe { igShadeVertsTransformPos(draw_list, vert_start_idx, vert_end_idx, pivot_in, cos_a, sin_a, pivot_out) }
}

public func _capi_igShortcut_Nil(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags): Bool {
    return unsafe { igShortcut_Nil(key_chord, flags) }
}

public func _capi_igShortcut_ID(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags, owner_id: ImGuiID): Bool {
    return unsafe { igShortcut_ID(key_chord, flags, owner_id) }
}

public func _capi_igShowAboutWindow(p_open: CPointer<Bool>): Unit {
    return unsafe { igShowAboutWindow(p_open) }
}

public func _capi_igShowDebugLogWindow(p_open: CPointer<Bool>): Unit {
    return unsafe { igShowDebugLogWindow(p_open) }
}

public func _capi_igShowDemoWindow(p_open: CPointer<Bool>): Unit {
    return unsafe { igShowDemoWindow(p_open) }
}

public func _capi_igShowFontAtlas(atlas: CPointer<ImFontAtlas>): Unit {
    return unsafe { igShowFontAtlas(atlas) }
}

public func _capi_igShowFontSelector(label: CString): Unit {
    return unsafe { igShowFontSelector(label) }
}

public func _capi_igShowIDStackToolWindow(p_open: CPointer<Bool>): Unit {
    return unsafe { igShowIDStackToolWindow(p_open) }
}

public func _capi_igShowMetricsWindow(p_open: CPointer<Bool>): Unit {
    return unsafe { igShowMetricsWindow(p_open) }
}

public func _capi_igShowStyleEditor(ref: CPointer<ImGuiStyle>): Unit {
    return unsafe { igShowStyleEditor(ref) }
}

public func _capi_igShowStyleSelector(label: CString): Bool {
    return unsafe { igShowStyleSelector(label) }
}

public func _capi_igShowUserGuide(): Unit {
    return unsafe { igShowUserGuide() }
}

public func _capi_igShrinkWidths(items: CPointer<ImGuiShrinkWidthItem>, count: Int32, width_excess: Float32): Unit {
    return unsafe { igShrinkWidths(items, count, width_excess) }
}

public func _capi_igShutdown(): Unit {
    return unsafe { igShutdown() }
}

public func _capi_igSliderAngle(label: CString, v_rad: CPointer<Float32>, v_degrees_min: Float32, v_degrees_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderAngle(label, v_rad, v_degrees_min, v_degrees_max, format, flags) }
}

public func _capi_igSliderBehavior(bb: ImRect, id: ImGuiID, data_type: ImGuiDataType, p_v: CPointer<Unit>, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags, out_grab_bb: CPointer<ImRect>): Bool {
    return unsafe { igSliderBehavior(bb, id, data_type, p_v, p_min, p_max, format, flags, out_grab_bb) }
}

public func _capi_igSliderFloat(label: CString, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderFloat(label, v, v_min, v_max, format, flags) }
}

public func _capi_igSliderFloat2(label: CString, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderFloat2(label, v, v_min, v_max, format, flags) }
}

public func _capi_igSliderFloat3(label: CString, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderFloat3(label, v, v_min, v_max, format, flags) }
}

public func _capi_igSliderFloat4(label: CString, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderFloat4(label, v, v_min, v_max, format, flags) }
}

public func _capi_igSliderInt(label: CString, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderInt(label, v, v_min, v_max, format, flags) }
}

public func _capi_igSliderInt2(label: CString, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderInt2(label, v, v_min, v_max, format, flags) }
}

public func _capi_igSliderInt3(label: CString, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderInt3(label, v, v_min, v_max, format, flags) }
}

public func _capi_igSliderInt4(label: CString, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderInt4(label, v, v_min, v_max, format, flags) }
}

public func _capi_igSliderScalar(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderScalar(label, data_type, p_data, p_min, p_max, format, flags) }
}

public func _capi_igSliderScalarN(label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, components: Int32, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igSliderScalarN(label, data_type, p_data, components, p_min, p_max, format, flags) }
}

public func _capi_igSmallButton(label: CString): Bool {
    return unsafe { igSmallButton(label) }
}

public func _capi_igSpacing(): Unit {
    return unsafe { igSpacing() }
}

public func _capi_igSplitterBehavior(bb: ImRect, id: ImGuiID, axis: ImGuiAxis, size1: CPointer<Float32>, size2: CPointer<Float32>, min_size1: Float32, min_size2: Float32, hover_extend: Float32, hover_visibility_delay: Float32, bg_col: ImU32): Bool {
    return unsafe { igSplitterBehavior(bb, id, axis, size1, size2, min_size1, min_size2, hover_extend, hover_visibility_delay, bg_col) }
}

public func _capi_igStartMouseMovingWindow(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igStartMouseMovingWindow(window) }
}

public func _capi_igStartMouseMovingWindowOrNode(window: CPointer<ImGuiWindow>, node: CPointer<ImGuiDockNode>, undock: Bool): Unit {
    return unsafe { igStartMouseMovingWindowOrNode(window, node, undock) }
}

public func _capi_igStyleColorsClassic(dst: CPointer<ImGuiStyle>): Unit {
    return unsafe { igStyleColorsClassic(dst) }
}

public func _capi_igStyleColorsDark(dst: CPointer<ImGuiStyle>): Unit {
    return unsafe { igStyleColorsDark(dst) }
}

public func _capi_igStyleColorsLight(dst: CPointer<ImGuiStyle>): Unit {
    return unsafe { igStyleColorsLight(dst) }
}

public func _capi_igTabBarAddTab(tab_bar: CPointer<ImGuiTabBar>, tab_flags: ImGuiTabItemFlags, window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igTabBarAddTab(tab_bar, tab_flags, window) }
}

public func _capi_igTabBarCloseTab(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>): Unit {
    return unsafe { igTabBarCloseTab(tab_bar, tab) }
}

public func _capi_igTabBarFindMostRecentlySelectedTabForActiveWindow(tab_bar: CPointer<ImGuiTabBar>): CPointer<ImGuiTabItem> {
    return unsafe { igTabBarFindMostRecentlySelectedTabForActiveWindow(tab_bar) }
}

public func _capi_igTabBarFindTabByID(tab_bar: CPointer<ImGuiTabBar>, tab_id: ImGuiID): CPointer<ImGuiTabItem> {
    return unsafe { igTabBarFindTabByID(tab_bar, tab_id) }
}

public func _capi_igTabBarFindTabByOrder(tab_bar: CPointer<ImGuiTabBar>, order: Int32): CPointer<ImGuiTabItem> {
    return unsafe { igTabBarFindTabByOrder(tab_bar, order) }
}

public func _capi_igTabBarGetCurrentTab(tab_bar: CPointer<ImGuiTabBar>): CPointer<ImGuiTabItem> {
    return unsafe { igTabBarGetCurrentTab(tab_bar) }
}

public func _capi_igTabBarGetTabName(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>): CString {
    return unsafe { igTabBarGetTabName(tab_bar, tab) }
}

public func _capi_igTabBarGetTabOrder(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>): Int32 {
    return unsafe { igTabBarGetTabOrder(tab_bar, tab) }
}

public func _capi_igTabBarProcessReorder(tab_bar: CPointer<ImGuiTabBar>): Bool {
    return unsafe { igTabBarProcessReorder(tab_bar) }
}

public func _capi_igTabBarQueueFocus(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>): Unit {
    return unsafe { igTabBarQueueFocus(tab_bar, tab) }
}

public func _capi_igTabBarQueueReorder(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>, offset: Int32): Unit {
    return unsafe { igTabBarQueueReorder(tab_bar, tab, offset) }
}

public func _capi_igTabBarQueueReorderFromMousePos(tab_bar: CPointer<ImGuiTabBar>, tab: CPointer<ImGuiTabItem>, mouse_pos: ImVec2): Unit {
    return unsafe { igTabBarQueueReorderFromMousePos(tab_bar, tab, mouse_pos) }
}

public func _capi_igTabBarRemoveTab(tab_bar: CPointer<ImGuiTabBar>, tab_id: ImGuiID): Unit {
    return unsafe { igTabBarRemoveTab(tab_bar, tab_id) }
}

public func _capi_igTabItemBackground(draw_list: CPointer<ImDrawList>, bb: ImRect, flags: ImGuiTabItemFlags, col: ImU32): Unit {
    return unsafe { igTabItemBackground(draw_list, bb, flags, col) }
}

public func _capi_igTabItemButton(label: CString, flags: ImGuiTabItemFlags): Bool {
    return unsafe { igTabItemButton(label, flags) }
}

public func _capi_igTabItemCalcSize_Str(pOut: CPointer<ImVec2>, label: CString, has_close_button_or_unsaved_marker: Bool): Unit {
    return unsafe { igTabItemCalcSize_Str(pOut, label, has_close_button_or_unsaved_marker) }
}

public func _capi_igTabItemCalcSize_WindowPtr(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igTabItemCalcSize_WindowPtr(pOut, window) }
}

public func _capi_igTabItemEx(tab_bar: CPointer<ImGuiTabBar>, label: CString, p_open: CPointer<Bool>, flags: ImGuiTabItemFlags, docked_window: CPointer<ImGuiWindow>): Bool {
    return unsafe { igTabItemEx(tab_bar, label, p_open, flags, docked_window) }
}

public func _capi_igTabItemLabelAndCloseButton(draw_list: CPointer<ImDrawList>, bb: ImRect, flags: ImGuiTabItemFlags, frame_padding: ImVec2, label: CString, tab_id: ImGuiID, close_button_id: ImGuiID, is_contents_visible: Bool, out_just_closed: CPointer<Bool>, out_text_clipped: CPointer<Bool>): Unit {
    return unsafe { igTabItemLabelAndCloseButton(draw_list, bb, flags, frame_padding, label, tab_id, close_button_id, is_contents_visible, out_just_closed, out_text_clipped) }
}

public func _capi_igTableAngledHeadersRow(): Unit {
    return unsafe { igTableAngledHeadersRow() }
}

public func _capi_igTableAngledHeadersRowEx(row_id: ImGuiID, angle: Float32, max_label_width: Float32, data: CPointer<ImGuiTableHeaderData>, data_count: Int32): Unit {
    return unsafe { igTableAngledHeadersRowEx(row_id, angle, max_label_width, data, data_count) }
}

public func _capi_igTableBeginApplyRequests(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableBeginApplyRequests(table) }
}

public func _capi_igTableBeginCell(table: CPointer<ImGuiTable>, column_n: Int32): Unit {
    return unsafe { igTableBeginCell(table, column_n) }
}

public func _capi_igTableBeginContextMenuPopup(table: CPointer<ImGuiTable>): Bool {
    return unsafe { igTableBeginContextMenuPopup(table) }
}

public func _capi_igTableBeginInitMemory(table: CPointer<ImGuiTable>, columns_count: Int32): Unit {
    return unsafe { igTableBeginInitMemory(table, columns_count) }
}

public func _capi_igTableBeginRow(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableBeginRow(table) }
}

public func _capi_igTableDrawBorders(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableDrawBorders(table) }
}

public func _capi_igTableDrawDefaultContextMenu(table: CPointer<ImGuiTable>, flags_for_section_to_display: ImGuiTableFlags): Unit {
    return unsafe { igTableDrawDefaultContextMenu(table, flags_for_section_to_display) }
}

public func _capi_igTableEndCell(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableEndCell(table) }
}

public func _capi_igTableEndRow(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableEndRow(table) }
}

public func _capi_igTableFindByID(id: ImGuiID): CPointer<ImGuiTable> {
    return unsafe { igTableFindByID(id) }
}

public func _capi_igTableFixColumnSortDirection(table: CPointer<ImGuiTable>, column: CPointer<ImGuiTableColumn>): Unit {
    return unsafe { igTableFixColumnSortDirection(table, column) }
}

public func _capi_igTableGcCompactSettings(): Unit {
    return unsafe { igTableGcCompactSettings() }
}

public func _capi_igTableGcCompactTransientBuffers_TablePtr(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableGcCompactTransientBuffers_TablePtr(table) }
}

public func _capi_igTableGcCompactTransientBuffers_TableTempDataPtr(table: CPointer<ImGuiTableTempData>): Unit {
    return unsafe { igTableGcCompactTransientBuffers_TableTempDataPtr(table) }
}

public func _capi_igTableGetBoundSettings(table: CPointer<ImGuiTable>): CPointer<ImGuiTableSettings> {
    return unsafe { igTableGetBoundSettings(table) }
}

public func _capi_igTableGetCellBgRect(pOut: CPointer<ImRect>, table: CPointer<ImGuiTable>, column_n: Int32): Unit {
    return unsafe { igTableGetCellBgRect(pOut, table, column_n) }
}

public func _capi_igTableGetColumnCount(): Int32 {
    return unsafe { igTableGetColumnCount() }
}

public func _capi_igTableGetColumnFlags(column_n: Int32): ImGuiTableColumnFlags {
    return unsafe { igTableGetColumnFlags(column_n) }
}

public func _capi_igTableGetColumnIndex(): Int32 {
    return unsafe { igTableGetColumnIndex() }
}

public func _capi_igTableGetColumnName_Int(column_n: Int32): CString {
    return unsafe { igTableGetColumnName_Int(column_n) }
}

public func _capi_igTableGetColumnName_TablePtr(table: CPointer<ImGuiTable>, column_n: Int32): CString {
    return unsafe { igTableGetColumnName_TablePtr(table, column_n) }
}

public func _capi_igTableGetColumnNextSortDirection(column: CPointer<ImGuiTableColumn>): ImGuiSortDirection {
    return unsafe { igTableGetColumnNextSortDirection(column) }
}

public func _capi_igTableGetColumnResizeID(table: CPointer<ImGuiTable>, column_n: Int32, instance_no: Int32): ImGuiID {
    return unsafe { igTableGetColumnResizeID(table, column_n, instance_no) }
}

public func _capi_igTableGetColumnWidthAuto(table: CPointer<ImGuiTable>, column: CPointer<ImGuiTableColumn>): Float32 {
    return unsafe { igTableGetColumnWidthAuto(table, column) }
}

public func _capi_igTableGetHeaderAngledMaxLabelWidth(): Float32 {
    return unsafe { igTableGetHeaderAngledMaxLabelWidth() }
}

public func _capi_igTableGetHeaderRowHeight(): Float32 {
    return unsafe { igTableGetHeaderRowHeight() }
}

public func _capi_igTableGetHoveredColumn(): Int32 {
    return unsafe { igTableGetHoveredColumn() }
}

public func _capi_igTableGetHoveredRow(): Int32 {
    return unsafe { igTableGetHoveredRow() }
}

public func _capi_igTableGetInstanceData(table: CPointer<ImGuiTable>, instance_no: Int32): CPointer<ImGuiTableInstanceData> {
    return unsafe { igTableGetInstanceData(table, instance_no) }
}

public func _capi_igTableGetInstanceID(table: CPointer<ImGuiTable>, instance_no: Int32): ImGuiID {
    return unsafe { igTableGetInstanceID(table, instance_no) }
}

public func _capi_igTableGetMaxColumnWidth(table: CPointer<ImGuiTable>, column_n: Int32): Float32 {
    return unsafe { igTableGetMaxColumnWidth(table, column_n) }
}

public func _capi_igTableGetRowIndex(): Int32 {
    return unsafe { igTableGetRowIndex() }
}

public func _capi_igTableGetSortSpecs(): CPointer<ImGuiTableSortSpecs> {
    return unsafe { igTableGetSortSpecs() }
}

public func _capi_igTableHeader(label: CString): Unit {
    return unsafe { igTableHeader(label) }
}

public func _capi_igTableHeadersRow(): Unit {
    return unsafe { igTableHeadersRow() }
}

public func _capi_igTableLoadSettings(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableLoadSettings(table) }
}

public func _capi_igTableMergeDrawChannels(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableMergeDrawChannels(table) }
}

public func _capi_igTableNextColumn(): Bool {
    return unsafe { igTableNextColumn() }
}

public func _capi_igTableNextRow(row_flags: ImGuiTableRowFlags, min_row_height: Float32): Unit {
    return unsafe { igTableNextRow(row_flags, min_row_height) }
}

public func _capi_igTableOpenContextMenu(column_n: Int32): Unit {
    return unsafe { igTableOpenContextMenu(column_n) }
}

public func _capi_igTablePopBackgroundChannel(): Unit {
    return unsafe { igTablePopBackgroundChannel() }
}

public func _capi_igTablePushBackgroundChannel(): Unit {
    return unsafe { igTablePushBackgroundChannel() }
}

public func _capi_igTableRemove(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableRemove(table) }
}

public func _capi_igTableResetSettings(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableResetSettings(table) }
}

public func _capi_igTableSaveSettings(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableSaveSettings(table) }
}

public func _capi_igTableSetBgColor(target: ImGuiTableBgTarget, color: ImU32, column_n: Int32): Unit {
    return unsafe { igTableSetBgColor(target, color, column_n) }
}

public func _capi_igTableSetColumnEnabled(column_n: Int32, v: Bool): Unit {
    return unsafe { igTableSetColumnEnabled(column_n, v) }
}

public func _capi_igTableSetColumnIndex(column_n: Int32): Bool {
    return unsafe { igTableSetColumnIndex(column_n) }
}

public func _capi_igTableSetColumnSortDirection(column_n: Int32, sort_direction: ImGuiSortDirection, append_to_sort_specs: Bool): Unit {
    return unsafe { igTableSetColumnSortDirection(column_n, sort_direction, append_to_sort_specs) }
}

public func _capi_igTableSetColumnWidth(column_n: Int32, width: Float32): Unit {
    return unsafe { igTableSetColumnWidth(column_n, width) }
}

public func _capi_igTableSetColumnWidthAutoAll(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableSetColumnWidthAutoAll(table) }
}

public func _capi_igTableSetColumnWidthAutoSingle(table: CPointer<ImGuiTable>, column_n: Int32): Unit {
    return unsafe { igTableSetColumnWidthAutoSingle(table, column_n) }
}

public func _capi_igTableSettingsAddSettingsHandler(): Unit {
    return unsafe { igTableSettingsAddSettingsHandler() }
}

public func _capi_igTableSettingsCreate(id: ImGuiID, columns_count: Int32): CPointer<ImGuiTableSettings> {
    return unsafe { igTableSettingsCreate(id, columns_count) }
}

public func _capi_igTableSettingsFindByID(id: ImGuiID): CPointer<ImGuiTableSettings> {
    return unsafe { igTableSettingsFindByID(id) }
}

public func _capi_igTableSetupColumn(label: CString, flags: ImGuiTableColumnFlags, init_width_or_weight: Float32, user_id: ImGuiID): Unit {
    return unsafe { igTableSetupColumn(label, flags, init_width_or_weight, user_id) }
}

public func _capi_igTableSetupDrawChannels(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableSetupDrawChannels(table) }
}

public func _capi_igTableSetupScrollFreeze(cols: Int32, rows: Int32): Unit {
    return unsafe { igTableSetupScrollFreeze(cols, rows) }
}

public func _capi_igTableSortSpecsBuild(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableSortSpecsBuild(table) }
}

public func _capi_igTableSortSpecsSanitize(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableSortSpecsSanitize(table) }
}

public func _capi_igTableUpdateBorders(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableUpdateBorders(table) }
}

public func _capi_igTableUpdateColumnsWeightFromWidth(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableUpdateColumnsWeightFromWidth(table) }
}

public func _capi_igTableUpdateLayout(table: CPointer<ImGuiTable>): Unit {
    return unsafe { igTableUpdateLayout(table) }
}

public func _capi_igTeleportMousePos(pos: ImVec2): Unit {
    return unsafe { igTeleportMousePos(pos) }
}

public func _capi_igTempInputIsActive(id: ImGuiID): Bool {
    return unsafe { igTempInputIsActive(id) }
}

public func _capi_igTempInputScalar(bb: ImRect, id: ImGuiID, label: CString, data_type: ImGuiDataType, p_data: CPointer<Unit>, format: CString, p_clamp_min: CPointer<Unit>, p_clamp_max: CPointer<Unit>): Bool {
    return unsafe { igTempInputScalar(bb, id, label, data_type, p_data, format, p_clamp_min, p_clamp_max) }
}

public func _capi_igTempInputText(bb: ImRect, id: ImGuiID, label: CString, buf: CString, buf_size: Int32, flags: ImGuiInputTextFlags): Bool {
    return unsafe { igTempInputText(bb, id, label, buf, buf_size, flags) }
}

public func _capi_igTestKeyOwner(key: ImGuiKey, owner_id: ImGuiID): Bool {
    return unsafe { igTestKeyOwner(key, owner_id) }
}

public func _capi_igTestShortcutRouting(key_chord: ImGuiKeyChord, owner_id: ImGuiID): Bool {
    return unsafe { igTestShortcutRouting(key_chord, owner_id) }
}

public func _capi_igText(fmt: CString): Unit {
    return unsafe { igText(fmt) }
}

public func _capi_igTextColored(col: ImVec4, fmt: CString): Unit {
    return unsafe { igTextColored(col, fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igTextColoredV(col: ImVec4, fmt: CString, args: va_list): Unit { ...

public func _capi_igTextDisabled(fmt: CString): Unit {
    return unsafe { igTextDisabled(fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igTextDisabledV(fmt: CString, args: va_list): Unit { ...

public func _capi_igTextEx(text: CString, text_end: CString, flags: ImGuiTextFlags): Unit {
    return unsafe { igTextEx(text, text_end, flags) }
}

public func _capi_igTextUnformatted(text: CString, text_end: CString): Unit {
    return unsafe { igTextUnformatted(text, text_end) }
}

// Cangjie does not support `va_list`
// public func _capi_igTextV(fmt: CString, args: va_list): Unit { ...

public func _capi_igTextWrapped(fmt: CString): Unit {
    return unsafe { igTextWrapped(fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igTextWrappedV(fmt: CString, args: va_list): Unit { ...

public func _capi_igTranslateWindowsInViewport(viewport: CPointer<ImGuiViewportP>, old_pos: ImVec2, new_pos: ImVec2): Unit {
    return unsafe { igTranslateWindowsInViewport(viewport, old_pos, new_pos) }
}

public func _capi_igTreeNode_Str(label: CString): Bool {
    return unsafe { igTreeNode_Str(label) }
}

public func _capi_igTreeNode_StrStr(str_id: CString, fmt: CString): Bool {
    return unsafe { igTreeNode_StrStr(str_id, fmt) }
}

public func _capi_igTreeNode_Ptr(ptr_id: CPointer<Unit>, fmt: CString): Bool {
    return unsafe { igTreeNode_Ptr(ptr_id, fmt) }
}

public func _capi_igTreeNodeBehavior(id: ImGuiID, flags: ImGuiTreeNodeFlags, label: CString, label_end: CString): Bool {
    return unsafe { igTreeNodeBehavior(id, flags, label, label_end) }
}

public func _capi_igTreeNodeEx_Str(label: CString, flags: ImGuiTreeNodeFlags): Bool {
    return unsafe { igTreeNodeEx_Str(label, flags) }
}

public func _capi_igTreeNodeEx_StrStr(str_id: CString, flags: ImGuiTreeNodeFlags, fmt: CString): Bool {
    return unsafe { igTreeNodeEx_StrStr(str_id, flags, fmt) }
}

public func _capi_igTreeNodeEx_Ptr(ptr_id: CPointer<Unit>, flags: ImGuiTreeNodeFlags, fmt: CString): Bool {
    return unsafe { igTreeNodeEx_Ptr(ptr_id, flags, fmt) }
}

// Cangjie does not support `va_list`
// public func _capi_igTreeNodeExV_Str(str_id: CString, flags: ImGuiTreeNodeFlags, fmt: CString, args: va_list): Bool { ...

// Cangjie does not support `va_list`
// public func _capi_igTreeNodeExV_Ptr(ptr_id: CPointer<Unit>, flags: ImGuiTreeNodeFlags, fmt: CString, args: va_list): Bool { ...

public func _capi_igTreeNodeSetOpen(id: ImGuiID, `open`: Bool): Unit {
    return unsafe { igTreeNodeSetOpen(id, `open`) }
}

public func _capi_igTreeNodeUpdateNextOpen(id: ImGuiID, flags: ImGuiTreeNodeFlags): Bool {
    return unsafe { igTreeNodeUpdateNextOpen(id, flags) }
}

// Cangjie does not support `va_list`
// public func _capi_igTreeNodeV_Str(str_id: CString, fmt: CString, args: va_list): Bool { ...

// Cangjie does not support `va_list`
// public func _capi_igTreeNodeV_Ptr(ptr_id: CPointer<Unit>, fmt: CString, args: va_list): Bool { ...

public func _capi_igTreePop(): Unit {
    return unsafe { igTreePop() }
}

public func _capi_igTreePush_Str(str_id: CString): Unit {
    return unsafe { igTreePush_Str(str_id) }
}

public func _capi_igTreePush_Ptr(ptr_id: CPointer<Unit>): Unit {
    return unsafe { igTreePush_Ptr(ptr_id) }
}

public func _capi_igTreePushOverrideID(id: ImGuiID): Unit {
    return unsafe { igTreePushOverrideID(id) }
}

public func _capi_igTypingSelectFindBestLeadingMatch(req: CPointer<ImGuiTypingSelectRequest>, items_count: Int32, get_item_name_func: CFunc<(arg1: CPointer<Unit>, arg2: Int32) -> CString>, user_data: CPointer<Unit>): Int32 {
    return unsafe { igTypingSelectFindBestLeadingMatch(req, items_count, get_item_name_func, user_data) }
}

public func _capi_igTypingSelectFindMatch(req: CPointer<ImGuiTypingSelectRequest>, items_count: Int32, get_item_name_func: CFunc<(arg1: CPointer<Unit>, arg2: Int32) -> CString>, user_data: CPointer<Unit>, nav_item_idx: Int32): Int32 {
    return unsafe { igTypingSelectFindMatch(req, items_count, get_item_name_func, user_data, nav_item_idx) }
}

public func _capi_igTypingSelectFindNextSingleCharMatch(req: CPointer<ImGuiTypingSelectRequest>, items_count: Int32, get_item_name_func: CFunc<(arg1: CPointer<Unit>, arg2: Int32) -> CString>, user_data: CPointer<Unit>, nav_item_idx: Int32): Int32 {
    return unsafe { igTypingSelectFindNextSingleCharMatch(req, items_count, get_item_name_func, user_data, nav_item_idx) }
}

public func _capi_igUnindent(indent_w: Float32): Unit {
    return unsafe { igUnindent(indent_w) }
}

public func _capi_igUpdateHoveredWindowAndCaptureFlags(): Unit {
    return unsafe { igUpdateHoveredWindowAndCaptureFlags() }
}

public func _capi_igUpdateInputEvents(trickle_fast_inputs: Bool): Unit {
    return unsafe { igUpdateInputEvents(trickle_fast_inputs) }
}

public func _capi_igUpdateMouseMovingWindowEndFrame(): Unit {
    return unsafe { igUpdateMouseMovingWindowEndFrame() }
}

public func _capi_igUpdateMouseMovingWindowNewFrame(): Unit {
    return unsafe { igUpdateMouseMovingWindowNewFrame() }
}

public func _capi_igUpdatePlatformWindows(): Unit {
    return unsafe { igUpdatePlatformWindows() }
}

public func _capi_igUpdateWindowParentAndRootLinks(window: CPointer<ImGuiWindow>, flags: ImGuiWindowFlags, parent_window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igUpdateWindowParentAndRootLinks(window, flags, parent_window) }
}

public func _capi_igUpdateWindowSkipRefresh(window: CPointer<ImGuiWindow>): Unit {
    return unsafe { igUpdateWindowSkipRefresh(window) }
}

public func _capi_igVSliderFloat(label: CString, size: ImVec2, v: CPointer<Float32>, v_min: Float32, v_max: Float32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igVSliderFloat(label, size, v, v_min, v_max, format, flags) }
}

public func _capi_igVSliderInt(label: CString, size: ImVec2, v: CPointer<Int32>, v_min: Int32, v_max: Int32, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igVSliderInt(label, size, v, v_min, v_max, format, flags) }
}

public func _capi_igVSliderScalar(label: CString, size: ImVec2, data_type: ImGuiDataType, p_data: CPointer<Unit>, p_min: CPointer<Unit>, p_max: CPointer<Unit>, format: CString, flags: ImGuiSliderFlags): Bool {
    return unsafe { igVSliderScalar(label, size, data_type, p_data, p_min, p_max, format, flags) }
}

public func _capi_igValue_Bool(prefix: CString, b: Bool): Unit {
    return unsafe { igValue_Bool(prefix, b) }
}

public func _capi_igValue_Int(prefix: CString, v: Int32): Unit {
    return unsafe { igValue_Int(prefix, v) }
}

public func _capi_igValue_Uint(prefix: CString, v: Int32): Unit {
    return unsafe { igValue_Uint(prefix, v) }
}

public func _capi_igValue_Float(prefix: CString, v: Float32, float_format: CString): Unit {
    return unsafe { igValue_Float(prefix, v, float_format) }
}

public func _capi_igWindowPosRelToAbs(pOut: CPointer<ImVec2>, window: CPointer<ImGuiWindow>, p: ImVec2): Unit {
    return unsafe { igWindowPosRelToAbs(pOut, window, p) }
}

public func _capi_igWindowRectAbsToRel(pOut: CPointer<ImRect>, window: CPointer<ImGuiWindow>, r: ImRect): Unit {
    return unsafe { igWindowRectAbsToRel(pOut, window, r) }
}

public func _capi_igWindowRectRelToAbs(pOut: CPointer<ImRect>, window: CPointer<ImGuiWindow>, r: ImRect): Unit {
    return unsafe { igWindowRectRelToAbs(pOut, window, r) }
}
